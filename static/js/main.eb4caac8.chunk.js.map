{"version":3,"sources":["components/header/header.js","components/common/my-dropdown.js","components/common/my-alert.js","api/HTTP.js","api/index.js","components/cars/form-add.js","components/cars/card-form-wrapper-cars.js","components/common/my-carousels.js","components/cars/card-detail-cars.js","components/common/my-search-bar.js","components/cars/search-field.js","components/common/my-pagination.js","components/common/my-spinner.js","components/cars/page-cars.js","components/customers/form-add.js","components/customers/card-form-wrapper-customers.js","components/common/my-table.js","components/customers/page-customers.js","components/items/form-add.js","components/items/card-form-wrapper-items.js","components/items/page-items.js","components/sales/preRowContent.js","components/sales/table-add.js","components/sales/card-form-wrapper-sales.js","components/sales/page-sales.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Header","props","currentPathname","history","location","pathname","push","state","navInfo","text","href","this","listen","setState","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","map","item","idx","Link","as","to","key","React","Component","withRouter","MyDropdown","handleDropDownClick","event","preventDefault","$","target","nextElementSibling","slideToggle","handleDropDownItemClick","userInput","innerText","value","label","transferMsg","getAttribute","parentElement","data","control","invisibleLabel","dataId","Form","Label","onClick","style","height","length","cursor","data-id","MyAlert","toggleAlert","timeStamp","preProps","preStates","s","css","type","role","display","width","aria-label","aria-hidden","httpRequest","url","paramStr","Object","keys","forEach","substring","axios","get","fd","FormData","append","i","post","headers","baseUrl","requestCustomersQuery","queryCondition","CardFormAdd","msg","ownerId","tmp","jsonData","modelPreContent","informAlert","alert","Date","now","handleChange","e","prevState","assign","handleClick","car","plateNumber","year","color","owner","brand","model","isLoading","then","r","err_code","fromFormToParent","date","getFullYear","carImages","domCloseIcon","document","getElementsByClassName","click","console","log","catch","err","onDrop","picture","requestData","pageCount","ownersId","ownersName","customers","_id","name","ownersCount","customersCount","brandPreContent","v","myDate","colorPreContent","textAlign","onChange","withIcon","buttonText","imgExtension","maxFileSize","withPreview","Row","Button","variant","position","disabled","right","CardFormWrapperCars","toggleClass","fromWrapperToParent","Card","Body","MyCarousels","Carousel","interval","imageURLs","Item","minBlockSize","alt","effect","src","Caption","CardDetailCars","MySearchBar","fields","enterTriggerSearch","keyCode","clickTriggerSearch","data-toggle","aria-haspopup","aria-expanded","onKeyUp","SearchField","carPreContent","fromSearchFieldToParent","arrayCopy","ownerPreContent","searchField","searchText","MyPagination","currentPageCount","parseInt","fromPaginationToParent","dataCount","dataPerPage","totalPagesCount","Math","ceil","arr","startPageCount","endPageCount","count","lastValue","splice","firstValue","unshift","margin","MySpinner","left","bottom","zIndex","PageCars","transferMsgFromPagination","a","requestCarsQuery","cars","carsCount","padding","marginBottom","FormAdd","test","phone","customer","email","top","CardFormWrapperCustomers","MyTable","contents","Table","hover","responsive","PageCustomer","validation","amount","price","transition","CardFormWrapperItems","PageItems","items","itemsCount","PreRowContent","handleDropDownChange","index","preMsg","productsItems","servicesItems","productsName","servicesName","pre","rowIdx","TableAdd","rollBackArray","sort","filterTheArray","filter","isDisableButton","products","services","calculateTotalPrice","isVAT","gross","VAT","total","checked","newMsg","parseFloat","toFixed","preInput","selectedItems","colSpan","marginRight","CardFormWrapperSales","PageSales","App","path","component","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.eb4caac8.chunk.js","sourcesContent":["import React from 'react';\nimport {Nav, Navbar} from \"react-bootstrap\";\nimport {withRouter, Link} from 'react-router-dom'\n\n// 每个组件有个prop，prop可以通过'prop.'的方式拿到自定义组件标签里的任一属性\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        let currentPathname = this.props.history.location.pathname\n        if (currentPathname === \"/\") {\n            currentPathname = \"/sales\"\n            this.props.history.push(\"/sales\")\n        }\n        this.state = {\n            currentPathname: currentPathname,\n            navInfo: [\n                {\n                    text: \"SALES\",\n                    href: \"/sales\"\n                },\n                {\n                    text: \"CARS\",\n                    href: \"/cars\"\n                },\n                {\n                    text: \"CUSTOMERS\",\n                    href: \"/customers\"\n                },\n                {\n                    text: \"PRODUCTS/SERVICES\",\n                    href: \"/items\"\n                }\n            ]\n        };\n    }\n\n    componentDidMount() {\n        this.props.history.listen((location) => {\n            let currentPathname = location.pathname\n            this.setState({currentPathname})\n        })\n    }\n\n\n    render() {\n        return(\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"/sales\">The One Car POS</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {\n                            this.state.navInfo.map(\n                                (item, idx) => (\n                                    <Nav.Link as={Link} to={item.href} key={idx} className={this.state.currentPathname === item.href ? \"active\" : \"\"}>{item.text}</Nav.Link>\n                                )\n                            )\n                        }\n                        {/*<NavLink className=\"nav-link\" to=\"\">a</NavLink>*/}\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport $ from 'jquery';\n\nclass MyDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: this.props.value\n        }\n    }\n\n    handleDropDownClick = (event) => {\n        event.preventDefault();\n        $(event.target.nextElementSibling).slideToggle();\n    }\n\n    handleDropDownItemClick = (event) => {\n        const userInput = event.target.innerText\n        if (userInput !== this.state.value) {\n            if (this.props.label === \"owner\") {\n                this.props.transferMsg(userInput, this.props.label, event.target.getAttribute(\"data-id\"))\n            } else {\n                this.props.transferMsg(userInput, this.props.label)\n            }\n\n            this.setState({value: userInput})\n        }\n        $(event.target.parentElement).slideToggle();\n    }\n\n    render() {\n        const {data, label, value, control, invisibleLabel, dataId} = this.props;\n        return (\n            <div className={control ? \"dropdown\" : \"col-6 col-md-3 dropdown\"}>\n                {invisibleLabel ? null : <Form.Label>{label}</Form.Label>}\n                <button className={`btn btn-primary dropdown-toggle form-control ${invisibleLabel ? \"invisible-label-button-after\" : null}`} onClick={this.handleDropDownClick}>{value}</button>\n                <ul className=\"dropdown-menu\" id={invisibleLabel ? \"invisible-label-ul\" : null} style={{height: data.length>=5 ? 180 : data.length * 40}}>\n                    {\n                        data.map((item, idx) => (\n                            <li className=\"dropdown-item\" style={{cursor:\"pointer\"}} key={idx} onClick={this.handleDropDownItemClick} data-id={dataId ? dataId[idx] : \"\"}>{item}</li>\n                        ))\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport {MyDropdown};","import React from \"react\";\nimport $ from \"jquery\";\n\nclass MyAlert extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeStamp: this.props.timeStamp\n        }\n    }\n\n    toggleAlert = () => {\n        $(\".alert\").slideToggle()\n    }\n\n    componentDidUpdate(preProps,preStates, s) {\n        if (this.props.timeStamp === this.state.timeStamp) {\n            return\n        }\n        this.setState({timeStamp: this.props.timeStamp})\n        // 如果正在展示\n        if ($(\".alert\").css(\"display\") === \"none\") {\n            this.toggleAlert()\n        }\n        // setTimeout(() => {\n        //     this.toggleAlert()\n        // }, 5000)\n    }\n\n    render() {\n        const {type, value, className} = this.props\n        // [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"dark\"]\n\n        return (\n            <div className={`alert alert-${type}`} role=\"alert\" style={{display: \"none\", width: \"100%\"}}>\n                {value}\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={this.toggleAlert}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default MyAlert;","import axios from 'axios'\n//data: {k: v}\nexport default function httpRequest(url, data, type) {\n    if (type === 'GET') {\n        let paramStr = ''\n        Object.keys(data).forEach(key => {\n            paramStr += key + '=' + data[key] + '&'\n        })\n        if (paramStr) {\n            paramStr = paramStr.substring(0, paramStr.length - 1)\n        }\n        // 使用axios发get请求\n        return axios.get(url + '?' + paramStr)\n        // return axios.get(`${url}?username=${data.username}&password=${data.password}`)\n    } else {\n        const fd = new FormData()\n        Object.keys(data).forEach(key => {\n            fd.append(key, data[key])\n            if (key === \"carImages\") {\n                for (let i=0;i<data[key].length;i++) {\n                    fd.append(key, data[key][i])\n                }\n            }\n        })\n        return axios.post(url, fd, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        })\n    }\n}","import httpRequest from \"./HTTP\";\n// http://34.126.86.176:4000/\nlet baseUrl = \"https://e307b1922e60.ngrok.io:4000\"\n\nexport const requestRegister = (user) => httpRequest(baseUrl + '/users/register', user, 'POST')\nexport const requestLogin = (user) => httpRequest(baseUrl + '/users/login', user, 'POST')\n\nexport const requestItemsQuery = (queryCondition) => httpRequest(baseUrl + '/items/query', queryCondition, 'GET')\nexport const requestItemInsert = (item) => httpRequest(baseUrl + '/items/insert', item, 'GET')\n\nexport const requestCustomersQuery = (queryCondition) => httpRequest(baseUrl + '/customers/query', queryCondition, 'GET')\nexport const requestCustomerInsert = (customer) => httpRequest(baseUrl + '/customers/insert', customer, 'GET')\n\nexport const requestCarsQuery = (queryCondition) => httpRequest(baseUrl + '/cars/query', queryCondition,'GET')\nexport const requestCarInsert = (car) => httpRequest(baseUrl + '/cars/insert', car,'POST')\n\nexport const requestReadMsg = (from) => httpRequest(baseUrl + '/readMsg',{from},'POST')","import React from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {MyDropdown} from \"../common/my-dropdown\";\nimport \"../common/my-dropdown.css\";\nimport jsonData from \"../../car_brand_model.json\";\nimport ImageUploader from 'react-images-upload';\nimport MyAlert from \"../common/my-alert\";\nimport {requestCustomersQuery, requestCarInsert} from \"../../api\";\n\nclass CardFormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        let brandPreContent = [];\n        Object.keys(jsonData).map((v, i) => {\n            brandPreContent.push(v)\n        });\n        let myDate = new Date();\n        let modelPreContent = jsonData[brandPreContent[0]];\n        this.state = {\n            colorPreContent: [\"WHITE\", \"BLACK\", \"PURPLE\", \"BLUE\", \"NAVY\", \"GREEN\", \"YELLOW\", \"ORANGE\", \"RED\", \"เทา\"],\n            ownersId: [],\n            ownersName: [],\n            ownersCount: 0,\n            brandPreContent: brandPreContent,\n            modelPreContent: modelPreContent,\n            userInput: {\n                plateNumber: \"\",\n                year: myDate.getFullYear(),\n                color: \"WHITE\",\n                owner: \"\",\n                ownerId: \"\",\n                brand: brandPreContent[0],\n                model: modelPreContent[0],\n                carImages: \"\"\n            },\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    transferMsg = (msg, label, dataId) => {\n        let key = \"\"\n        let {userInput} = this.state\n        switch (label) {\n            case \"color\":\n                key = \"color\";\n                break;\n            case \"owner\":\n                key = \"owner\";\n                userInput.ownerId = dataId\n                this.setState({...this.state, userInput: userInput})\n                break;\n            case \"brand\":\n                key = \"brand\";\n                let tmp = jsonData[msg]\n                userInput[\"model\"] = tmp[0]\n                let {state} = this\n                state.userInput = userInput\n                state.modelPreContent = tmp\n                this.setState(state)\n                break;\n            case \"model\":\n                key = \"model\";\n                break;\n            default:\n                break;\n        }\n        userInput[key] = msg\n        this.setState({...this.state, userInput: userInput})\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({...this.state, alert: alert})\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        this.setState(prevState => {\n            let userInput = Object.assign({}, prevState.userInput);\n            userInput[key] = value\n            return {userInput};\n        })\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        let {userInput} = this.state\n        if (!userInput.plateNumber || !userInput.year || !userInput.color || !userInput.owner || !userInput.brand || !userInput.model) {\n            this.informAlert(\"One or more required fields are empty\")\n            return\n        }\n        this.setState({isLoading: true})\n        requestCarInsert(userInput).then((r) => {\n            if (r.data.err_code === 0) {\n                this.props.fromFormToParent(r.data.car)\n                let date = new Date()\n                userInput.plateNumber = \"\"\n                userInput.year = date.getFullYear()\n                userInput.color = \"WHITE\"\n                userInput.owner = \"\"\n                userInput.ownerId = \"\"\n                // userInput.brand = this.brandPreContent[0]\n                // userInput.model = this.modelPreContent[0]\n                userInput.carImages = \"\"\n                let domCloseIcon = document.getElementsByClassName(\"deleteImage\")\n                for (let i = 0; i < domCloseIcon.length; i++) {\n                    domCloseIcon[i].click()\n                }\n                this.informAlert(\"Insert success\", \"success\")\n                this.setState({...this.state, userInput: userInput})\n            } else {\n                // 服务器返回错误\n                this.informAlert(\"Insert fail\", \"danger\")\n                // this.setState({...this.state, isLoading: false})\n            }\n            this.setState({...this.state, isLoading: false})\n            console.log(this.state)\n        }).catch((err) => {\n            // 请求返回错误\n            this.informAlert(`Insert fail ${err}`, \"danger\")\n            this.setState({...this.state, isLoading: false})\n            console.log(err)\n        })\n        // this.setState(prevState => {\n        //     let alert = Object.assign({}, prevState.alert);\n        //     alert[\"type\"] = \"success\"\n        //     alert[\"value\"] = \"success\"\n        //     alert[\"timeStamp\"] = Date.now()\n        //     return {alert};\n        // })\n        // console.log(this.state);\n    }\n\n    onDrop = (picture) => {\n        let {userInput} = this.state\n        // userInput.carImages = userInput.carImages.concat(picture)\n        userInput.carImages = picture\n        this.setState({...this.state, userInput: userInput});\n    }\n\n    requestData = (pageCount) => {\n        this.setState({isLoading: true})\n        requestCustomersQuery({}).then((r) => {\n            if (r.data.err_code === 0) {\n                let {ownersId, ownersName} = this.state\n                for (let i = 0; i < r.data.customers.length; i++) {\n                    ownersId.push(r.data.customers[i]._id)\n                    ownersName.push(r.data.customers[i].name)\n                }\n                console.log(ownersId)\n                this.setState({\n                    ownersId: ownersId,\n                    ownersName: ownersName,\n                    ownersCount: r.data.customersCount,\n                    isLoading: false\n                })\n            } else {\n            }\n        }).catch((err) => {\n            // this.informAlert(\"Insert success\", \"success\")\n            // this.setState({...this.state, userInput: userInput})\n        })\n        // 0: {name: \"Qianheng Ma\", phone: \"0999999999\", email: \"lll@gmail.com\"}\n        // 1: {name: \"customer2\", phone: \"0999999999\", email: \"customer2@gamil.com\"}\n        // 2: {name: \"customer3\", phone: \"0992222222\", email: \"customer3@gmail.com\"}\n        // 3: {name: \"customer4\", phone: \"0999999999\", email: \"customer3@gmail.com\"}\n\n    }\n\n    componentDidMount() {\n        this.requestData()\n    }\n\n    render() {\n        console.log(this.state)\n        const {userInput, colorPreContent, ownersId, ownersName, brandPreContent, modelPreContent, isLoading, alert} = this.state\n        return (\n            <Form>\n                <div className=\"row\">\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Plate Number</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"plateNumber\" value={userInput.plateNumber}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Year</Form.Label>\n                        <input type=\"number\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"year\" value={userInput.year}></input>\n                    </div>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)} data={colorPreContent}\n                                label=\"color\" value={userInput.color}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label, dataId) => this.transferMsg(msg, label, dataId)}\n                                data={ownersName} dataId={ownersId}\n                                label=\"owner\" value={userInput.owner}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)} data={brandPreContent}\n                                label=\"brand\" value={userInput.brand}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)} data={modelPreContent}\n                                label=\"model\" value={userInput.model}></MyDropdown>\n                    <div className=\"col-6 col-md-3\">\n                    </div>\n                    <ImageUploader\n                        withIcon={true}\n                        buttonText='Choose images'\n                        onChange={this.onDrop}\n                        imgExtension={['.jpg', 'jpeg', '.gif', '.png']}\n                        label=\"Max file size: 5mb, accepted: jpg|jpeg|gif|png\"\n                        maxFileSize={5242880}\n                        withPreview={true}\n                    />\n                </div>\n                <br/>\n                <Form.Row>\n                    <div className=\"col-6 col-md-1\">\n                        <Button variant=\"primary\" type=\"submit\" style={{position: \"relative\"}}\n                                disabled={isLoading ? true : false}\n                                onClick={this.handleClick}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}></span>\n                            {\n                                isLoading ? \"Loading...\" : \"Submit\"\n                            }\n                        </Button>\n                    </div>\n                </Form.Row>\n                <br/>\n                <Form.Row>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}></MyAlert>\n                </Form.Row>\n\n            </Form>\n        )\n    }\n}\n\nexport default CardFormAdd;","import React from \"react\";\nimport CarFormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport MyAlert from \"../common/my-alert\";\n\nclass CardFormWrapperCars extends React.Component {\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    fromFormToParent = (data) => {\n        this.props.fromWrapperToParent(data)\n    }\n\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new car record</h5>\n                <Card.Body>\n                    <CarFormAdd fromFormToParent={(data) => this.fromFormToParent(data)}></CarFormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CardFormWrapperCars;","import React from \"react\";\nimport {Carousel} from \"react-bootstrap\";\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nclass MyCarousels extends React.Component {\n\n    render() {\n        const {data} = this.props\n        return (\n            <Carousel interval={null}>\n                {\n                    data.imageURLs.map((item, idx) => (\n                        <Carousel.Item key={idx} style={{height: \"300px\"}}>\n                            {/*<img*/}\n                            {/*    className=\"d-block w-100 lazy\"*/}\n                            {/*    src={item.src}*/}\n                            {/*    alt={item.brand}*/}\n                            {/*    style={{height: \"300px\"}}*/}\n                            {/*/>*/}\n                            <LazyLoadImage\n                                style={{minBlockSize: \"-webkit-fill-available\"}}\n                                alt={data.brand}\n                                effect=\"blur\"\n                                src={`https://e307b1922e60.ngrok.io:4000/images/${item}`} // use normal <img> attributes as props\n                                width=\"100%\"/>\n                            <Carousel.Caption>\n                                <h3>{data.brand}</h3>\n                                <p>{data.model}</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                    ))\n                    // Object.keys(data).forEach((key, idx) => (\n                    //\n                    // ))\n                }\n\n                {/*<Carousel.Item>*/}\n                {/*  <img*/}\n                {/*    className=\"d-block w-100\"*/}\n                {/*    src=\"holder.js/800x400?text=Second slide&bg=282c34\"*/}\n                {/*    alt=\"Third slide\"*/}\n                {/*  />*/}\n                {/*  <Carousel.Caption>*/}\n                {/*    <h3>Audi</h3>*/}\n                {/*    <p>100</p>*/}\n                {/*  </Carousel.Caption>*/}\n                {/*</Carousel.Item>*/}\n\n                {/*<Carousel.Item>*/}\n                {/*  <img*/}\n                {/*    className=\"d-block w-100\"*/}\n                {/*    src=\"holder.js/800x400?text=Third slide&bg=20232a\"*/}\n                {/*    alt=\"Third slide\"*/}\n                {/*  />*/}\n                {/*  <Carousel.Caption>*/}\n                {/*    <h3>Audi</h3>*/}\n                {/*    <p>100</p>*/}\n                {/*  </Carousel.Caption>*/}\n                {/*</Carousel.Item>*/}\n\n            </Carousel>\n        );\n    }\n}\n\nexport default MyCarousels;","import React from \"react\";\nimport MyCarousels from \"../common/my-carousels\";\n\nclass CardDetailCars extends React.Component {\n    render() {\n        const {data} = this.props\n        return(\n            <div className=\"col mb-4\">\n                <div className=\"card h-100\" id=\"card-detail-cars\">\n                    <MyCarousels className=\"card-img-top\" data={data}></MyCarousels>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{data.brand +\" \"+ data.model}</h5>\n                        <p className=\"card-text\">Owner: {data.owner.name}</p>\n                        <p className=\"card-text\">Year: {data.year}</p>\n                        <p className=\"card-text\">Color: {data.color}</p>\n                        {/*<p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>*/}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CardDetailCars;","import React from \"react\";\nimport \"./my-search-bar.css\";\nimport $ from \"jquery\";\n\nclass MySearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            fields: this.props.fields\n        }\n    }\n\n    // handleClick = () => {\n    //     $(\"#div-dropdown-menu\").slideToggle()\n    // }\n\n    handleDropDownClick = (event) => {\n        event.preventDefault();\n        $(event.target.nextElementSibling).slideToggle();\n    }\n\n    handleDropDownItemClick = (event) => {\n        const userInput = event.target.innerText\n        if (userInput !== this.state.fields) {\n            this.props.transferMsg(userInput, this.props.label)\n            this.setState({fields: userInput, value: \"\"})\n        }\n        $(event.target.parentElement).slideToggle();\n    }\n\n    handleChange = (e) => {\n        let {value} = this.state\n        value = e.target.value\n        this.setState({...this.state, value})\n    }\n\n    enterTriggerSearch = (e) => {\n        if(e.keyCode === 13) {\n            this.props.transferMsg(this.state.value, \"search-text\")\n            // search-text\n        }\n    }\n\n    clickTriggerSearch = () => {\n        this.props.transferMsg(this.state.value, \"search-text\")\n    }\n\n    render() {\n        const {data, fields} = this.props\n        return (\n            <div className=\"input-group input-field col-12 col-md-3\">\n                <div className=\"input-group-prepend\" style={{height: \"38px\"}}>\n                    <button className=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\"\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\n                            onClick={this.handleDropDownClick}>\n                        {fields}\n                    </button>\n                    <div className=\"dropdown-menu\" id=\"div-dropdown-menu\">\n                        {\n                            data.map((item, idx) => (\n                                <li className=\"dropdown-item\" style={{cursor: \"pointer\"}} key={idx}\n                                    onClick={this.handleDropDownItemClick}>{item}</li>\n                            ))\n                        }\n                        {/*<a className=\"dropdown-item\" href=\"#\">Another action</a>*/}\n                        {/*<a className=\"dropdown-item\" href=\"#\">Something else here</a>*/}\n                        {/*<div role=\"separator\" className=\"dropdown-divider\"></div>*/}\n                        {/*<a className=\"dropdown-item\" href=\"#\">Separated link</a>*/}\n                    </div>\n                </div>\n                <input type=\"text\" className=\"input-search-bar form-control\"\n                       aria-label=\"Text input with dropdown button\"\n                       name=\"search-text\"\n                       value={this.state.value}\n                       onChange={this.handleChange}\n                       onKeyUp={this.enterTriggerSearch}\n                />\n                <i onClick={this.clickTriggerSearch}></i>\n            </div>\n        )\n    }\n}\n\nexport default MySearchBar;","import React from \"react\";\nimport {MyDropdown} from \"../common/my-dropdown\";\nimport MySearchBar from \"../common/my-search-bar\";\nimport jsonData from \"../../car_brand_model.json\";\n\nclass SearchField extends React.Component {\n    constructor(props) {\n        super(props);\n        // let carPreContent = {\n        //     \"All\": [\"All\"]\n        // };\n        // let brandPreContent = []\n        // Object.keys(jsonData).map((v,i)=>{\n        //     brandPreContent.push(v)\n        //     carPreContent[v] = jsonData[v]\n        //     carPreContent[v].unshift(\"All\")\n        // });\n        // console.log(carPreContent)\n        let brandPreContent = [\"All\"]\n        let carPreContent = {\n            \"All\": [\"All\"]\n        }\n        for (let key in jsonData) {\n            brandPreContent.push(key);\n            let arrayCopy = [\"All\", ...jsonData[key]];\n            carPreContent[key] = arrayCopy;\n        }\n        this.state = {\n            colorPreContent: [\"All\", \"WHITE\", \"BLACK\", \"PURPLE\", \"BLUE\", \"NAVY\", \"GREEN\", \"YELLOW\", \"ORANGE\", \"RED\", \"เทา\"],\n            ownerPreContent: [],\n            carPreContent: carPreContent,\n            brandPreContent: brandPreContent,\n            modelPreContent: carPreContent[\"All\"],\n            userInput: {\n                // year: myDate.getFullYear(),\n                searchField: \"Plate Number\",\n                searchText: \"\",\n                color: \"All\",\n                brand: \"All\",\n                model: \"All\"\n            }\n        }\n    }\n\n    transferMsg = (msg, label) => {\n        let key = \"\"\n        switch (label) {\n            case \"color\":\n                key = \"color\";\n                break;\n            case \"owner\":\n                key = \"owner\";\n                break;\n            case \"brand\":\n                key = \"brand\";\n                this.setState({...this.state, modelPreContent: this.state.carPreContent[msg]});\n                this.setState(prevState => {\n                    let userInput = Object.assign({}, prevState.userInput);\n                    userInput[\"model\"] = this.state.carPreContent[msg][0]\n                    return {userInput};\n                })\n                break;\n            case \"model\":\n                key = \"model\";\n                break;\n            case \"search-field\":\n                key = \"searchField\"\n                break;\n            case \"search-text\":\n                key = \"searchText\"\n                break;\n            default:\n                break;\n        }\n        this.setState(prevState => {\n            let userInput = Object.assign({}, prevState.userInput);\n            if (label === \"search-text\") {\n                this.props.fromSearchFieldToParent(userInput)\n            }\n            userInput[key] = msg\n            return {userInput};\n        })\n    }\n\n    render() {\n        console.log(this.state)\n        return (\n            <div className=\"card\">\n                <div className=\"card-body row\">\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)}\n                                data={this.state.colorPreContent} label=\"color\"\n                                value={this.state.userInput.color}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)}\n                                data={this.state.brandPreContent} label=\"brand\"\n                                value={this.state.userInput.brand}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)}\n                                data={this.state.modelPreContent} label=\"model\"\n                                value={this.state.userInput.model}></MyDropdown>\n                    <MySearchBar transferMsg={(msg, label) => this.transferMsg(msg, label)} label=\"search-field\"\n                                 fields={this.state.userInput.searchField}\n                                 data={[\"Plate Number\", \"Owner\"]}></MySearchBar>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchField;","import React from 'react';\nimport {Pagination} from \"react-bootstrap\";\n\n// 每个组件有个prop，prop可以通过'prop.'的方式拿到自定义组件标签里的任一属性\n\nclass MyPagination extends React.Component {\n    handleClick = (e) => {\n        let pageCount = e.target.getAttribute(\"name\")\n        let {currentPageCount} = this.props\n        if (parseInt(pageCount) === currentPageCount) {\n            return\n        }\n        switch (pageCount) {\n            case \"pre\":\n                currentPageCount--\n                break\n            case \"nex\":\n                currentPageCount++\n                break\n            default:\n                currentPageCount = pageCount\n        }\n        this.props.fromPaginationToParent(currentPageCount)\n    }\n\n    render() {\n        const {currentPageCount, dataCount, dataPerPage} = this.props\n        const totalPagesCount = Math.ceil(dataCount / dataPerPage)\n        let arr = []\n        if (totalPagesCount<=5) {\n            for (let i=0;i<totalPagesCount;i++) {\n                arr.push(i+1)\n            }\n        } else {\n            let startPageCount\n            let endPageCount\n            startPageCount = currentPageCount - 2\n            endPageCount = currentPageCount + 2\n            arr = [currentPageCount - 2, currentPageCount - 1, currentPageCount, currentPageCount + 1, currentPageCount + 2]\n            if (startPageCount <= 0) {\n                let count = -(startPageCount)\n                let lastValue = arr[arr.length - 1]\n                arr.splice(0, count + 1)\n                for (let i = 0; i < count + 1; i++) {\n                    lastValue += 1\n                    arr.push(lastValue)\n                }\n            }\n            if (endPageCount > totalPagesCount) {\n                let count = (endPageCount - totalPagesCount)\n                let firstValue = arr[0]\n                arr.splice(arr.length - count, count + 1)\n                for (let i = 0; i < count; i++) {\n                    firstValue -= 1\n                    arr.unshift(firstValue)\n                }\n            }\n        }\n        return (\n            // <Pagination>\n            //   {/*<Pagination.First />*/}\n            //   <Pagination.Prev />\n            //   <Pagination.Item>{1}</Pagination.Item>\n            //   {/*<Pagination.Ellipsis />*/}\n            //\n            //   <Pagination.Item>{10}</Pagination.Item>\n            //   <Pagination.Item active>{12}</Pagination.Item>\n            //   <Pagination.Item disabled>{14}</Pagination.Item>\n            //\n            //   {/*<Pagination.Ellipsis />*/}\n            //   <Pagination.Item>{20}</Pagination.Item>\n            //   <Pagination.Next />\n            //   {/*<Pagination.Last />*/}\n            // </Pagination>\n\n            <ul className=\"pagination\" style={{margin: \"0 auto\"}}>\n                <li className={`page-item ${currentPageCount === 1 ? \"disabled\" : \"\"}`}>\n                    <p className=\"page-link\" role=\"button\" onClick={this.handleClick} name=\"pre\">\n                        ‹\n                    </p>\n                </li>\n                {\n                    arr.map((item, idx) => (\n                        <li key={idx} className={`page-item ${currentPageCount === item ? \"active\" : \"\"}`}>\n                            <p className=\"page-link\" role=\"button\" onClick={this.handleClick} name={item}>{item}</p>\n                        </li>\n                    ))\n                }\n\n                {/*<li className=\"page-item\">*/}\n                {/*    <p className=\"page-link\" role=\"button\">1</p>*/}\n                {/*</li>*/}\n                {/*<li className=\"page-item\">*/}\n                {/*    <p className=\"page-link\" role=\"button\">10</p>*/}\n                {/*</li>*/}\n                {/*<li className=\"page-item active\">*/}\n                {/*    <span className=\"page-link\">*/}\n                {/*        12*/}\n                {/*        <span className=\"sr-only\">(current)</span>*/}\n                {/*    </span>*/}\n                {/*</li>*/}\n                {/*<li className=\"page-item disabled\">*/}\n                {/*    <span className=\"page-link\" disabled=\"\">14</span>*/}\n                {/*</li>*/}\n                {/*<li className=\"page-item\">*/}\n                {/*    <p className=\"page-link\" role=\"button\">20</p>*/}\n                {/*</li>*/}\n\n                <li className={`page-item ${currentPageCount === totalPagesCount ? \"disabled\" : \"\"}`}>\n                    <p className=\"page-link\" role=\"button\" onClick={this.handleClick} name=\"nex\">\n                        ›\n                    </p>\n                </li>\n            </ul>\n        )\n    }\n}\n\nexport default MyPagination;\n","import React from \"react\";\n\nclass MySpinner extends React.Component {\n    render() {\n        const {isLoading} = this.props\n        return (\n            <div>\n                <div className={`modal-backdrop fade ${isLoading ? \"show\" : \"d-none\"}`}></div>\n                <div className={`text-center fade ${isLoading ? \"show\" : \"\"}`}\n                     style={{position: \"fixed\", left: \"50%\", bottom: \"50%\", zIndex: \"1060\"}}>\n                    <div className=\"spinner-border text-primary\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MySpinner;","import React from 'react';\nimport CardFormWrapperCars from \"./card-form-wrapper-cars\";\nimport CardDetailCars from \"./card-detail-cars\";\nimport SearchField from \"./search-field\";\nimport {requestCarsQuery} from \"../../api\";\nimport MyPagination from \"../common/my-pagination\";\nimport MySpinner from \"../common/my-spinner\";\n\n// add a search box, the search keyword can be Licence plate number, owner's name,\n// also add filter of brands / models / color\n\nclass PageCars extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: [\"Name\", \"Phone\", \"Email\"],\n            keys: [\"name\", \"phone\", \"email\"],\n            cars: [],\n            currentPageCount: 1,\n            carsCount: 1,\n            isLoading: true\n        }\n    }\n\n    fromWrapperToParent = (data) => {\n        this.requestData({currentPageCount: this.state.currentPageCount})\n    }\n\n    fromSearchFieldToParent = (userInput) => {\n        userInput.currentPageCount = this.state.currentPageCount\n        this.requestData(userInput)\n    }\n\n    transferMsgFromPagination = async (msg) => {\n        this.setState({isLoading: true})\n        msg = parseInt(msg)\n        await this.requestData(msg)\n        this.setState({currentPageCount: msg})\n    }\n\n    requestData = (queryCondition) => {\n        this.setState({isLoading: true})\n        // {color, brand, model, searchField, searchText, currentPageCount}\n        requestCarsQuery(queryCondition).then((r) => {\n            if (r.data.err_code === 0) {\n                this.setState({\n                    cars: r.data.cars,\n                    carsCount: r.data.count,\n                    isLoading: false\n                })\n            }\n            console.log(this.state)\n        }).catch((err) => {\n            this.setState({\n                isLoading: false\n            })\n            console.log(err)\n        })\n    }\n\n    async componentDidMount() {\n        await this.requestData({currentPageCount: this.state.currentPageCount})\n    }\n\n    render() {\n        const {cars} = this.state\n        return (\n            <div style={{padding: \"30px\"}}>\n                <MySpinner isLoading={this.state.isLoading}></MySpinner>\n                <CardFormWrapperCars\n                    fromWrapperToParent={(data) => this.fromWrapperToParent(data)}></CardFormWrapperCars>\n                <br/>\n                <div className=\"sticky-top\" style={{marginBottom: \"20px\"}}>\n                    <SearchField\n                        fromSearchFieldToParent={(userInput) => this.fromSearchFieldToParent(userInput)}></SearchField>\n                </div>\n                <div className=\"row row-cols-1 row-cols-md-6\">\n                    {\n                        cars.map((car, idx) => (\n                            <CardDetailCars key={idx} data={car}></CardDetailCars>\n                        ))\n                    }\n                </div>\n                <div className=\"row\">\n                    <MyPagination transferMsg={(msg, label) => this.transferMsgFromPagination(msg, label)}\n                                  dataPerPage={18} currentPageCount={this.state.currentPageCount}\n                                  dataCount={this.state.carsCount}></MyPagination>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PageCars;","import React from \"react\";\nimport {Form, Button} from \"react-bootstrap\";\nimport MyAlert from \"../common/my-alert\";\nimport {requestCustomerInsert} from \"../../api\";\n\nclass FormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userInput: {\n                name: \"\",\n                phone: \"\",\n                email: \"\"\n            },\n            isLoading: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        };\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({...this.state, alert: alert})\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        if (key === \"phone\") {\n            let re = /^[0-9]*$/;\n            if (!re.test(value)) {\n                return\n            }\n        }\n        let {userInput} = this.state\n        userInput[key] = value\n        this.setState({...this.state, userInput: userInput})\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        const {userInput} = this.state\n        if (!userInput.name) {\n            this.informAlert(\"Name is empty\")\n            return\n        }\n        let rePhone = /^(09)\\d{8}$/;\n        if (!rePhone.test(userInput.phone)) {\n            this.informAlert(\"Phone number format is not correct\")\n            return\n        }\n        let reEmail = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n        if (!reEmail.test(userInput.email)) {\n            this.informAlert(\"Email format is not correct\")\n            return\n        }\n        this.setState({isLoading: true})\n        requestCustomerInsert(userInput).then((r) => {\n            if (r.data.err_code === 0) {\n                this.props.fromFormToParent(userInput)\n                userInput.name = \"\"\n                userInput.phone = \"\"\n                userInput.email = \"\"\n                this.informAlert(\"Insert success\", \"success\")\n                this.setState({...this.state, userInput: userInput})\n            } else {\n                // 服务器返回错误\n                this.informAlert(\"Insert fail\", \"danger\")\n                // this.setState({...this.state, isLoading: false})\n            }\n            this.setState({...this.state, isLoading: false})\n        }).catch((err) => {\n            // 请求返回错误\n            this.informAlert(`Insert fail ${err}`, \"danger\")\n            this.setState({...this.state, isLoading: false})\n            console.log(err)\n        })\n    }\n\n    render() {\n        const {userInput, isLoading, alert} = this.state\n        return (\n            <Form>\n                <Form.Row>\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Name</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"name\" value={userInput.name}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Phone</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"phone\" value={userInput.phone}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Email</Form.Label>\n                        <input type=\"email\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"email\" value={userInput.email}></input>\n                    </div>\n                    <div className=\"col-6 col-md-1\">\n                        <Button variant=\"primary\" type=\"submit\" style={{top: \"30px\", position: \"relative\"}}\n                                disabled={isLoading ? true : false}\n                                onClick={this.handleClick}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}></span>\n                            {\n                                isLoading ? \"Loading...\" : \"Submit\"\n                            }\n                        </Button>\n                    </div>\n                    {/*<div className=\"col-6 col-md-2\">*/}\n                    {/*    <div className=\"alert alert-danger\" role=\"alert\" id=\"div-alert\"*/}\n                    {/*         style={{position: \"relative\", top: \"20px\", display: \"none\"}}></div>*/}\n                    {/*</div>*/}\n                </Form.Row>\n                <br/>\n                <Form.Row>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}></MyAlert>\n                </Form.Row>\n\n            </Form>\n        )\n    }\n}\n\nexport default FormAdd;","import React from \"react\";\nimport FormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\"\n\nclass CardFormWrapperCustomers extends React.Component {\n\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    fromFormToParent = (data) => {\n        this.props.fromWrapperToParent(data)\n    }\n\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new customer record</h5>\n                <Card.Body>\n                    <FormAdd fromFormToParent={(data) => {this.fromFormToParent(data)}}></FormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CardFormWrapperCustomers;","import React from 'react';\nimport {Table} from \"react-bootstrap\";\n\n// 每个组件有个prop，prop可以通过'prop.'的方式拿到自定义组件标签里的任一属性\n\nexport class MyTable extends React.Component {\n    render() {\n        const {fields, contents, keys} = this.props;\n        return (\n            <div>\n\n                <Table hover responsive>\n                    <thead>\n                    <tr className=\"thead-dark\">\n                        {\n                            fields.map(\n                                (item, idx) => (\n                                    <th key={idx}>{item}</th>\n                                )\n                            )\n                        }\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        contents.map((item, idx) => (\n                            <tr key={idx}>\n                                {\n                                    keys.map((key, idx) => (\n                                        <td key={idx}>{item[key]}</td>\n                                    ))\n                                    // Object.keys(item).map((key, idx) => (\n                                    //     <td key={idx}>{item[key]}</td>\n                                    // ))\n                                }\n                            </tr>\n                        ))\n                    }\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport CardFormWrapperCustomers from \"./card-form-wrapper-customers\";\n// import {CarTable} from './table'\nimport {MyTable} from \"../common/my-table\";\nimport {requestCustomersQuery} from \"../../api\";\nimport MyPagination from \"../common/my-pagination\";\nimport MySpinner from \"../common/my-spinner\";\n\nclass PageCustomer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: [\"Name\", \"Phone\", \"Email\"],\n            keys: [\"name\", \"phone\", \"email\"],\n            customers: [],\n            currentPageCount: 1,\n            customersCount: 1,\n            isLoading: true\n        }\n    }\n\n    fromWrapperToParent = async (data) => {\n        // let tmp = this.state.items\n        // tmp.unshift(item)\n        // for (let i=10;i<tmp.length;i++) {\n        //     tmp.remove(i)\n        // }\n        // this.setState({...this.state, items: tmp})\n        await this.requestData(this.state.currentPageCount)\n    }\n\n    transferMsgFromPagination = async (msg) => {\n        this.setState({isLoading: true})\n        msg = parseInt(msg)\n        await this.requestData(msg)\n        this.setState({currentPageCount: msg})\n    }\n\n    requestData = async (pageCount) => {\n        this.setState({isLoading: true})\n        requestCustomersQuery({currentPageCount: pageCount}).then((r) => {\n            if (r.data.err_code === 0) {\n                this.setState({\n                    customers: r.data.customers,\n                    customersCount: r.data.customersCount,\n                    isLoading: false\n                })\n            }\n        }).catch((err) => {\n            console.log(err)\n            this.setState({\n                isLoading: false\n            })\n        })\n    }\n\n    async componentDidMount() {\n        await this.requestData(this.state.currentPageCount)\n    }\n\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <MySpinner isLoading={this.state.isLoading}></MySpinner>\n                <CardFormWrapperCustomers\n                    fromWrapperToParent={(data) => this.fromWrapperToParent(data)}></CardFormWrapperCustomers>\n                <br/>\n                <MyTable\n                    fields={this.state.fields}\n                    keys={this.state.keys}\n                    contents={this.state.customers}>\n                </MyTable>\n                <div className=\"row\">\n                    <MyPagination transferMsg={(msg, label) => this.transferMsgFromPagination(msg, label)}\n                                  dataPerPage={10} currentPageCount={this.state.currentPageCount}\n                                  dataCount={this.state.customersCount}></MyPagination>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PageCustomer;","import React from \"react\";\nimport {Form, Button} from \"react-bootstrap\";\nimport {MyDropdown} from \"../common/my-dropdown\";\nimport MyAlert from \"../common/my-alert\";\nimport {requestItemInsert} from \"../../api\";\n\nclass FormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userInput: {\n                name: \"\",\n                type: \"products\",\n                brand: \"\",\n                amount: \"\",\n                price: \"\"\n            },\n            isLoading: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        };\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        let tmp = this.state.userInput\n        tmp[key] = value\n        this.setState({...this.state, userInput: tmp})\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        // const {name, type, brand, amount, price} = this.state.userInput\n        const {userInput, alert} = this.state\n        let validation = false\n        switch (userInput.type) {\n            case \"products\":\n                if (userInput.name===\"\"||userInput.type===\"\"||userInput.brand===\"\"||userInput.amount===\"\"||userInput.price===\"\") {\n                    validation = false\n                } else {\n                    validation = true\n                }\n                break\n            case \"services\":\n                if (userInput.name===\"\"||userInput.type===\"\"||userInput.price===\"\") {\n                    validation = false\n                } else {\n                    validation = true\n                }\n                break\n            default:\n                break\n        }\n\n        if (!validation) {\n            let {alert} = this.state\n            alert.type = \"warning\"\n            alert.value = \"One or more required fields are empty\"\n            alert.timeStamp = Date.now()\n            this.setState({...this.state, alert: alert})\n            return\n        }\n        this.setState({isLoading: true})\n        requestItemInsert(this.state.userInput).then(r => {\n            this.setState({isLoading: false})\n            // insert suc\n            if (r.data.err_code === 0) {\n                // amount: -1\n                // brand: \"\"\n                // name: \"ubkhi\"\n                // price: 130\n                // type: \"services\"\n                // __v: 0\n                // _id: \"5f919134bf5afef228ea252b\"\n                this.props.fromFormToParent(userInput)\n                userInput.name = \"\"\n                userInput.brand = \"\"\n                userInput.amount = \"\"\n                userInput.price = \"\"\n                alert.type = \"success\"\n                alert.value = \"Insert success\"\n                alert.timeStamp = Date.now()\n                this.setState({...this.state, userInput: userInput, isLoading: false, alert: alert})\n            } else {\n                alert.type = \"danger\"\n                alert.value = \"Insert fail\"\n                alert.timeStamp = Date.now()\n                this.setState({...this.state, isLoading: false, alert: alert})\n            }\n            console.log(this.state)\n            console.log(r)\n        })\n    }\n\n    transferMsg = (msg, label) => {\n        let tmp = this.state.userInput\n        tmp[label] = msg\n        if (msg === \"services\") {\n            tmp[\"brand\"] = \"\"\n            tmp[\"amount\"] = -1\n        }\n        this.setState({...this.state, userInput: tmp})\n    }\n\n    render() {\n        const {isLoading, userInput, alert} = this.state\n        return (\n            <Form>\n                <Form.Row>\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Name</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"name\" value={userInput.name}></input>\n                    </div>\n\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)}\n                                data={[\"products\", \"services\"]} label=\"type\" value={userInput.type}></MyDropdown>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Brand</Form.Label>\n                        <fieldset disabled={userInput.type === \"products\" ? false : true}>\n                            <input type=\"text\" className=\"form-control\"\n                                   style={{textAlign: \"left\", transition: \"all .3s\"}} onChange={this.handleChange}\n                                   name=\"brand\" value={userInput.brand}></input>\n                        </fieldset>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Amount</Form.Label>\n                        <fieldset disabled={userInput.type === \"products\" ? false : true}>\n                            <input type=\"number\" className=\"form-control\"\n                                   style={{textAlign: \"left\", transition: \"all .3s\"}} onChange={this.handleChange}\n                                   name=\"amount\" value={userInput.amount}></input>\n                        </fieldset>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Price</Form.Label>\n                        <input type=\"number\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"price\" value={userInput.price}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-1\">\n                        <Button variant=\"primary\" type=\"submit\" style={{top: \"30px\", position: \"relative\"}}\n                                disabled={isLoading ? true : false}\n                                onClick={this.handleClick}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`} role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}></span>\n                            {\n                                isLoading ? \"Loading...\" : \"Submit\"\n                            }\n                        </Button>\n                        {/*<button className=\"btn btn-primary\" type=\"button\" disabled>*/}\n                        {/*    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>*/}\n                        {/*    Loading...*/}\n                        {/*</button>*/}\n                    </div>\n                </Form.Row>\n                <br/>\n                <Form.Row>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}></MyAlert>\n                </Form.Row>\n            </Form>\n        )\n    }\n}\n\nexport default FormAdd;","import React from \"react\";\nimport FormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\n\nclass CardFormWrapperItems extends React.Component {\n\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    fromFormToParent = (item) => {\n        this.props.fromWrapperToParent(item)\n    }\n\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new products/services record</h5>\n                <Card.Body>\n                    <FormAdd fromFormToParent={(item) => this.fromFormToParent(item)}></FormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CardFormWrapperItems;","import React from \"react\";\nimport CardFormWrapperItems from \"./card-form-wrapper-items\";\nimport {MyTable} from \"../common/my-table\";\nimport {requestItemsQuery} from \"../../api\";\nimport MySpinner from \"../common/my-spinner\";\nimport MyPagination from \"../common/my-pagination\";\n\nclass PageItems extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: [\"Name\", \"Type\", \"Brand\", \"Amount\", \"Price\"],\n            keys: [\"name\", \"type\", \"brand\", \"amount\", \"price\"],\n            items: [],\n            currentPageCount: 1,\n            itemsCount: 1,\n            isLoading: true\n        }\n    }\n\n    fromWrapperToParent = async (item) => {\n        // let tmp = this.state.items\n        // tmp.unshift(item)\n        // for (let i=10;i<tmp.length;i++) {\n        //     tmp.remove(i)\n        // }\n        // this.setState({...this.state, items: tmp})\n        await this.requestData(this.state.currentPageCount)\n    }\n\n    transferMsgFromPagination = async (msg) => {\n        msg = parseInt(msg)\n        await this.requestData(msg)\n        this.setState({currentPageCount: msg})\n    }\n\n    requestData = async (pageCount) => {\n        this.setState({isLoading: true})\n        requestItemsQuery({currentPageCount: pageCount}).then((r) => {\n            if (r.data.err_code === 0) {\n                this.setState({\n                    items: r.data.items,\n                    itemsCount: r.data.itemsCount,\n                    isLoading: false\n                })\n            }\n        }).catch((err) => {\n            this.setState({\n                    isLoading: false\n                })\n            console.log(err)\n        })\n    }\n\n    async componentDidMount() {\n        await this.requestData()\n    }\n\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <MySpinner isLoading={this.state.isLoading}></MySpinner>\n                <CardFormWrapperItems\n                    fromWrapperToParent={(item) => this.fromWrapperToParent(item)}></CardFormWrapperItems>\n                <br/>\n                <MyTable\n                    fields={this.state.fields}\n                    contents={this.state.items}\n                    keys={this.state.keys}\n                ></MyTable>\n                <div className=\"row\">\n                    <MyPagination fromPaginationToParent={(msg) => this.transferMsgFromPagination(msg)} dataPerPage={10}\n                                  currentPageCount={this.state.currentPageCount}\n                                  dataCount={this.state.itemsCount}></MyPagination>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PageItems;","import React from \"react\";\nimport {MyDropdown} from \"../common/my-dropdown\";\n\nexport default class PreRowContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            idx: this.props.rowIdx,\n            userInput: this.props.userInput\n        }\n    }\n\n    handleDropDownChange = (msg, label) => {\n        let index\n        let {userInput} = this.state\n        let preMsg = [...this.state.userInput]\n        switch (label) {\n            case \"type\":\n                index = 0\n                break\n            case \"items\":\n                index = 1\n                let items\n                if (this.state.userInput[0] === \"products\") {\n                    items = this.props.productsItems\n                } else {\n                    items = this.props.servicesItems\n                }\n                userInput[2] = items[msg][0]\n                userInput[3] = 1\n                break\n            default:\n                break\n        }\n        userInput[index] = msg\n        if (index === 0 && msg !== preMsg[0]) {\n            if (msg === \"products\") {\n                userInput[1] = this.props.productsName[0]\n                // console.log(userInput)\n            } else {\n                userInput[1] = this.props.servicesName[0]\n                // console.log(userInput)\n            }\n        }\n\n        userInput[4] = parseInt(userInput[2]) * parseInt(userInput[3])\n        this.setState({\n            userInput: userInput\n        })\n\n        // this.setState(prevState => {\n        //     let userInput = Object.assign({}, prevState.userInput);\n        //     userInput[index] = msg\n        //     if (index === 0 && msg !== this.state.userInput[0]) {\n        //         if (msg === \"items\") {\n        //             userInput[1] = this.props.productsName[0]\n        //         } else {\n        //             userInput[1] = this.props.servicesName[0]\n        //         }\n        //     }\n        //     if (items) {\n        //         userInput[2] = items[msg][0]\n        //         userInput[3] = 1\n        //         // console.log(items)\n        //     }\n        //     userInput[4] = parseInt(userInput[2]) * parseInt(userInput[3])\n        //     return {userInput: userInput};\n        // })\n        this.props.transferMsg(preMsg, userInput, this.state.idx)\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        let index = 0\n        let pre = this.state.userInput\n        const key = e.target.getAttribute('name');\n        switch (key) {\n            case \"amount\":\n                index = 3\n                break\n            default:\n                break\n        }\n        let {userInput} = this.state\n        userInput[index] = value\n        userInput[4] = parseInt(userInput[2]) * parseInt(userInput[3])\n        this.setState({\n            userInput: userInput\n        })\n        // this.setState(prevState => {\n        //     let userInput = Object.assign({}, prevState.userInput);\n        //     userInput[index] = value\n        //     userInput[4] = parseInt(userInput[2]) * parseInt(userInput[3])\n        //     return {userInput: userInput};\n        // })\n        this.props.transferMsg(pre, userInput, this.state.idx)\n    }\n\n    render() {\n        let {type, productsName, servicesName} = this.props\n        let {userInput} = this.state\n        return(\n            <tr>\n                <td>\n                    <MyDropdown transferMsg={(msg, label) => this.handleDropDownChange(msg, label)} data={type} label=\"type\" value={userInput[0]} invisibleLabel={true} control={true}></MyDropdown>\n                </td>\n                <td>\n                    <MyDropdown transferMsg={(msg, label) => this.handleDropDownChange(msg, label)} data={userInput[0] === \"products\" ? productsName : servicesName} label=\"items\" value={userInput[1]} invisibleLabel={true} control={true}></MyDropdown>\n                </td>\n                <td>\n                    {userInput[2]}\n                </td>\n                <td>\n                    <input type=\"number\" className=\"form-control\" style={{textAlign: \"left\"}} onChange={this.handleChange} name=\"amount\" value={userInput[3]}></input>\n                </td>\n                <td>\n                    {userInput[4]}\n                </td>\n            </tr>\n        )\n    }\n}","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport PreRowContent from \"./preRowContent\";\nimport MyAlert from \"../common/my-alert\";\n\nexport default class TableAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: [\"Type\", \"Item\", \"Unit Price\", \"Amount\", \"Total\"],\n            type: [\"products\", \"services\"],\n            //[\"name\", \"price\", \"in stock\"]\n            productsName: [],\n            servicesName: [],\n            // {name: [price, stock]}\n            products: {\n                \"product 1\": [\"20\", \"30\"],\n                \"product 2\": [\"30\", \"10\"],\n                \"product 3\": [\"40\", \"50\"],\n                \"product 4\": [\"50\", \"100\"],\n                \"product 5\": [\"60\", \"80\"]\n            },\n            services: {\n                \"service 1\": [\"10\", \"-1\"],\n                \"service 2\": [\"20\", \"-1\"],\n                \"service 3\": [\"30\", \"-1\"],\n                \"service 4\": [\"10\", \"-1\"],\n                \"service 5\": [\"140\", \"-1\"],\n                \"service 6\": [\"50\", \"-1\"],\n                \"service 7\": [\"90\", \"-1\"]\n            },\n            preInput: [\"products\", \"product 1\", \"20\", \"1\", \"20\"],\n            userInput: [],\n            selectedItems:{\n                \"products\": [],\n                \"services\": []\n            },\n            isDisableButton: false,\n            isVAT: false,\n            gross: 0,\n            VAT: 0,\n            total: 0,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                date: Date.now()\n            }\n        }\n    }\n\n    componentDidMount() {\n        let oriProductsName = [\"product 1\", \"product 2\", \"product 3\", \"product 4\", \"product 5\"]\n        let oriServicesName = [\"service 1\", \"service 2\", \"service 3\", \"service 4\", \"service 5\", \"service 6\", \"service 7\"]\n        this.setState({productsName: oriProductsName, servicesName: oriServicesName})\n    }\n\n    rollBackArray = (name, value) => {\n        let arr\n        switch (name) {\n            case \"products\":\n                arr = this.state.productsName\n                arr.push(value)\n                arr = arr.sort()\n                this.setState({productsName: arr})\n                break;\n            case \"services\":\n                arr = this.state.servicesName\n                arr.push(value)\n                arr = arr.sort()\n                this.setState({servicesName: arr})\n                break;\n            default:\n                break;\n        }\n    }\n\n    filterTheArray = (name, value) => {\n        let arr\n        let {productsName, servicesName, type} = this.state\n        switch (name) {\n            case \"products\":\n                arr = productsName.filter(name => name !== value)\n                if (arr.length === 0) {\n                    this.setState({type: type.filter(name => name !== \"products\")})\n                }\n                this.setState({productsName: arr})\n                break;\n            case \"services\":\n                arr = servicesName.filter(name => name !== value)\n                if (arr.length === 0) {\n                    this.setState({type: type.filter(name => name !== \"services\")})\n                }\n                this.setState({servicesName: arr})\n                break;\n            default:\n                break;\n        }\n        if ((productsName.length === 1 && servicesName.length === 0) || (productsName.length === 0 && servicesName.length === 1)) {\n            this.setState({\n                isDisableButton: true\n            })\n        }\n    }\n\n    handleClick = () => {\n        let {userInput, productsName, servicesName, products, services} = this.state\n        let name\n        let value\n        let price\n        if (productsName.length !== 0) {\n            name = \"products\"\n            value = productsName[0]\n            price = products[value][0]\n        } else if (servicesName.length !== 0) {\n            name = \"services\"\n            value = servicesName[0]\n            price = services[value][0]\n        } else {\n            return\n        }\n        userInput.push([name, value, price, 1, price])\n        this.filterTheArray(name, value)\n        let arr = this.calculateTotalPrice(userInput, this.state.isVAT)\n        this.setState({\n            userInput: userInput,\n            gross: arr[0],\n            VAT: arr[1],\n            total: arr[2]\n        })\n    }\n\n    handleChange = (e) => {\n        let isVAT = e.target.checked\n        this.setState(prevState => {\n            let tmp = Object.assign({}, prevState);\n            let arr = this.calculateTotalPrice(tmp[\"userInput\"], isVAT)\n            tmp[\"isVAT\"] = isVAT\n            tmp[\"gross\"] = arr[0]\n            tmp[\"VAT\"] = arr[1]\n            tmp[\"total\"] = arr[2]\n            return tmp;\n        })\n    }\n\n    transferMsg = (preMsg, newMsg, idx) => {\n        let {userInput} = this.state\n        userInput[idx] = newMsg\n        // roll back\n        this.rollBackArray(preMsg[0], preMsg[1])\n        // filter\n        this.filterTheArray(newMsg[0], newMsg[1])\n        let arr = this.calculateTotalPrice(userInput, this.state.isVAT)\n        this.setState({\n            userInput: userInput,\n            gross: arr[0],\n            VAT: arr[1],\n            total: arr[2]\n        })\n    }\n\n    calculateTotalPrice = (arr, isVAT) => {\n        let total = 0;\n        let VAT;\n        arr.map((item) => {\n            total += parseFloat(item[4])\n        })\n        if (isVAT) {\n            VAT = (total/107) * 7\n            return [(total-VAT).toFixed(2), VAT.toFixed(2), total.toFixed(2)]\n        }\n        return [total.toFixed(2), 0, total.toFixed(2)]\n    }\n\n    render() {\n        let {userInput, gross, VAT, total, isDisableButton, alert} = this.state\n        return (\n            <div>\n                <Table hover responsive>\n                    <thead>\n                    <tr className=\"thead-dark\">\n                        {\n                            this.state.fields.map(\n                                (item, idx) => (\n                                    <th key={idx} style={{width: \"20%\"}}>{item}</th>\n                                )\n                            )\n                        }\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        userInput.map(\n                            (item, idx) => (\n                                <PreRowContent key={idx} rowIdx={idx}\n                                               transferMsg={(preMsg, newMsg, idx) => this.transferMsg(preMsg, newMsg, idx)}\n                                               type={this.state.type}\n                                               productsName={this.state.productsName}\n                                               servicesName={this.state.servicesName}\n                                               productsItems={this.state.products}\n                                               servicesItems={this.state.services}\n                                               userInput={item}></PreRowContent>\n                            )\n                        )\n                    }\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"4\" className=\"text-right\">Gross:</td>\n                        <td>{gross}</td>\n                    </tr>\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"4\" className=\"text-right\">\n                            <input type=\"checkbox\" style={{marginRight: \"10px\"}} onChange={this.handleChange}/>\n                            VAT:\n                        </td>\n                        <td>{VAT}</td>\n                    </tr>\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"4\" className=\"text-right\">Total:</td>\n                        <td>{total}</td>\n                    </tr>\n                    </tbody>\n                </Table>\n                <button type=\"button\" className=\"btn btn-primary\" disabled={isDisableButton} onClick={this.handleClick}>Add a new row</button>\n                <br/>\n                <div className=\"row\">\n                    <MyAlert type={alert.type} value={alert.value}></MyAlert>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport TableAdd from \"./table-add\";\n\nexport default class CardFormWrapperSales extends React.Component {\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    render() {\n        return (\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new sales record</h5>\n                <Card.Body>\n                    <div className=\"text-right\">\n                        <button type=\"button\" className=\"btn btn-light\" style={{marginRight: \"20px\"}}>SAVE&PRINT</button>\n                        <button type=\"button\" className=\"btn btn-dark\">SAVE</button>\n                    </div>\n                    <br/>\n                    <TableAdd></TableAdd>\n                </Card.Body>\n            </Card>\n        );\n    }\n}","import React from \"react\";\nimport CardFormWrapperSales from \"./card-form-wrapper-sales\";\n\nexport default class PageSales extends React.Component {\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <CardFormWrapperSales></CardFormWrapperSales>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/header/header';\nimport {Switch, Router, Route, Redirect, DefaultRoute} from 'react-router-dom';\nimport PageCars from \"./components/cars/page-cars\";\nimport PageCustomer from \"./components/customers/page-customers\";\nimport PageItems from \"./components/items/page-items\";\nimport PageSales from \"./components/sales/page-sales\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div className=\"main\">\n            <Header/>\n            <Switch>\n                {/*<DefaultRoute handler={PageSales}/>*/}\n                <Route path='/sales' component={PageSales}/>\n                <Route path='/cars' component={PageCars}/>\n                <Route path='/customers' component={PageCustomer}/>\n                <Route path='/items' component={PageItems}/>\n                <Redirect to='/sales'/>\n            </Switch>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  // <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}