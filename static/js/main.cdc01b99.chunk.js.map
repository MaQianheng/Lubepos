{"version":3,"sources":["components/header/header.js","components/common/my-dropdown.js","components/common/my-alert.js","api/HTTP.js","api/index.js","components/cars/form-add.js","components/cars/card-form-wrapper-cars.js","components/common/my-carousels.js","components/cars/card-detail-cars.js","components/common/my-search-bar.js","components/cars/search-field.js","components/common/my-pagination.js","components/common/my-spinner.js","components/cars/page-cars.js","components/customers/form-add.js","components/customers/card-form-wrapper-customers.js","components/common/my-table.js","components/customers/page-customers.js","components/items/form-add.js","components/items/card-form-wrapper-items.js","components/items/page-items.js","components/sales/preRowContent.js","components/sales/table-add.js","components/sales/card-form-wrapper-sales.js","components/sales/page-sales.js","redux/action.js","redux/action-type.js","pages/page-login.js","App.js","serviceWorker.js","redux/reducer.js","index.js"],"names":["Header","props","state","navInfo","text","href","currentPathname","this","history","location","pathname","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","map","item","idx","Link","as","to","key","React","Component","withRouter","MyDropdown","handleDropDownClick","event","preventDefault","$","target","nextElementSibling","slideToggle","handleDropDownItemClick","userInput","innerText","value","label","transferMsg","getAttribute","setState","parentElement","data","control","invisibleLabel","dataId","Form","Label","onClick","style","height","length","cursor","data-id","MyAlert","toggleAlert","alertId","timeStamp","preProps","preStates","s","css","type","role","display","width","aria-label","aria-hidden","httpRequest","url","paramStr","Object","keys","forEach","substring","axios","get","fd","FormData","append","i","post","headers","baseUrl","requestLogin","user","requestItemsQuery","queryCondition","requestItemUpdate","requestItemDelete","requestCustomersQuery","requestCustomerUpdate","customer","requestCustomerDelete","CardFormAdd","msg","ownerId","tmp","jsonData","modelPreContent","informAlert","alert","Date","now","handleChange","e","prevState","assign","handleClick","car","plateNumber","year","color","owner","brand","model","isLoading","then","r","err_code","fromFormToParent","date","getFullYear","carImages","domCloseIcon","document","getElementsByClassName","click","console","log","catch","err","onDrop","picture","requestData","pageCount","ownersId","ownersName","customers","push","_id","name","ownersCount","customersCount","brandPreContent","v","myDate","colorPreContent","textAlign","onChange","withIcon","buttonText","imgExtension","maxFileSize","withPreview","Row","Button","variant","position","disabled","right","CardFormWrapperCars","toggleClass","fromWrapperToParent","Card","Body","MyCarousels","Carousel","interval","imageURLs","Item","minBlockSize","alt","effect","src","Caption","CardDetailCars","MySearchBar","fields","enterTriggerSearch","keyCode","clickTriggerSearch","data-toggle","aria-haspopup","aria-expanded","onKeyUp","SearchField","carPreContent","fromSearchFieldToParent","arrayCopy","ownerPreContent","searchField","searchText","MyPagination","currentPageCount","parseInt","fromPaginationToParent","dataCount","dataPerPage","totalPagesCount","Math","ceil","arr","startPageCount","endPageCount","count","lastValue","splice","firstValue","unshift","margin","MySpinner","left","bottom","zIndex","PageCars","transferMsgFromPagination","a","requestCarsQuery","cars","carsCount","padding","marginBottom","FormAdd","test","phone","email","top","CardFormWrapperCustomers","cardTitle","MyTable","updateFunc","deleteFunc","idxIsLoading","contents","rowId","tableRole","operatingContent","message","filter","handleDropDownChange","amount","columnId","Table","hover","responsive","subIdx","indexOf","marginRight","PageCustomer","price","transition","CardFormWrapperItems","PageItems","items","itemsCount","PreRowContent","index","preMsg","productsName","servicesName","pre","fromPreRowContentToParent","rowIdx","oriAmount","TableAdd","componentWillUnmount","callback","rollBackArray","itemsArr","isDisableButton","sort","filterTheArray","remainingAmount","products","services","calculateTotalPrice","isVAT","gross","VAT","totalPrice","handleSubmit","itemsId","itemsName","sales","requestSalesInsert","checked","newMsg","parseFloat","toFixed","productsItems","servicesItems","colSpan","CardFormWrapperSales","PageSales","resLogin","PageLogin","isChecked","username","password","login","response","replace","marginTop","placeholder","connect","dispatch","App","path","component","Boolean","window","hostname","match","initUser","combineReducers","action","store","createStore","reducer","compose","applyMiddleware","thunk","devToolsExtension","f","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.cdc01b99.chunk.js","sourcesContent":["import React from 'react';\nimport {Nav, Navbar} from \"react-bootstrap\";\nimport {withRouter, Link} from 'react-router-dom'\n\n// 每个组件有个prop，prop可以通过'prop.'的方式拿到自定义组件标签里的任一属性\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        // let currentPathname = this.props.history.location.pathname\n        // if (currentPathname === \"/\") {\n        //     currentPathname = \"/sales\"\n        //     this.props.history.push(\"/sales\")\n        // }\n        this.state = {\n            navInfo: [\n                {\n                    text: \"SALES\",\n                    href: \"/sales\"\n                },\n                {\n                    text: \"SALES REPORT\",\n                    href: \"/sales_report\"\n                },\n                {\n                    text: \"CARS\",\n                    href: \"/cars\"\n                },\n                {\n                    text: \"CUSTOMERS\",\n                    href: \"/customers\"\n                },\n                {\n                    text: \"PRODUCTS/SERVICES\",\n                    href: \"/items\"\n                }\n            ]\n        };\n    }\n\n\n    render() {\n        let currentPathname = this.props.history.location.pathname\n        return(\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"/sales\">The One Car POS</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {\n                            this.state.navInfo.map(\n                                (item, idx) => (\n                                    <Nav.Link as={Link} to={item.href} key={idx} className={currentPathname === item.href ? \"active\" : \"\"}>{item.text}</Nav.Link>\n                                )\n                            )\n                        }\n                        {/*<NavLink className=\"nav-link\" to=\"\">a</NavLink>*/}\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport $ from 'jquery';\n\nclass MyDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: this.props.value\n        }\n    }\n\n    handleDropDownClick = (event) => {\n        event.preventDefault();\n        $(event.target.nextElementSibling).slideToggle();\n    }\n\n    handleDropDownItemClick = (event) => {\n        const userInput = event.target.innerText\n        if (userInput !== this.state.value) {\n            if (this.props.label === \"owner\") {\n                this.props.transferMsg(userInput, this.props.label, event.target.getAttribute(\"data-id\"))\n            } else {\n                this.props.transferMsg(userInput, this.props.label)\n            }\n\n            this.setState({value: userInput})\n        }\n        $(event.target.parentElement).slideToggle();\n    }\n\n    render() {\n        const {data, label, value, control, invisibleLabel, dataId} = this.props;\n        return (\n            <div className={control ? \"dropdown\" : \"col-6 col-md-3 dropdown\"}>\n                {invisibleLabel ? null : <Form.Label>{label}</Form.Label>}\n                <button className={`btn btn-primary dropdown-toggle form-control ${invisibleLabel ? \"invisible-label-button-after\" : null}`} onClick={this.handleDropDownClick}>{value}</button>\n                <ul className=\"dropdown-menu\" id={invisibleLabel ? \"invisible-label-ul\" : null} style={{height: data.length>=5 ? 180 : data.length * 40}}>\n                    {\n                        data.map((item, idx) => (\n                            <li className=\"dropdown-item\" style={{cursor:\"pointer\"}} key={idx} onClick={this.handleDropDownItemClick} data-id={dataId ? dataId[idx] : \"\"}>{item}</li>\n                        ))\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport {MyDropdown};","import React from \"react\";\nimport $ from \"jquery\";\n\nclass MyAlert extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeStamp: this.props.timeStamp\n        }\n    }\n\n    toggleAlert = () => {\n        $(`#${this.props.alertId}`).slideToggle()\n    }\n\n    componentDidUpdate(preProps,preStates, s) {\n        if (this.props.timeStamp === this.state.timeStamp) {\n            return\n        }\n        this.setState({timeStamp: this.props.timeStamp})\n        // 如果正在展示\n        if ($(`#${this.props.alertId}`).css(\"display\") === \"none\") {\n            this.toggleAlert()\n        }\n        // setTimeout(() => {\n        //     this.toggleAlert()\n        // }, 5000)\n    }\n\n    render() {\n        const {type, value, alertId} = this.props\n        // [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"dark\"]\n\n        return (\n            <div className={`alert alert-${type}`} id={alertId} role=\"alert\" style={{display: \"none\", width: \"100%\"}}>\n                {value}\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={this.toggleAlert}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default MyAlert;","import axios from 'axios'\n//data: {k: v}\nexport default function httpRequest(url, data, type) {\n    if (type === 'GET') {\n        let paramStr = ''\n        Object.keys(data).forEach(key => {\n            paramStr += key + '=' + data[key] + '&'\n        })\n        if (paramStr) {\n            paramStr = paramStr.substring(0, paramStr.length - 1)\n        }\n        // 使用axios发get请求\n        return axios.get(url + '?' + paramStr)\n        // return axios.get(`${url}?username=${data.username}&password=${data.password}`)\n    } else {\n        if (\"carImages\" in data) {\n            const fd = new FormData()\n            Object.keys(data).forEach(key => {\n                fd.append(key, data[key])\n                if (key === \"carImages\") {\n                    for (let i = 0; i < data[key].length; i++) {\n                        fd.append(key, data[key][i])\n                    }\n                }\n            })\n            return axios.post(url, fd, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            })\n        }\n        return axios.post(url, data)\n    }\n}","import httpRequest from \"./HTTP\";\n// http://34.126.86.176:4000\nlet baseUrl = \"https://e307b1922e60.ngrok.io\"\n\nexport const requestRegister = (user) => httpRequest(baseUrl + '/users/register', user, 'POST')\nexport const requestLogin = (user) => httpRequest(baseUrl + '/users/login', user, 'POST')\n\nexport const requestItemsQuery = (queryCondition) => httpRequest(baseUrl + '/items/query', queryCondition, 'GET')\nexport const requestItemInsert = (item) => httpRequest(baseUrl + '/items/insert', item, 'GET')\nexport const requestItemUpdate = (item) => httpRequest(baseUrl + '/items/update', item, 'GET')\nexport const requestItemDelete = (item) => httpRequest(baseUrl + '/items/delete', item, 'GET')\n\nexport const requestCustomersQuery = (queryCondition) => httpRequest(baseUrl + '/customers/query', queryCondition, 'GET')\nexport const requestCustomerInsert = (customer) => httpRequest(baseUrl + '/customers/insert', customer, 'GET')\nexport const requestCustomerUpdate = (customer) => httpRequest(baseUrl + '/customers/update', customer, 'GET')\nexport const requestCustomerDelete = (customer) => httpRequest(baseUrl + '/customers/delete', customer, 'GET')\n\nexport const requestCarsQuery = (queryCondition) => httpRequest(baseUrl + '/cars/query', queryCondition,'GET')\nexport const requestCarInsert = (car) => httpRequest(baseUrl + '/cars/insert', car,'POST')\n\nexport const requestSalesInsert = (sales) => httpRequest(baseUrl + '/sales/insert', sales,'GET')\n\nexport const requestReadMsg = (from) => httpRequest(baseUrl + '/readMsg',{from},'POST')","import React from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {MyDropdown} from \"../common/my-dropdown\";\nimport \"../common/my-dropdown.css\";\nimport jsonData from \"../../car_brand_model.json\";\nimport ImageUploader from 'react-images-upload';\nimport MyAlert from \"../common/my-alert\";\nimport {requestCustomersQuery, requestCarInsert} from \"../../api\";\n\nclass CardFormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        let brandPreContent = [];\n        Object.keys(jsonData).map((v, i) => {\n            brandPreContent.push(v)\n        });\n        let myDate = new Date();\n        let modelPreContent = jsonData[brandPreContent[0]];\n        this.state = {\n            colorPreContent: [\"WHITE\", \"BLACK\", \"PURPLE\", \"BLUE\", \"NAVY\", \"GREEN\", \"YELLOW\", \"ORANGE\", \"RED\", \"เทา\"],\n            ownersId: [],\n            ownersName: [],\n            ownersCount: 0,\n            brandPreContent: brandPreContent,\n            modelPreContent: modelPreContent,\n            userInput: {\n                plateNumber: \"\",\n                year: myDate.getFullYear(),\n                color: \"WHITE\",\n                owner: \"\",\n                ownerId: \"\",\n                brand: brandPreContent[0],\n                model: modelPreContent[0],\n                carImages: \"\"\n            },\n            isLoading: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    transferMsg = (msg, label, dataId) => {\n        let key = \"\"\n        let {userInput} = this.state\n        switch (label) {\n            case \"color\":\n                key = \"color\";\n                break;\n            case \"owner\":\n                key = \"owner\";\n                userInput.ownerId = dataId\n                this.setState({...this.state, userInput: userInput})\n                break;\n            case \"brand\":\n                key = \"brand\";\n                let tmp = jsonData[msg]\n                userInput[\"model\"] = tmp[0]\n                let {state} = this\n                state.userInput = userInput\n                state.modelPreContent = tmp\n                this.setState(state)\n                break;\n            case \"model\":\n                key = \"model\";\n                break;\n            default:\n                break;\n        }\n        userInput[key] = msg\n        this.setState({...this.state, userInput: userInput})\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({...this.state, alert: alert})\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        this.setState(prevState => {\n            let userInput = Object.assign({}, prevState.userInput);\n            userInput[key] = value\n            return {userInput};\n        })\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        let {userInput} = this.state\n        if (!userInput.plateNumber || !userInput.year || !userInput.color || !userInput.owner || !userInput.brand || !userInput.model) {\n            this.informAlert(\"One or more required fields are empty\")\n            return\n        }\n        this.setState({isLoading: true})\n        requestCarInsert(userInput).then((r) => {\n            if (r.data.err_code === 0) {\n                this.props.fromFormToParent(r.data.car)\n                let date = new Date()\n                userInput.plateNumber = \"\"\n                userInput.year = date.getFullYear()\n                userInput.color = \"WHITE\"\n                userInput.owner = \"\"\n                userInput.ownerId = \"\"\n                // userInput.brand = this.brandPreContent[0]\n                // userInput.model = this.modelPreContent[0]\n                userInput.carImages = \"\"\n                let domCloseIcon = document.getElementsByClassName(\"deleteImage\")\n                for (let i = 0; i < domCloseIcon.length; i++) {\n                    domCloseIcon[i].click()\n                }\n                this.informAlert(\"Insert success\", \"success\")\n                this.setState({...this.state, userInput: userInput})\n            } else {\n                // 服务器返回错误\n                this.informAlert(\"Insert fail\", \"danger\")\n                // this.setState({...this.state, isLoading: false})\n            }\n            this.setState({...this.state, isLoading: false})\n            console.log(this.state)\n        }).catch((err) => {\n            // 请求返回错误\n            this.informAlert(`Insert fail ${err}`, \"danger\")\n            this.setState({...this.state, isLoading: false})\n            console.log(err)\n        })\n        // this.setState(prevState => {\n        //     let alert = Object.assign({}, prevState.alert);\n        //     alert[\"type\"] = \"success\"\n        //     alert[\"value\"] = \"success\"\n        //     alert[\"timeStamp\"] = Date.now()\n        //     return {alert};\n        // })\n        // console.log(this.state);\n    }\n\n    onDrop = (picture) => {\n        let {userInput} = this.state\n        // userInput.carImages = userInput.carImages.concat(picture)\n        userInput.carImages = picture\n        this.setState({...this.state, userInput: userInput});\n    }\n\n    requestData = (pageCount) => {\n        this.setState({isLoading: true})\n        requestCustomersQuery({pageCount}).then((r) => {\n            if (r.data.err_code === 0) {\n                let {ownersId, ownersName} = this.state\n                for (let i = 0; i < r.data.customers.length; i++) {\n                    ownersId.push(r.data.customers[i]._id)\n                    ownersName.push(r.data.customers[i].name)\n                }\n                console.log(ownersId)\n                this.setState({\n                    ownersId: ownersId,\n                    ownersName: ownersName,\n                    ownersCount: r.data.customersCount,\n                    isLoading: false\n                })\n            } else {\n            }\n        }).catch((err) => {\n            console.log(err)\n            // this.informAlert(\"Insert success\", \"success\")\n            // this.setState({...this.state, userInput: userInput})\n        })\n    }\n\n    componentDidMount() {\n        this.requestData(0)\n    }\n\n    render() {\n        console.log(this.state)\n        const {userInput, colorPreContent, ownersId, ownersName, brandPreContent, modelPreContent, isLoading, alert} = this.state\n        return (\n            <Form>\n                <div className=\"row\">\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Plate Number</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"plateNumber\" value={userInput.plateNumber}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Year</Form.Label>\n                        <input type=\"number\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"year\" value={userInput.year}></input>\n                    </div>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)} data={colorPreContent}\n                                label=\"color\" value={userInput.color}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label, dataId) => this.transferMsg(msg, label, dataId)}\n                                data={ownersName} dataId={ownersId}\n                                label=\"owner\" value={userInput.owner}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)} data={brandPreContent}\n                                label=\"brand\" value={userInput.brand}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)} data={modelPreContent}\n                                label=\"model\" value={userInput.model}></MyDropdown>\n                    <div className=\"col-6 col-md-3\">\n                    </div>\n                    <ImageUploader\n                        withIcon={true}\n                        buttonText='Choose images'\n                        onChange={this.onDrop}\n                        imgExtension={['.jpg', 'jpeg', '.gif', '.png']}\n                        label=\"Max file size: 5mb, accepted: jpg|jpeg|gif|png\"\n                        maxFileSize={5242880}\n                        withPreview={true}\n                    />\n                </div>\n                <br/>\n                <Form.Row>\n                    <div className=\"col-6 col-md-1\">\n                        <Button variant=\"primary\" type=\"submit\" style={{position: \"relative\"}}\n                                disabled={isLoading ? true : false}\n                                onClick={this.handleClick}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}></span>\n                            {\n                                isLoading ? \"Loading...\" : \"Submit\"\n                            }\n                        </Button>\n                    </div>\n                </Form.Row>\n                <br/>\n                <Form.Row>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp} alertId=\"alert-cars-form\"></MyAlert>\n                </Form.Row>\n\n            </Form>\n        )\n    }\n}\n\nexport default CardFormAdd;","import React from \"react\";\nimport CarFormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\n\nclass CardFormWrapperCars extends React.Component {\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    fromFormToParent = (data) => {\n        this.props.fromWrapperToParent(data)\n    }\n\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new car record</h5>\n                <Card.Body>\n                    <CarFormAdd fromFormToParent={(data) => this.fromFormToParent(data)}></CarFormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CardFormWrapperCars;","import React from \"react\";\nimport {Carousel} from \"react-bootstrap\";\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nclass MyCarousels extends React.Component {\n\n    render() {\n        const {data} = this.props\n        return (\n            <Carousel interval={null}>\n                {\n                    data.imageURLs.map((item, idx) => (\n                        <Carousel.Item key={idx} style={{height: \"300px\"}}>\n                            {/*<img*/}\n                            {/*    className=\"d-block w-100 lazy\"*/}\n                            {/*    src={item.src}*/}\n                            {/*    alt={item.brand}*/}\n                            {/*    style={{height: \"300px\"}}*/}\n                            {/*/>*/}\n                            <LazyLoadImage\n                                style={{minBlockSize: \"-webkit-fill-available\"}}\n                                alt={data.brand}\n                                effect=\"blur\"\n                                src={`https://e307b1922e60.ngrok.io/images/${item}`} // use normal <img> attributes as props\n                                width=\"100%\"/>\n                            <Carousel.Caption>\n                                <h3>{data.brand}</h3>\n                                <p>{data.model}</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                    ))\n                    // Object.keys(data).forEach((key, idx) => (\n                    //\n                    // ))\n                }\n\n                {/*<Carousel.Item>*/}\n                {/*  <img*/}\n                {/*    className=\"d-block w-100\"*/}\n                {/*    src=\"holder.js/800x400?text=Second slide&bg=282c34\"*/}\n                {/*    alt=\"Third slide\"*/}\n                {/*  />*/}\n                {/*  <Carousel.Caption>*/}\n                {/*    <h3>Audi</h3>*/}\n                {/*    <p>100</p>*/}\n                {/*  </Carousel.Caption>*/}\n                {/*</Carousel.Item>*/}\n\n                {/*<Carousel.Item>*/}\n                {/*  <img*/}\n                {/*    className=\"d-block w-100\"*/}\n                {/*    src=\"holder.js/800x400?text=Third slide&bg=20232a\"*/}\n                {/*    alt=\"Third slide\"*/}\n                {/*  />*/}\n                {/*  <Carousel.Caption>*/}\n                {/*    <h3>Audi</h3>*/}\n                {/*    <p>100</p>*/}\n                {/*  </Carousel.Caption>*/}\n                {/*</Carousel.Item>*/}\n\n            </Carousel>\n        );\n    }\n}\n\nexport default MyCarousels;","import React from \"react\";\nimport MyCarousels from \"../common/my-carousels\";\n\nclass CardDetailCars extends React.Component {\n    render() {\n        const {data} = this.props\n        return(\n            <div className=\"col mb-4\">\n                <div className=\"card h-100\" id=\"card-detail-cars\">\n                    <MyCarousels className=\"card-img-top\" data={data}></MyCarousels>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{data.brand +\" \"+ data.model}</h5>\n                        <p className=\"card-text\">Owner: {data.owner.name}</p>\n                        <p className=\"card-text\">Year: {data.year}</p>\n                        <p className=\"card-text\">Color: {data.color}</p>\n                        {/*<p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>*/}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CardDetailCars;","import React from \"react\";\nimport \"./my-search-bar.css\";\nimport $ from \"jquery\";\n\nclass MySearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            fields: this.props.fields\n        }\n    }\n\n    // handleClick = () => {\n    //     $(\"#div-dropdown-menu\").slideToggle()\n    // }\n\n    handleDropDownClick = (event) => {\n        event.preventDefault();\n        $(event.target.nextElementSibling).slideToggle();\n    }\n\n    handleDropDownItemClick = (event) => {\n        const userInput = event.target.innerText\n        if (userInput !== this.state.fields) {\n            this.props.transferMsg(userInput, this.props.label)\n            this.setState({fields: userInput, value: \"\"})\n        }\n        $(event.target.parentElement).slideToggle();\n    }\n\n    handleChange = (e) => {\n        let {value} = this.state\n        value = e.target.value\n        this.setState({...this.state, value})\n    }\n\n    enterTriggerSearch = (e) => {\n        if(e.keyCode === 13) {\n            this.props.transferMsg(this.state.value, \"search-text\")\n            // search-text\n        }\n    }\n\n    clickTriggerSearch = () => {\n        this.props.transferMsg(this.state.value, \"search-text\")\n    }\n\n    render() {\n        const {data, fields} = this.props\n        return (\n            <div className=\"input-group input-field col-12 col-md-3\">\n                <div className=\"input-group-prepend\" style={{height: \"38px\"}}>\n                    <button className=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\"\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\n                            onClick={this.handleDropDownClick}>\n                        {fields}\n                    </button>\n                    <div className=\"dropdown-menu\" id=\"div-dropdown-menu\">\n                        {\n                            data.map((item, idx) => (\n                                <li className=\"dropdown-item\" style={{cursor: \"pointer\"}} key={idx}\n                                    onClick={this.handleDropDownItemClick}>{item}</li>\n                            ))\n                        }\n                        {/*<a className=\"dropdown-item\" href=\"#\">Another action</a>*/}\n                        {/*<a className=\"dropdown-item\" href=\"#\">Something else here</a>*/}\n                        {/*<div role=\"separator\" className=\"dropdown-divider\"></div>*/}\n                        {/*<a className=\"dropdown-item\" href=\"#\">Separated link</a>*/}\n                    </div>\n                </div>\n                <input type=\"text\" className=\"input-search-bar form-control\"\n                       aria-label=\"Text input with dropdown button\"\n                       name=\"search-text\"\n                       value={this.state.value}\n                       onChange={this.handleChange}\n                       onKeyUp={this.enterTriggerSearch}\n                />\n                <i onClick={this.clickTriggerSearch}></i>\n            </div>\n        )\n    }\n}\n\nexport default MySearchBar;","import React from \"react\";\nimport {MyDropdown} from \"../common/my-dropdown\";\nimport MySearchBar from \"../common/my-search-bar\";\nimport jsonData from \"../../car_brand_model.json\";\n\nclass SearchField extends React.Component {\n    constructor(props) {\n        super(props);\n        // let carPreContent = {\n        //     \"All\": [\"All\"]\n        // };\n        // let brandPreContent = []\n        // Object.keys(jsonData).map((v,i)=>{\n        //     brandPreContent.push(v)\n        //     carPreContent[v] = jsonData[v]\n        //     carPreContent[v].unshift(\"All\")\n        // });\n        // console.log(carPreContent)\n        let brandPreContent = [\"All\"]\n        let carPreContent = {\n            \"All\": [\"All\"]\n        }\n        for (let key in jsonData) {\n            brandPreContent.push(key);\n            let arrayCopy = [\"All\", ...jsonData[key]];\n            carPreContent[key] = arrayCopy;\n        }\n        this.state = {\n            colorPreContent: [\"All\", \"WHITE\", \"BLACK\", \"PURPLE\", \"BLUE\", \"NAVY\", \"GREEN\", \"YELLOW\", \"ORANGE\", \"RED\", \"เทา\"],\n            ownerPreContent: [],\n            carPreContent: carPreContent,\n            brandPreContent: brandPreContent,\n            modelPreContent: carPreContent[\"All\"],\n            userInput: {\n                // year: myDate.getFullYear(),\n                searchField: \"Plate Number\",\n                searchText: \"\",\n                color: \"All\",\n                brand: \"All\",\n                model: \"All\"\n            }\n        }\n    }\n\n    transferMsg = (msg, label) => {\n        let key = \"\"\n        switch (label) {\n            case \"color\":\n                key = \"color\";\n                break;\n            case \"owner\":\n                key = \"owner\";\n                break;\n            case \"brand\":\n                key = \"brand\";\n                this.setState({...this.state, modelPreContent: this.state.carPreContent[msg]});\n                this.setState(prevState => {\n                    let userInput = Object.assign({}, prevState.userInput);\n                    userInput[\"model\"] = this.state.carPreContent[msg][0]\n                    return {userInput};\n                })\n                break;\n            case \"model\":\n                key = \"model\";\n                break;\n            case \"search-field\":\n                key = \"searchField\"\n                break;\n            case \"search-text\":\n                key = \"searchText\"\n                break;\n            default:\n                break;\n        }\n        this.setState(prevState => {\n            let userInput = Object.assign({}, prevState.userInput);\n            if (label === \"search-text\") {\n                this.props.fromSearchFieldToParent(userInput)\n            }\n            userInput[key] = msg\n            return {userInput};\n        })\n    }\n\n    render() {\n        console.log(this.state)\n        return (\n            <div className=\"card\">\n                <div className=\"card-body row\">\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)}\n                                data={this.state.colorPreContent} label=\"color\"\n                                value={this.state.userInput.color}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)}\n                                data={this.state.brandPreContent} label=\"brand\"\n                                value={this.state.userInput.brand}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)}\n                                data={this.state.modelPreContent} label=\"model\"\n                                value={this.state.userInput.model}></MyDropdown>\n                    <MySearchBar transferMsg={(msg, label) => this.transferMsg(msg, label)} label=\"search-field\"\n                                 fields={this.state.userInput.searchField}\n                                 data={[\"Plate Number\", \"Owner\"]}></MySearchBar>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchField;","import React from 'react';\n// import {Pagination} from \"react-bootstrap\";\n\n// 每个组件有个prop，prop可以通过'prop.'的方式拿到自定义组件标签里的任一属性\n\nclass MyPagination extends React.Component {\n    handleClick = (e) => {\n        let pageCount = e.target.getAttribute(\"name\")\n        let {currentPageCount} = this.props\n        if (parseInt(pageCount) === currentPageCount) {\n            return\n        }\n        switch (pageCount) {\n            case \"pre\":\n                currentPageCount--\n                break\n            case \"nex\":\n                currentPageCount++\n                break\n            default:\n                currentPageCount = pageCount\n        }\n        this.props.fromPaginationToParent(currentPageCount)\n    }\n\n    render() {\n        const {currentPageCount, dataCount, dataPerPage} = this.props\n        const totalPagesCount = Math.ceil(dataCount / dataPerPage)\n        let arr = []\n        if (totalPagesCount<=5) {\n            for (let i=0;i<totalPagesCount;i++) {\n                arr.push(i+1)\n            }\n        } else {\n            let startPageCount\n            let endPageCount\n            startPageCount = currentPageCount - 2\n            endPageCount = currentPageCount + 2\n            arr = [currentPageCount - 2, currentPageCount - 1, currentPageCount, currentPageCount + 1, currentPageCount + 2]\n            if (startPageCount <= 0) {\n                let count = -(startPageCount)\n                let lastValue = arr[arr.length - 1]\n                arr.splice(0, count + 1)\n                for (let i = 0; i < count + 1; i++) {\n                    lastValue += 1\n                    arr.push(lastValue)\n                }\n            }\n            if (endPageCount > totalPagesCount) {\n                let count = (endPageCount - totalPagesCount)\n                let firstValue = arr[0]\n                arr.splice(arr.length - count, count + 1)\n                for (let i = 0; i < count; i++) {\n                    firstValue -= 1\n                    arr.unshift(firstValue)\n                }\n            }\n        }\n        return (\n            // <Pagination>\n            //   {/*<Pagination.First />*/}\n            //   <Pagination.Prev />\n            //   <Pagination.Item>{1}</Pagination.Item>\n            //   {/*<Pagination.Ellipsis />*/}\n            //\n            //   <Pagination.Item>{10}</Pagination.Item>\n            //   <Pagination.Item active>{12}</Pagination.Item>\n            //   <Pagination.Item disabled>{14}</Pagination.Item>\n            //\n            //   {/*<Pagination.Ellipsis />*/}\n            //   <Pagination.Item>{20}</Pagination.Item>\n            //   <Pagination.Next />\n            //   {/*<Pagination.Last />*/}\n            // </Pagination>\n\n            <ul className=\"pagination\" style={{margin: \"0 auto\"}}>\n                <li className={`page-item ${currentPageCount === 1 ? \"disabled\" : \"\"}`}>\n                    <p className=\"page-link\" role=\"button\" onClick={this.handleClick} name=\"pre\">\n                        ‹\n                    </p>\n                </li>\n                {\n                    arr.map((item, idx) => (\n                        <li key={idx} className={`page-item ${currentPageCount === item ? \"active\" : \"\"}`}>\n                            <p className=\"page-link\" role=\"button\" onClick={this.handleClick} name={item}>{item}</p>\n                        </li>\n                    ))\n                }\n\n                {/*<li className=\"page-item\">*/}\n                {/*    <p className=\"page-link\" role=\"button\">1</p>*/}\n                {/*</li>*/}\n                {/*<li className=\"page-item\">*/}\n                {/*    <p className=\"page-link\" role=\"button\">10</p>*/}\n                {/*</li>*/}\n                {/*<li className=\"page-item active\">*/}\n                {/*    <span className=\"page-link\">*/}\n                {/*        12*/}\n                {/*        <span className=\"sr-only\">(current)</span>*/}\n                {/*    </span>*/}\n                {/*</li>*/}\n                {/*<li className=\"page-item disabled\">*/}\n                {/*    <span className=\"page-link\" disabled=\"\">14</span>*/}\n                {/*</li>*/}\n                {/*<li className=\"page-item\">*/}\n                {/*    <p className=\"page-link\" role=\"button\">20</p>*/}\n                {/*</li>*/}\n\n                <li className={`page-item ${currentPageCount === totalPagesCount ? \"disabled\" : \"\"}`}>\n                    <p className=\"page-link\" role=\"button\" onClick={this.handleClick} name=\"nex\">\n                        ›\n                    </p>\n                </li>\n            </ul>\n        )\n    }\n}\n\nexport default MyPagination;\n","import React from \"react\";\n\nclass MySpinner extends React.Component {\n    render() {\n        const {isLoading} = this.props\n        return (\n            <div>\n                <div className={`modal-backdrop fade ${isLoading ? \"show\" : \"d-none\"}`}></div>\n                <div className={`text-center fade ${isLoading ? \"show\" : \"\"}`}\n                     style={{position: \"fixed\", left: \"50%\", bottom: \"50%\", zIndex: \"1060\"}}>\n                    <div className=\"spinner-border text-primary\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MySpinner;","import React from 'react';\nimport CardFormWrapperCars from \"./card-form-wrapper-cars\";\nimport CardDetailCars from \"./card-detail-cars\";\nimport SearchField from \"./search-field\";\nimport {requestCarsQuery} from \"../../api\";\nimport MyPagination from \"../common/my-pagination\";\nimport MySpinner from \"../common/my-spinner\";\n\n// add a search box, the search keyword can be Licence plate number, owner's name,\n// also add filter of brands / models / color\n\nclass PageCars extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: [\"Name\", \"Phone\", \"Email\"],\n            keys: [\"name\", \"phone\", \"email\"],\n            cars: [],\n            currentPageCount: 1,\n            carsCount: 1,\n            isLoading: true\n        }\n    }\n\n    fromWrapperToParent = (data) => {\n        this.requestData({currentPageCount: this.state.currentPageCount})\n    }\n\n    fromSearchFieldToParent = (userInput) => {\n        userInput.currentPageCount = this.state.currentPageCount\n        this.requestData(userInput)\n    }\n\n    transferMsgFromPagination = async (msg) => {\n        this.setState({isLoading: true})\n        msg = parseInt(msg)\n        await this.requestData(msg)\n        this.setState({currentPageCount: msg})\n    }\n\n    requestData = (queryCondition) => {\n        this.setState({isLoading: true})\n        // {color, brand, model, searchField, searchText, currentPageCount}\n        requestCarsQuery(queryCondition).then((r) => {\n            if (r.data.err_code === 0) {\n                this.setState({\n                    cars: r.data.cars,\n                    carsCount: r.data.count,\n                    isLoading: false\n                })\n            }\n            console.log(this.state)\n        }).catch((err) => {\n            this.setState({\n                isLoading: false\n            })\n            console.log(err)\n        })\n    }\n\n    async componentDidMount() {\n        await this.requestData({currentPageCount: this.state.currentPageCount})\n    }\n\n    render() {\n        const {cars} = this.state\n        return (\n            <div style={{padding: \"30px\"}}>\n                <MySpinner isLoading={this.state.isLoading}></MySpinner>\n                <CardFormWrapperCars\n                    fromWrapperToParent={(data) => this.fromWrapperToParent(data)}></CardFormWrapperCars>\n                <br/>\n                <div className=\"sticky-top\" style={{marginBottom: \"20px\"}}>\n                    <SearchField\n                        fromSearchFieldToParent={(userInput) => this.fromSearchFieldToParent(userInput)}></SearchField>\n                </div>\n                <div className=\"row row-cols-1 row-cols-md-6\">\n                    {\n                        cars.map((car, idx) => (\n                            <CardDetailCars key={idx} data={car}></CardDetailCars>\n                        ))\n                    }\n                </div>\n                <div className=\"row\">\n                    <MyPagination transferMsg={(msg, label) => this.transferMsgFromPagination(msg, label)}\n                                  dataPerPage={18} currentPageCount={this.state.currentPageCount}\n                                  dataCount={this.state.carsCount}></MyPagination>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PageCars;","import React from \"react\";\nimport {Form, Button} from \"react-bootstrap\";\nimport MyAlert from \"../common/my-alert\";\nimport {requestCustomerInsert} from \"../../api\";\n\nclass FormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userInput: {\n                name: \"\",\n                phone: \"\",\n                email: \"\"\n            },\n            isLoading: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        };\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({...this.state, alert: alert})\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        if (key === \"phone\") {\n            let re = /^[0-9]*$/;\n            if (!re.test(value)) {\n                return\n            }\n        }\n        let {userInput} = this.state\n        userInput[key] = value\n        this.setState({...this.state, userInput: userInput})\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        const {userInput} = this.state\n        if (!userInput.name) {\n            this.informAlert(\"Name is empty\")\n            return\n        }\n        let rePhone = /^(09)\\d{8}$/;\n        if (!rePhone.test(userInput.phone)) {\n            this.informAlert(\"Phone number format is not correct\")\n            return\n        }\n        let reEmail = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n        if (!reEmail.test(userInput.email)) {\n            this.informAlert(\"Email format is not correct\")\n            return\n        }\n        this.setState({isLoading: true})\n        requestCustomerInsert(userInput).then((r) => {\n            if (r.data.err_code === 0) {\n                this.props.fromFormToParent(userInput)\n                userInput.name = \"\"\n                userInput.phone = \"\"\n                userInput.email = \"\"\n                this.informAlert(\"Insert success\", \"success\")\n                this.setState({...this.state, userInput: userInput})\n            } else {\n                // 服务器返回错误\n                this.informAlert(\"Insert fail\", \"danger\")\n                // this.setState({...this.state, isLoading: false})\n            }\n            this.setState({...this.state, isLoading: false})\n        }).catch((err) => {\n            // 请求返回错误\n            this.informAlert(`Insert fail ${err}`, \"danger\")\n            this.setState({...this.state, isLoading: false})\n            console.log(err)\n        })\n    }\n\n    render() {\n        const {userInput, isLoading, alert} = this.state\n        return (\n            <Form>\n                <Form.Row>\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Name</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"name\" value={userInput.name}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Phone</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"phone\" value={userInput.phone}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Email</Form.Label>\n                        <input type=\"email\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"email\" value={userInput.email}></input>\n                    </div>\n                    <div className=\"col-6 col-md-1\">\n                        <Button variant=\"primary\" type=\"submit\" style={{top: \"30px\", position: \"relative\"}}\n                                disabled={isLoading ? true : false}\n                                onClick={this.handleClick}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}></span>\n                            {\n                                isLoading ? \"Loading...\" : \"Submit\"\n                            }\n                        </Button>\n                    </div>\n                    {/*<div className=\"col-6 col-md-2\">*/}\n                    {/*    <div className=\"alert alert-danger\" role=\"alert\" id=\"div-alert\"*/}\n                    {/*         style={{position: \"relative\", top: \"20px\", display: \"none\"}}></div>*/}\n                    {/*</div>*/}\n                </Form.Row>\n                <br/>\n                <Form.Row>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp} alertId=\"alert-customers-form\"></MyAlert>\n                </Form.Row>\n\n            </Form>\n        )\n    }\n}\n\nexport default FormAdd;","import React from \"react\";\nimport FormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\"\n\nclass CardFormWrapperCustomers extends React.Component {\n\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    fromFormToParent = (data) => {\n        this.props.fromWrapperToParent(data)\n    }\n\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;{this.props.cardTitle}</h5>\n                <Card.Body>\n                    <FormAdd fromFormToParent={(data) => {this.fromFormToParent(data)}}></FormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CardFormWrapperCustomers;","import React from 'react';\nimport {Table} from \"react-bootstrap\";\nimport {MyDropdown} from \"./my-dropdown\";\nimport MyAlert from \"./my-alert\";\nimport {\n    requestCustomerUpdate,\n    requestCustomerDelete,\n    requestItemDelete,\n    requestItemUpdate\n} from \"../../api\";\n\n// 每个组件有个prop，prop可以通过'prop.'的方式拿到自定义组件标签里的任一属性\n\nexport class MyTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            contents: this.props.contents,\n            idxIsLoading: [],\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    handleClick = (e) => {\n        let {idxIsLoading, contents} = this.state\n        let rowId = parseInt(e.target.parentElement.parentElement.getAttribute(\"idx\"))\n        if (contents.length === 0) {\n            contents = this.props.contents\n        }\n        // if (contents.length === 0) {\n        //     this.informAlert(\"Value no change\")\n        //     return\n        // }\n        let updateFunc\n        let deleteFunc\n        if (this.props.tableRole === \"customers\") {\n            let operatingContent = contents[rowId]\n            for (let item in operatingContent) {\n                if (!operatingContent[item]) {\n                    this.informAlert(\"One or more required fields are empty\")\n                    return\n                }\n            }\n            let rePhone = /^(09)\\d{8}$/;\n            if (!rePhone.test(operatingContent.phone)) {\n                this.informAlert(\"Phone number format is not correct\")\n                return\n            }\n            let reEmail = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n            if (!reEmail.test(operatingContent.email)) {\n                this.informAlert(\"Email format is not correct\")\n                return\n            }\n            updateFunc = requestCustomerUpdate\n            deleteFunc = requestCustomerDelete\n        } else if (this.props.tableRole === \"items\") {\n            // amount: 87\n            // brand: \"brand 1\"\n            // name: \"product 1\"\n            // price: 120\n            // type: \"products\"\n            // _id: \"5f9525e01169084cb2567370\"\n            let operatingContent = contents[rowId]\n            console.log(operatingContent)\n            for (let key in operatingContent) {\n                if (key === \"brand\" && operatingContent.type === \"services\") {\n                    continue\n                }\n                if (!operatingContent[key] && operatingContent.type === \"products\") {\n                    this.informAlert(\"One or more required fields are empty\")\n                    return\n                }\n            }\n            updateFunc = requestItemUpdate\n            deleteFunc = requestItemDelete\n        }\n        idxIsLoading.push(rowId)\n        this.setState({idxIsLoading: idxIsLoading})\n        switch (e.target.getAttribute(\"name\")) {\n            case \"update\":\n                updateFunc(contents[rowId]).then((r) => {\n                    if (r.data.err_code === 0) {\n                        this.informAlert(\"Update success\", \"success\")\n                    } else {\n                        this.informAlert(`Update fail ${r.data.message}`, \"danger\")\n                    }\n                    let {idxIsLoading} = this.state\n                    idxIsLoading = idxIsLoading.filter(idx => idx !== rowId)\n                    this.setState({idxIsLoading: idxIsLoading})\n                }).catch((err) => {\n                    this.informAlert(`Update fail ${err}`, \"danger\")\n                    let {idxIsLoading} = this.state\n                    idxIsLoading = idxIsLoading.filter(idx => idx !== rowId)\n                    this.setState({idxIsLoading: idxIsLoading})\n                })\n                break\n            case \"delete\":\n                deleteFunc({_id: contents[rowId]._id}).then((r) => {\n                    if (r.data.err_code === 0) {\n                        this.informAlert(\"Delete success\", \"success\")\n                        contents = contents.splice(rowId, 1)\n                    } else {\n                        this.informAlert(`Delete fail ${r.data.message}`, \"danger\")\n                    }\n                    let {idxIsLoading} = this.state\n                    idxIsLoading = idxIsLoading.filter(idx => idx !== rowId)\n                    this.setState({contents: contents, idxIsLoading: idxIsLoading})\n                }).catch((err) => {\n                    this.informAlert(`Delete fail ${err}`, \"danger\")\n                    let {idxIsLoading} = this.state\n                    idxIsLoading = idxIsLoading.filter(idx => idx !== rowId)\n                    this.setState({idxIsLoading: idxIsLoading})\n                })\n                break\n            default:\n                break\n        }\n\n\n    }\n\n    handleDropDownChange = (msg, label) => {\n        let {contents} = this.state\n        if (contents.length === 0) {\n            contents = this.props.contents\n        }\n        let operatingContent = contents[label]\n        operatingContent.type = msg\n        if (msg === \"services\") {\n            operatingContent.amount = -1\n            operatingContent.brand = \"\"\n        }\n        if (msg === \"products\") {\n            operatingContent.amount = 0\n            operatingContent.brand = \"\"\n        }\n        this.setState({contents: contents})\n        console.log(operatingContent)\n        console.log(msg, label)\n    }\n\n    handleChange = (e) => {\n        let rowId = e.target.parentElement.parentElement.getAttribute(\"idx\")\n        let columnId = e.target.getAttribute(\"name\")\n        let value = e.target.value\n        let {contents} = this.state\n        if (contents.length === 0) {\n            contents = this.props.contents\n        }\n        console.log(contents)\n        contents[rowId][columnId] = value\n        this.setState({contents: contents})\n    }\n\n    render() {\n        const {fields, keys, contents} = this.props\n        const {alert, idxIsLoading} = this.state\n        return (\n            <div>\n                <div className=\"form-row\">\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}\n                             alertId=\"alert-my-table\"></MyAlert>\n                </div>\n                <Table hover responsive>\n                    <thead>\n                    <tr className=\"thead-dark text-center\">\n                        {\n                            fields.map(\n                                (item, idx) => (\n                                    <th key={idx} width={`${100 / fields.length}%`}>{item}</th>\n                                )\n                            )\n                        }\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        contents.map((item, idx) => (\n                            <tr key={idx} idx={idx}>\n                                {\n                                    keys.map((key, subIdx) => (\n                                        <td key={subIdx} className=\"text-center\">\n                                            {\n                                                key === \"type\"\n                                                    ?\n                                                    <MyDropdown\n                                                        label={idx}\n                                                        transferMsg={(msg, label) => this.handleDropDownChange(msg, label)}\n                                                        data={[\"products\", \"services\"]} value={item[key]}\n                                                        invisibleLabel={true} control={true}></MyDropdown>\n                                                    :\n                                                    <input\n                                                        type={key === \"amount\" || key === \"price\" ? \"number\" : \"text\"}\n                                                        className=\"form-control\" name={key}\n                                                        value={item[key]}\n                                                        disabled={(item[\"type\"] === \"services\" && item[key] === \"\") || item[key] === -1 || idxIsLoading.indexOf(idx) > -1}\n                                                        onChange={this.handleChange}/>\n                                            }\n                                        </td>\n                                    ))\n                                }\n                                <td className=\"text-center\">\n                                    <button type=\"button\" className=\"btn btn-primary\" style={{marginRight: \"20px\"}}\n                                            name=\"update\"\n                                            disabled={idxIsLoading.indexOf(idx) > -1 ? true : false}\n                                            onClick={this.handleClick}>\n                                        <span\n                                            className={`spinner-border spinner-border-sm fade ${idxIsLoading.indexOf(idx) > -1 ? \"show\" : \"d-none\"}`}\n                                            role=\"status\" aria-hidden=\"true\"\n                                            style={{right: \"5px\", position: \"relative\"}}></span>\n                                        {\n                                            idxIsLoading.indexOf(idx) > -1 ? \"Loading...\" : \"Update\"\n                                        }\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-danger\" style={{marginRight: \"20px\"}}\n                                            name=\"delete\"\n                                            disabled={idxIsLoading.indexOf(idx) > -1 ? true : false}\n                                            onClick={this.handleClick}>\n                                        <span\n                                            className={`spinner-border spinner-border-sm fade ${idxIsLoading.indexOf(idx) > -1 ? \"show\" : \"d-none\"}`}\n                                            role=\"status\" aria-hidden=\"true\"\n                                            style={{right: \"5px\", position: \"relative\"}}></span>\n                                        {\n                                            idxIsLoading.indexOf(idx) > -1 ? \"Loading...\" : \"Delete\"\n                                        }\n                                    </button>\n                                </td>\n                            </tr>\n                        ))\n                    }\n                    </tbody>\n                </Table>\n            </div>\n\n\n        )\n    }\n}","import React from 'react';\nimport CardFormWrapperCustomers from \"./card-form-wrapper-customers\";\n// import {CarTable} from './table'\nimport {MyTable} from \"../common/my-table\";\nimport {requestCustomersQuery} from \"../../api\";\nimport MyPagination from \"../common/my-pagination\";\nimport MySpinner from \"../common/my-spinner\";\n\nclass PageCustomer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cardTitle: \"Add a new customer record\",\n            fields: [\"Name\", \"Phone\", \"Email\", \"Action\"],\n            keys: [\"name\", \"phone\", \"email\"],\n            customers: [],\n            currentPageCount: 1,\n            customersCount: 1,\n            isLoading: true\n        }\n    }\n\n    // fromTableToParent = (idx, action) => {\n    //     switch (action) {\n    //         case \"edit\":\n    //             break\n    //         case \"delete\":\n    //             break\n    //         default:\n    //             break\n    //     }\n    //     console.log(this.state.customers[idx])\n    //     console.log(idx, action)\n    // }\n\n    fromWrapperToParent = async (data) => {\n        // let tmp = this.state.items\n        // tmp.unshift(item)\n        // for (let i=10;i<tmp.length;i++) {\n        //     tmp.remove(i)\n        // }\n        // this.setState({...this.state, items: tmp})\n        await this.requestData(this.state.currentPageCount)\n    }\n\n    transferMsgFromPagination = async (msg) => {\n        this.setState({isLoading: true})\n        msg = parseInt(msg)\n        await this.requestData(msg)\n        this.setState({currentPageCount: msg})\n    }\n\n    requestData = async (pageCount) => {\n        this.setState({isLoading: true})\n        requestCustomersQuery({currentPageCount: pageCount}).then((r) => {\n            if (r.data.err_code === 0) {\n                this.setState({\n                    customers: r.data.customers,\n                    customersCount: r.data.customersCount,\n                    isLoading: false\n                })\n            }\n        }).catch((err) => {\n            console.log(err)\n            this.setState({\n                isLoading: false\n            })\n        })\n    }\n\n    async componentDidMount() {\n        await this.requestData(this.state.currentPageCount)\n    }\n\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <MySpinner isLoading={this.state.isLoading}></MySpinner>\n                <CardFormWrapperCustomers\n                    cardTitle={this.state.cardTitle}\n                    fromWrapperToParent={(data) => this.fromWrapperToParent(data)}>\n                </CardFormWrapperCustomers>\n                <br/>\n\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <MyTable\n                            tableRole=\"customers\"\n                            // fromTableToParent={(idx, action) => this.fromTableToParent(idx, action)}\n                            fields={this.state.fields}\n                            keys={this.state.keys}\n                            contents={this.state.customers}>\n                        </MyTable>\n                        <br/>\n                        <div className=\"row\">\n                            <MyPagination transferMsg={(msg, label) => this.transferMsgFromPagination(msg, label)}\n                                          dataPerPage={10} currentPageCount={this.state.currentPageCount}\n                                          dataCount={this.state.customersCount}></MyPagination>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PageCustomer;","import React from \"react\";\nimport {Form, Button} from \"react-bootstrap\";\nimport {MyDropdown} from \"../common/my-dropdown\";\nimport MyAlert from \"../common/my-alert\";\nimport {requestItemInsert} from \"../../api\";\n\nclass FormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userInput: {\n                name: \"\",\n                type: \"products\",\n                brand: \"\",\n                amount: \"\",\n                price: \"\"\n            },\n            isLoading: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        };\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        let tmp = this.state.userInput\n        tmp[key] = value\n        this.setState({...this.state, userInput: tmp})\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        // const {name, type, brand, amount, price} = this.state.userInput\n        const {userInput, alert} = this.state\n        // let validation = false\n        // switch (userInput.type) {\n        //     case \"products\":\n        //         if (userInput.name === \"\" || userInput.type === \"\" || userInput.brand === \"\" || userInput.amount === \"\" || userInput.price === \"\") {\n        //             validation = false\n        //         } else {\n        //             validation = true\n        //         }\n        //         break\n        //     case \"services\":\n        //         if (userInput.name === \"\" || userInput.type === \"\" || userInput.price === \"\") {\n        //             validation = false\n        //         } else {\n        //             validation = true\n        //         }\n        //         break\n        //     default:\n        //         break\n        // }\n        //\n        // if (!validation) {\n        //     let {alert} = this.state\n        //     alert.type = \"warning\"\n        //     alert.value = \"One or more required fields are empty\"\n        //     alert.timeStamp = Date.now()\n        //     this.setState({...this.state, alert: alert})\n        //     return\n        // }\n        for (let key in userInput) {\n            if (key===\"brand\" && userInput.type === \"services\") {\n                continue\n            }\n            if (!userInput[key] && userInput.type === \"products\") {\n                this.informAlert(\"One or more required fields are empty\")\n                return\n            }\n        }\n        if (userInput.type === \"products\") {\n        }\n        this.setState({isLoading: true})\n        requestItemInsert(this.state.userInput).then(r => {\n            this.setState({isLoading: false})\n            // insert suc\n            if (r.data.err_code === 0) {\n                // amount: -1\n                // brand: \"\"\n                // name: \"ubkhi\"\n                // price: 130\n                // type: \"services\"\n                // __v: 0\n                // _id: \"5f919134bf5afef228ea252b\"\n                this.props.fromFormToParent(userInput)\n                userInput.name = \"\"\n                userInput.brand = \"\"\n                userInput.amount = \"\"\n                userInput.price = \"\"\n                alert.type = \"success\"\n                alert.value = \"Insert success\"\n                alert.timeStamp = Date.now()\n                this.setState({...this.state, userInput: userInput, isLoading: false, alert: alert})\n            } else {\n                alert.type = \"danger\"\n                alert.value = `Insert fail ${r.data.message}`\n                alert.timeStamp = Date.now()\n                this.setState({...this.state, isLoading: false, alert: alert})\n            }\n            console.log(this.state)\n            console.log(r)\n        })\n    }\n\n    transferMsg = (msg, label) => {\n        let tmp = this.state.userInput\n        tmp[label] = msg\n        if (msg === \"services\") {\n            tmp[\"brand\"] = \"\"\n            tmp[\"amount\"] = -1\n        }\n        this.setState({...this.state, userInput: tmp})\n    }\n\n    render() {\n        const {isLoading, userInput, alert} = this.state\n        return (\n            <Form>\n                <Form.Row>\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Name</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"name\" value={userInput.name}></input>\n                    </div>\n\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)}\n                                data={[\"products\", \"services\"]} label=\"type\" value={userInput.type}></MyDropdown>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Brand</Form.Label>\n                        <fieldset disabled={userInput.type === \"products\" ? false : true}>\n                            <input type=\"text\" className=\"form-control\"\n                                   style={{textAlign: \"left\", transition: \"all .3s\"}} onChange={this.handleChange}\n                                   name=\"brand\" value={userInput.brand}></input>\n                        </fieldset>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Amount</Form.Label>\n                        <fieldset disabled={userInput.type === \"products\" ? false : true}>\n                            <input type=\"number\" className=\"form-control\"\n                                   style={{textAlign: \"left\", transition: \"all .3s\"}} onChange={this.handleChange}\n                                   name=\"amount\" value={userInput.amount}></input>\n                        </fieldset>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Price</Form.Label>\n                        <input type=\"number\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"price\" value={userInput.price}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-1\">\n                        <Button variant=\"primary\" type=\"submit\" style={{top: \"30px\", position: \"relative\"}}\n                                disabled={isLoading ? true : false}\n                                onClick={this.handleClick}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}></span>\n                            {\n                                isLoading ? \"Loading...\" : \"Submit\"\n                            }\n                        </Button>\n                        {/*<button className=\"btn btn-primary\" type=\"button\" disabled>*/}\n                        {/*    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>*/}\n                        {/*    Loading...*/}\n                        {/*</button>*/}\n                    </div>\n                </Form.Row>\n                <br/>\n                <Form.Row>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp} alertId=\"alert-items-form\"></MyAlert>\n                </Form.Row>\n            </Form>\n        )\n    }\n}\n\nexport default FormAdd;","import React from \"react\";\nimport FormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\n\nclass CardFormWrapperItems extends React.Component {\n\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    fromFormToParent = (item) => {\n        this.props.fromWrapperToParent(item)\n    }\n\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new products/services record</h5>\n                <Card.Body>\n                    <FormAdd fromFormToParent={(item) => this.fromFormToParent(item)}></FormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CardFormWrapperItems;","import React from \"react\";\nimport CardFormWrapperItems from \"./card-form-wrapper-items\";\nimport {MyTable} from \"../common/my-table\";\nimport {requestItemsQuery} from \"../../api\";\nimport MySpinner from \"../common/my-spinner\";\nimport MyPagination from \"../common/my-pagination\";\n\nclass PageItems extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: [\"Name\", \"Type\", \"Brand\", \"Amount\", \"Price\", \"Action\"],\n            keys: [\"name\", \"type\", \"brand\", \"amount\", \"price\"],\n            items: [],\n            currentPageCount: 1,\n            itemsCount: 1,\n            isLoading: true\n        }\n    }\n\n    fromWrapperToParent = async (item) => {\n        // let tmp = this.state.items\n        // tmp.unshift(item)\n        // for (let i=10;i<tmp.length;i++) {\n        //     tmp.remove(i)\n        // }\n        // this.setState({...this.state, items: tmp})\n        await this.requestData(this.state.currentPageCount)\n    }\n\n    transferMsgFromPagination = async (msg) => {\n        msg = parseInt(msg)\n        await this.requestData(msg)\n        this.setState({currentPageCount: msg})\n    }\n\n    requestData = async (pageCount) => {\n        this.setState({isLoading: true})\n        requestItemsQuery({currentPageCount: pageCount}).then((r) => {\n            if (r.data.err_code === 0) {\n                this.setState({\n                    items: r.data.items,\n                    itemsCount: r.data.itemsCount,\n                    isLoading: false\n                })\n            }\n        }).catch((err) => {\n            this.setState({\n                isLoading: false\n            })\n            console.log(err)\n        })\n    }\n\n    async componentDidMount() {\n        await this.requestData()\n    }\n\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <MySpinner isLoading={this.state.isLoading}></MySpinner>\n                <CardFormWrapperItems\n                    fromWrapperToParent={(item) => this.fromWrapperToParent(item)}>\n                </CardFormWrapperItems>\n                <br/>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <MyTable\n                            tableRole=\"items\"\n                            fields={this.state.fields}\n                            contents={this.state.items}\n                            keys={this.state.keys}\n                        ></MyTable>\n                        <div className=\"row\">\n                            <MyPagination fromPaginationToParent={(msg) => this.transferMsgFromPagination(msg)}\n                                          dataPerPage={10}\n                                          currentPageCount={this.state.currentPageCount}\n                                          dataCount={this.state.itemsCount}></MyPagination>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PageItems;","import React from \"react\";\nimport {MyDropdown} from \"../common/my-dropdown\";\n\nexport default class PreRowContent extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(this.props.userInput)\n        this.state = {\n            idx: this.props.rowIdx,\n            oriAmount: parseInt(this.props.userInput[4]),\n            userInput: this.props.userInput\n        }\n    }\n\n    handleDropDownChange = (msg, label) => {\n        let index\n        let {userInput} = this.state\n        let preMsg = [...this.state.userInput]\n        switch (label) {\n            case \"type\":\n                index = 0\n                break\n            case \"items\":\n                index = 1\n                // let items\n                // if (this.state.userInput[0] === \"products\") {\n                //     items = this.props.productsItems\n                // } else {\n                //     items = this.props.servicesItems\n                // }\n                // userInput[2] = items[msg].price ? items[msg].price : 0\n                // userInput[3] = 1\n                break\n            default:\n                break\n        }\n        userInput[index] = msg\n        if (index === 0 && msg !== preMsg[0]) {\n            if (msg === \"products\") {\n                userInput[1] = this.props.productsName[0]\n                // userInput[2] = this.props.productsItems[userInput[1]].price ? this.props.productsItems[userInput[1]].price : 0\n                // userInput[3] = this.props.productsItems[userInput[1]].amount\n                // console.log(userInput)\n            } else {\n                userInput[1] = this.props.servicesName[0]\n                // userInput[2] = this.props.servicesItems[userInput[1]].price ? this.props.servicesItems[userInput[1]].price : 0\n                // console.log(userInput)\n            }\n        }\n        // userInput[3] = 0\n        // userInput[4] = this.state.oriAmount\n        // userInput[5] = parseInt(userInput[2]) * parseInt(userInput[3])\n        // this.setState({\n        //     userInput: userInput\n        // })\n        this.props.transferMsg(preMsg, userInput, this.state.idx)\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        if (value < 0) {\n            return\n        }\n        if (value===\"\") {\n            return\n        }\n        let pre = this.state.userInput\n        const key = e.target.getAttribute('name');\n        let {userInput} = this.state\n        switch (key) {\n            case \"amount\":\n                userInput[3] = value\n                if (userInput[0]===\"products\") {\n                    userInput[4] = this.props.userInput[4] - parseInt(value)\n                }\n                break\n            default:\n                break\n        }\n        if (userInput[4] < 0 && userInput[0] === \"products\") {\n            return\n        }\n        userInput[5] = parseInt(userInput[2]) * parseInt(userInput[3])\n        this.setState({\n            userInput: userInput\n        })\n        this.props.transferMsg(pre, userInput, this.state.idx)\n    }\n\n    handleClick = () => {\n        this.props.fromPreRowContentToParent(this.state.idx)\n    }\n\n    render() {\n        let {type, productsName, servicesName} = this.props\n        let {userInput} = this.props\n        return(\n            <tr>\n                <td>\n                    <MyDropdown transferMsg={(msg, label) => this.handleDropDownChange(msg, label)} data={type} label=\"type\" value={userInput[0]} invisibleLabel={true} control={true}></MyDropdown>\n                </td>\n                <td>\n                    <MyDropdown transferMsg={(msg, label) => this.handleDropDownChange(msg, label)} data={userInput[0] === \"products\" ? productsName : servicesName} label=\"items\" value={userInput[1]} invisibleLabel={true} control={true}></MyDropdown>\n                </td>\n                <td>\n                    {userInput[2]}\n                </td>\n                <td>\n                    <input type=\"number\" className=\"form-control\" style={{textAlign: \"left\"}} onChange={this.handleChange} name=\"amount\" value={userInput[3]}></input>\n                </td>\n                <td>\n                    {userInput[4]}\n                    {/*<span name=\"remainingAmount\">*/}\n                    {/*    */}\n                    {/*</span>*/}\n                </td>\n                <td>\n                    {userInput[5]}\n                </td>\n                <td>\n                    <button type=\"button\" className=\"btn btn-outline-warning\" onClick={this.handleClick}>Remove</button>\n                </td>\n            </tr>\n        )\n    }\n}","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport PreRowContent from \"./preRowContent\";\nimport MyAlert from \"../common/my-alert\";\nimport {requestItemsQuery, requestSalesInsert} from \"../../api\";\nimport MySpinner from \"../common/my-spinner\";\n\nexport default class TableAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: [\"Type\", \"Item\", \"Unit Price\", \"Amount\", \"Remaining Amount\", \"Total\", \"Action\"],\n            type: [\"products\", \"services\"],\n            productsName: [],\n            servicesName: [],\n            // {name: [price, stock]}\n            products: {},\n            services: {},\n            userInput: [],\n            isLoading: false,\n            isDisableButton: false,\n            isVAT: false,\n            gross: 0,\n            VAT: 0,\n            totalPrice: 0,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true})\n        requestItemsQuery({currentPageCount: 0}).then((r) => {\n            let {data} = r\n            if (data.err_code === 0) {\n                let {products, services, productsName, servicesName} = this.state\n                for (let i = 0; i < data.items.length; i++) {\n                    if (data.items[i].type === \"products\") {\n                        productsName.push(data.items[i].name)\n                        products[data.items[i].name] = {\n                            amount: data.items[i].amount,\n                            id: data.items[i]._id,\n                            brand: data.items[i].brand,\n                            price: data.items[i].price\n                        }\n                    } else {\n                        servicesName.push(data.items[i].name)\n                        services[data.items[i].name] = {\n                            amount: data.items[i].amount,\n                            id: data.items[i]._id,\n                            brand: data.items[i].brand,\n                            price: data.items[i].price\n                        }\n                    }\n                }\n                this.setState({\n                    products: products,\n                    services: services,\n                    productsName: productsName,\n                    servicesName: servicesName,\n                    isLoading: false\n                })\n            }\n        }).catch((err) => {\n            this.informAlert(`Request data fail ${err}`, \"danger\")\n            this.setState({\n                isDisableButton: true,\n                isLoading: false\n            })\n            console.log(err)\n        })\n    }\n\n    componentWillUnmount = () => {\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    rollBackArray = (name, value) => {\n        let itemsArr\n        if (this.state.productsName.length === 0 && this.state.servicesName.length === 0) {\n            this.setState({isDisableButton: false})\n        }\n        switch (name) {\n            case \"products\":\n                itemsArr = this.state.productsName\n                if (itemsArr.length === 0) {\n                    let {type} = this.state\n                    type.unshift(\"products\")\n                }\n                itemsArr.push(value)\n                itemsArr = itemsArr.sort()\n                this.setState({productsName: itemsArr})\n                break;\n            case \"services\":\n                itemsArr = this.state.servicesName\n                if (itemsArr.length === 0) {\n                    let {type} = this.state\n                    type.push(\"services\")\n                }\n                itemsArr.push(value)\n                itemsArr = itemsArr.sort()\n                this.setState({servicesName: itemsArr})\n                break;\n            default:\n                break;\n        }\n    }\n\n    filterTheArray = (name, value) => {\n        let arr\n        let {productsName, servicesName, type} = this.state\n        switch (name) {\n            case \"products\":\n                arr = productsName.filter(name => name !== value)\n                if (arr.length === 0) {\n                    this.setState({type: type.filter(name => name !== \"products\")})\n                }\n                if (type.length === 1 && servicesName.length !== 0) {\n                    type.push(\"services\")\n                    this.setState({type: type})\n                }\n                this.setState({productsName: arr})\n                break;\n            case \"services\":\n                arr = servicesName.filter(name => name !== value)\n                if (arr.length === 0) {\n                    this.setState({type: type.filter(name => name !== \"services\")})\n                }\n                if (type.length === 1 && productsName.length !== 0) {\n                    type.unshift(\"products\")\n                    this.setState({type: type})\n                }\n                this.setState({servicesName: arr})\n                break;\n            default:\n                break;\n        }\n        if ((productsName.length === 1 && servicesName.length === 0) || (productsName.length === 0 && servicesName.length === 1)) {\n            this.setState({\n                isDisableButton: true\n            })\n        }\n    }\n\n    handleClick = () => {\n        let {userInput, productsName, servicesName, products, services} = this.state\n        let type\n\n        let name\n        let remainingAmount\n        let price\n        if (productsName.length !== 0) {\n            type = \"products\"\n            name = productsName[0] ? productsName[0] : \"\"\n            remainingAmount = products[name].amount ? products[name].amount : 0\n            price = products[name].price ? products[name].price : 0\n        } else if (servicesName.length !== 0) {\n            type = \"services\"\n            name = servicesName[0] ? servicesName[0] : \"\"\n            remainingAmount = services[name].amount ? services[name].amount : 0\n            price = services[name].price ? services[name].price : 0\n        } else {\n            return\n        }\n\n        userInput.push([type, name, price, 0, remainingAmount, price * 0])\n        this.filterTheArray(type, name)\n        let arr = this.calculateTotalPrice(userInput, this.state.isVAT)\n        this.setState({\n            userInput: userInput,\n            gross: arr[0],\n            VAT: arr[1],\n            totalPrice: arr[2]\n        })\n    }\n\n    handleSubmit = () => {\n        let itemsId = \"\",\n            itemsName = \"\",\n            amount = \"\",\n            remainingAmount = \"\"\n        let {userInput, products, services, totalPrice} = this.state\n        if (userInput.length === 0) {\n            this.informAlert(\"The form is empty\")\n            return\n        }\n        for (let i = 0; i < userInput.length; i++) {\n            if (userInput[i][3] === 0) {\n                this.informAlert(\"The amount should be at least 1\")\n                return\n            }\n            switch (userInput[i][0]) {\n                case \"products\":\n                    itemsId += `${products[userInput[i][1]].id},`\n                    itemsName += `${userInput[i][1]},`\n                    break\n                case \"services\":\n                    itemsId += `${services[userInput[i][1]].id},`\n                    itemsName += `${userInput[i][1]},`\n                    break\n                default:\n                    this.informAlert(\"Please check your data\")\n                    return\n            }\n            amount += `${[userInput[i][3]]},`\n            remainingAmount += `${[userInput[i][4]]},`\n        }\n        itemsId = itemsId.substring(0, itemsId.length - 1)\n        itemsName = itemsName.substring(0, itemsName.length - 1)\n        remainingAmount = remainingAmount.substring(0, remainingAmount.length - 1)\n        amount = amount.substring(0, amount.length - 1)\n        let sales = {\n            itemsId, itemsName, amount, remainingAmount, totalPrice\n        }\n        console.log(sales)\n        this.setState({isLoading: true})\n        requestSalesInsert(sales).then((r) => {\n            if (r.data.err_code === 0) {\n                this.informAlert(\"Insert success\", \"success\")\n                let {userInput} = this.state\n                for (let i=0;i<userInput.length;i++) {\n                    this.rollBackArray(userInput[i][0], userInput[i][1])\n                }\n                userInput.splice(0, userInput.length)\n                this.setState({userInput: userInput, gross: 0, VAT: 0, totalPrice: 0,})\n            } else {\n                // 服务器返回错误\n                this.informAlert(\"Insert fail\", \"danger\")\n            }\n            this.setState({isLoading: false})\n        }).catch((err) => {\n            this.informAlert(`Insert fail ${err}`, \"danger\")\n            this.setState({isLoading: false})\n            console.log(err)\n        })\n    }\n\n    handleChange = (e) => {\n        let isVAT = e.target.checked\n        this.setState(prevState => {\n            let tmp = Object.assign({}, prevState);\n            let arr = this.calculateTotalPrice(tmp[\"userInput\"], isVAT)\n            tmp[\"isVAT\"] = isVAT\n            tmp[\"gross\"] = arr[0]\n            tmp[\"VAT\"] = arr[1]\n            tmp[\"totalPrice\"] = arr[2]\n            return tmp;\n        })\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    transferMsg = (preMsg, newMsg, idx) => {\n        let {userInput, products, services} = this.state\n        let type = newMsg[0]\n        // let name = newMsg[1]\n        let item\n        switch (type) {\n            case \"products\":\n                item = products\n                break\n            case \"services\":\n                item = services\n                break\n            default:\n                break\n        }\n        // 接收type和name更新对应的userInput[idx]\n        // 情况一：数量值更新\n        userInput[idx][0] = newMsg[0]\n        userInput[idx][1] = newMsg[1]\n        if (preMsg[0] === newMsg[0] && preMsg[1] === newMsg[1]) {\n            console.log(newMsg)\n            userInput[idx][2] = newMsg[2]\n            userInput[idx][3] = newMsg[3]\n            userInput[idx][4] = newMsg[4]\n            userInput[idx][5] = newMsg[5]\n        } else {\n            // 情况二：下拉更新\n            // Unit Price\tAmount\tRemaining Amount\tTotal\n            userInput[idx][2] = item[newMsg[1]].price\n            userInput[idx][3] = 0\n            userInput[idx][4] = item[newMsg[1]].amount\n            userInput[idx][5] = item[newMsg[1]].price * 0\n            // roll back\n            this.rollBackArray(preMsg[0], preMsg[1])\n            // filter\n            this.filterTheArray(newMsg[0], newMsg[1])\n        }\n        let arr = this.calculateTotalPrice(userInput, this.state.isVAT)\n        this.setState({\n            userInput: userInput,\n            gross: arr[0],\n            VAT: arr[1],\n            totalPrice: arr[2]\n        })\n    }\n\n    fromPreRowContentToParent = (idx) => {\n        let {userInput} = this.state\n        this.rollBackArray(userInput[idx][0], userInput[idx][1])\n        userInput.splice(idx, 1)\n        if (userInput.length === 0) {\n            this.setState({gross: 0, VAT: 0, totalPrice: 0,})\n        }\n        this.setState({userInput: userInput})\n    }\n\n    calculateTotalPrice = (arr, isVAT) => {\n        let totalPrice = 0;\n        let VAT;\n        arr.map((item) => {\n            totalPrice += parseFloat(item[5])\n        })\n        if (isVAT) {\n            VAT = (totalPrice / 107) * 7\n            return [(totalPrice - VAT).toFixed(2), VAT.toFixed(2), totalPrice.toFixed(2)]\n        }\n        return [totalPrice.toFixed(2), 0, totalPrice.toFixed(2)]\n    }\n\n    render() {\n        let {userInput, gross, VAT, totalPrice, isDisableButton, isLoading, alert} = this.state\n        return (\n            <div>\n                <MySpinner isLoading={isLoading}></MySpinner>\n                <div className=\"text-right\">\n                    <button type=\"button\" className=\"btn btn-light\" style={{marginRight: \"20px\"}}>SAVE&PRINT</button>\n                    <button className=\"btn btn-dark\" type=\"submit\" style={{position: \"relative\"}}\n                            disabled={isLoading ? true : false}\n                            onClick={this.handleSubmit}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}></span>\n                        {\n                            isLoading ? \"Loading...\" : \"SAVE\"\n                        }\n                    </button>\n                </div>\n                <br/>\n                <Table hover responsive>\n                    <thead>\n                    <tr className=\"thead-dark\">\n                        {\n                            this.state.fields.map(\n                                (item, idx) => (\n                                    <th key={idx} style={{width: \"14.2%\"}}>{item}</th>\n                                )\n                            )\n                        }\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        userInput.map(\n                            (item, idx) => (\n                                <PreRowContent key={idx} rowIdx={idx}\n                                               transferMsg={(preMsg, newMsg, idx) => this.transferMsg(preMsg, newMsg, idx)}\n                                               fromPreRowContentToParent={(idx) => this.fromPreRowContentToParent(idx)}\n                                               type={this.state.type}\n                                               productsName={this.state.productsName}\n                                               servicesName={this.state.servicesName}\n                                               productsItems={this.state.products}\n                                               servicesItems={this.state.services}\n                                               userInput={item}></PreRowContent>\n                            )\n                        )\n                    }\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"6\" className=\"text-right\">Gross:</td>\n                        <td>{gross}</td>\n                    </tr>\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"6\" className=\"text-right\">\n                            <input type=\"checkbox\" style={{marginRight: \"10px\"}} onChange={this.handleChange}/>\n                            VAT:\n                        </td>\n                        <td>{VAT}</td>\n                    </tr>\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"6\" className=\"text-right\">Total Price:</td>\n                        <td>{totalPrice}</td>\n                    </tr>\n                    </tbody>\n                </Table>\n                <div>\n                    <button type=\"button\" className=\"btn btn-primary\" disabled={isDisableButton}\n                        onClick={this.handleClick}>Add a new row\n                </button>\n                </div>\n                <br/>\n                <div>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp} alertId=\"alert-table-add\"></MyAlert>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport TableAdd from \"./table-add\";\n\nexport default class CardFormWrapperSales extends React.Component {\n\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    render() {\n        return (\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick}\n                    style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new sales record</h5>\n                <Card.Body>\n                    <TableAdd></TableAdd>\n                </Card.Body>\n            </Card>\n        );\n    }\n}","import React from \"react\";\nimport CardFormWrapperSales from \"./card-form-wrapper-sales\";\n// import Header from \"../header/header\";\n\nexport default class PageSales extends React.Component {\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <CardFormWrapperSales></CardFormWrapperSales>\n            </div>\n        )\n    }\n}","import {requestLogin} from \"../api\";\nimport {ERROR_MSG, AUTH_SUCCESS, LOGIN} from \"./action-type\";\n\nconst authSuccess = (user) => ({type: AUTH_SUCCESS, data: user})\nconst errorMsg = (errMsg) => ({type: ERROR_MSG, data: errMsg})\nconst resLogin = (data) => ({type: LOGIN, data: data})\n\nexport const login = (user) => {\n    return async dispatch => {\n        // requestLogin(user).then(r => {}).catch((err) => {})\n        const {data} = await requestLogin(user)\n        dispatch(resLogin(data))\n        // if (data.err_code === 0) {\n        //     dispatch(authSuccess(data))\n        // } else {\n        //     dispatch(errorMsg(data))\n        // }\n    }\n}","export const AUTH_SUCCESS = 'auth_success'\nexport const ERROR_MSG = 'error_msg'\nexport const LOGIN = 'login'","import React from \"react\";\nimport {login} from \"../redux/action\"\nimport {Button} from \"react-bootstrap\";\nimport {connect} from 'react-redux'\nimport MyAlert from \"../components/common/my-alert\";\n\n// import {Redirect} from 'react-router-dom'\n\nclass PageLogin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: \"\",\n            username: \"\",\n            password: \"\",\n            isChecked: false,\n            isLoading: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    componentWillUnmount = () => {\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    handleChange = (e) => {\n        let key = e.target.getAttribute(\"name\")\n        let value = e.target.value\n        if (key === \"isChecked\") {\n            value = this.state.isChecked ? false : true\n        }\n        this.setState({[key]: value})\n    }\n\n    handleClick = async (e) => {\n        e.preventDefault()\n        if (e.target.getAttribute(\"name\") === \"guest\") {\n            await this.setState({username: \"guest\", password: \"00000000\"})\n        }\n        const {username, password} = this.state\n        if (!username || !password) {\n            this.informAlert(\"One or more required fields are empty\")\n            return\n        }\n        this.setState({isLoading: true})\n        // 发请求redux更新user\n        await this.props.login(this.state)\n        // 读取新的props.user\n        const {response} = this.props.user\n        // err_code: 1\n        // message: \"Username or password is wrong\"\n        console.log(response)\n        if (response.err_code === 0) {\n            this.informAlert(\"Login success\", \"success\")\n            this.props.history.replace('/')\n        } else {\n            this.informAlert(`Login fail ${response.message}`, \"danger\")\n        }\n        this.setState({isLoading: false})\n    }\n\n    enterTriggerSearch = async (e) => {\n        if(e.keyCode === 13) {\n            await this.handleClick(e)\n        }\n    }\n\n    render() {\n        const {isLoading, alert} = this.state\n        return (\n            <div className=\"container\" style={{marginTop: \"200px\"}}>\n                <div className=\"card text-center\">\n                    <div className=\"card-header\">\n                        Login\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"container\">\n                            <div className=\"panel panel-default\">\n                                <div className=\"panel-heading\">\n                                    <h3 className=\"panel-title\">Please sign in</h3>\n                                </div>\n                                <div className=\"panel-body\">\n                                    <fieldset>\n                                        <div className=\"form-group\">\n                                            <input className=\"form-control\" placeholder=\"Username\" name=\"username\"\n                                                   disabled={isLoading}\n                                                   type=\"text\" value={this.state.username}\n                                                   onChange={this.handleChange}/>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <input className=\"form-control\" placeholder=\"Password\" name=\"password\"\n                                                   disabled={isLoading}\n                                                   type=\"password\" value={this.state.password}\n                                                   onChange={this.handleChange}\n                                                   onKeyUp={this.enterTriggerSearch}\n                                            />\n                                        </div>\n                                        <div className=\"checkbox\">\n                                            <label>\n                                                <input name=\"isChecked\" type=\"checkbox\" checked={this.state.isChecked}\n                                                       disabled={isLoading}\n                                                       onChange={this.handleChange} value=\"Remember Me\"/> Remember Me\n                                            </label>\n                                        </div>\n                                        <Button className=\"btn btn-lg btn-block\" variant=\"primary\" type=\"submit\"\n                                                name=\"login\"\n                                                style={{position: \"relative\"}}\n                                                disabled={isLoading ? true : false}\n                                                onClick={this.handleClick}>\n                                            <span\n                                                className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                                role=\"status\" aria-hidden=\"true\"\n                                                style={{right: \"5px\", position: \"relative\"}}></span>\n                                            {\n                                                isLoading ? \"Loading...\" : \"Login\"\n                                            }\n                                        </Button>\n                                        <Button className=\"btn btn-lg btn-block\" variant=\"success\" type=\"submit\"\n                                                name=\"guest\"\n                                                style={{position: \"relative\"}}\n                                                disabled={isLoading ? true : false}\n                                                onClick={this.handleClick}>\n                                            <span\n                                                className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                                role=\"status\" aria-hidden=\"true\"\n                                                style={{right: \"5px\", position: \"relative\"}}></span>\n                                            {\n                                                isLoading ? \"Loading...\" : \"Login as guest\"\n                                            }\n                                        </Button>\n                                        {/*<input className=\"btn btn-lg btn-success btn-block\" type=\"submit\"*/}\n                                        {/*       value=\"Login\" onClick={this.handleClick}/>*/}\n                                    </fieldset>\n                                    <br/>\n                                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}\n                                             alertId=\"alert-login-form\"></MyAlert>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({user: state.user}),\n    {login}\n)(PageLogin)","import React from 'react';\nimport './App.css';\nimport Header from './components/header/header';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport PageCars from \"./components/cars/page-cars\";\nimport PageCustomer from \"./components/customers/page-customers\";\nimport PageItems from \"./components/items/page-items\";\nimport PageSales from \"./components/sales/page-sales\";\nimport {connect} from 'react-redux'\nimport PageLogin from \"./pages/page-login\";\n\nclass App extends React.Component {\n\n    render() {\n        const {user} = this.props.user.response\n        if (!user) {\n            return <Redirect to='/login'/>\n            // console.log(this.props)\n            // this.props.history.replace('/login')\n        }\n        return (\n            <div className=\"main\">\n                <Header/>\n                <Switch>\n                    {/*<DefaultRoute handler={PageSales}/>*/}\n                    <Route path='/sales' component={PageSales}/>\n                    <Route path='/sales_report' component={PageSales}/>\n                    <Route path='/cars' component={PageCars}/>\n                    <Route path='/customers' component={PageCustomer}/>\n                    <Route path='/items' component={PageItems}/>\n                    <Redirect to='/sales'/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({user: state.user}),\n    {}\n)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\";\nimport {AUTH_SUCCESS, ERROR_MSG, LOGIN} from \"./action-type\";\n// import {user} from './action'\n\nconst initUser = {\n    response: {}\n}\n\nexport const user = (state=initUser, action) => {\n    switch (action.type) {\n        case LOGIN:\n            return {response: action.data}\n        // case AUTH_SUCCESS:\n        //     // const authSuccess = (user) => ({type: AUTH_SUCCESS, data: user})\n        //     // action.data -> user\n        //     return {...state, user: action.data, errMsg: \"Login success\"}\n        // case ERROR_MSG:\n        //     // const errorMsg = (errMsg) => ({type: ERROR_MSG, data: errMsg})\n        //     // action.data -> errMsg\n        //     return {...state, errMsg: action.data}\n        default:\n            return state\n    }\n}\n\n// 向外暴露: {user: {}}\nexport default combineReducers({\n    user\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {HashRouter, Switch, Route} from 'react-router-dom'\nimport thunk from 'redux-thunk'\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport {Provider} from 'react-redux'\nimport reducer from \"./redux/reducer\";\nimport PageLogin from \"./pages/page-login\";\n\nconst store = createStore(reducer, compose(\n    applyMiddleware(thunk), //解决redux异步问题\n    window.devToolsExtension ? window.devToolsExtension() : f => f // chrome控制台redux工具\n))\n\nReactDOM.render(\n    // <React.StrictMode>\n    <Provider store={store}>\n        <HashRouter>\n            <Route path='/login' component={PageLogin}></Route>\n            <Route component={App}></Route>\n            {/*<App/>*/}\n        </HashRouter>\n    </Provider>,\n// </React.StrictMode>,\ndocument.getElementById('root')\n)\n;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}