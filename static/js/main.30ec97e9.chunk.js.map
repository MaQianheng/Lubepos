{"version":3,"sources":["pages/index.svg","utils/storageUtils.js","api/HTTP.js","api/index.js","redux/action.js","redux/action-type.js","components/header/header.js","components/common/my-alert.js","components/cars/form-add.js","components/cars/card-form-wrapper-cars.js","components/common/my-carousels.js","components/cars/card-detail-cars.js","components/common/my-search-bar.js","components/cars/search-field.js","components/common/my-pagination.js","components/common/my-spinner.js","components/common/my-vertically-centered-modal.js","components/cars/page-cars.js","components/customers/form-add.js","components/customers/card-form-wrapper-customers.js","components/common/my-table.js","components/customers/page-customers.js","components/items/form-add.js","components/items/card-form-wrapper-items.js","components/items/page-items.js","components/sales/preRowContent.js","utils/normalUtils.js","components/common/my-dropdown.js","components/sales/customer-info.js","components/sales/component-to-print.js","components/sales/table-add.js","components/sales/card-form-wrapper-sales.js","components/sales/page-sales.js","components/sales-report/line-chart.js","components/sales-report/bar-chart.js","components/sales-report/card-charts.js","utils/timeUtils.js","components/sales-report/page-sales-report.js","App.js","serviceWorker.js","redux/reducer.js","pages/page-login.js","index.js"],"names":["module","exports","userid","store","set","get","remove","httpRequest","url","data","type","paramStr","Object","keys","forEach","key","substring","length","axios","fd","FormData","append","i","post","headers","baseUrl","requestLogin","user","requestItemsQuery","queryCondition","requestItemUpdate","item","requestItemDelete","requestCustomersQuery","requestCustomerUpdate","customer","requestCustomerDelete","requestCarsQuery","resLogin","Header","props","handleClick","storageUtils","history","replace","logout","state","navInfo","text","href","isLoading","username","userId","this","setState","then","r","err_code","catch","err","currentPathname","location","pathname","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","map","idx","Link","as","to","Text","Button","variant","style","position","marginLeft","disabled","onClick","role","aria-hidden","right","React","Component","connect","dispatch","withRouter","MyAlert","toggleAlert","$","alertId","slideToggle","timeStamp","preProps","preStates","s","css","value","display","width","aria-label","CardFormAdd","handleModelPreContent","modelPreContent","jsonData","tmp","push","label","informAlert","alert","Date","now","handleChange","e","target","getAttribute","prevState","userInput","assign","handleColorChange","v","color","handleBrandChange","brand","model","handleModelChange","handleOwnerChange","owner","preventDefault","car","plateNumber","year","console","log","fromFormToParent","date","getFullYear","carImages","domCloseIcon","document","getElementsByClassName","click","message","onDrop","picture","requestData","currentPageCount","ownerPreContent","customers","_id","name","brandPreContent","myDate","colorPreContent","oldCarImagesURLs","Form","Label","textAlign","onChange","options","withIcon","buttonText","imgExtension","maxFileSize","withPreview","Row","CardFormWrapperCars","nextElementSibling","toggleClass","action","fromWrapperToParent","Card","cursor","Body","editingData","MyCarousels","Carousel","interval","imageURLs","Item","height","wrapperClassName","minBlockSize","alt","effect","src","Caption","CardDetailCars","handleEditClick","fromCardToParent","handleDeleteClick","carId","margin","MySearchBar","handleDropDownClick","event","handleDropDownItemClick","dropDownItem","innerText","fields","transferMsg","parentElement","enterTriggerSearch","keyCode","clickTriggerSearch","data-toggle","aria-haspopup","aria-expanded","onKeyUp","SearchField","msg","searchField","searchText","fromSearchFieldToParent","defaultValue","MyPagination","pageCount","parseInt","fromPaginationToParent","dataCount","dataPerPage","totalPagesCount","Math","ceil","arr","startPageCount","endPageCount","count","lastValue","splice","firstValue","unshift","MySpinner","left","bottom","zIndex","MyVerticallyCenteredModal","handlePlateChange","handleYearChange","handleImageCloseCLick","handleUpdate","join","onHide","fromModalToParent","nextProps","nextContext","editingdata","ownerprecontent","Modal","size","aria-labelledby","centered","closeButton","Title","top","ListGroup","Footer","PageCars","requestCarsData","cars","carsCount","toggleModal","modalShow","transferMsgFromPagination","a","newImages","padding","show","marginBottom","FormAdd","test","phone","email","CardFormWrapperCustomers","cardTitle","MyTable","idxIsLoading","rowId","updateFunc","deleteFunc","contents","tableRole","operatingContent","filter","fromTableToParent","handleSelectChange","split","pop","amount","columnId","Table","hover","responsive","subIdx","isDisabled","indexOf","marginRight","PageCustomer","customersCount","price","transition","CardFormWrapperItems","PageItems","items","itemsCount","PreRowContent","handleDropDownChange","index","preMsg","productsName","servicesName","rowIdx","handleTypeChange","fromPreRowContentTransferMsgToParent","handleItemChange","handleAmountChange","handleRemoveClick","compare","property","obj1","obj2","value1","value2","CustomerInfo","componentWillUnmount","callback","requestFail","isDisableButton","organisingCars","_cars","obj","organisingCustomers","_customers","sort","handleNameDropDownChange","currentCustomer","fromCustomerInfoTransferMsgToParent","handlePlateDropDownChange","customersName","customersId","ComponentToPrint","gross","VAT","totalPrice","Col","xs","md","Image","striped","bordered","colSpan","marginTop","TableAdd","organisingItems","products","services","remainingLoad","rollBackArray","itemType","itemsArr","filterTheArray","remainingAmount","calculateTotalPrice","isVAT","handleCheckBoxChange","checked","newMsg","preRow","newRow","getItemData","customerInfo","parseFloat","toFixed","handleSubmit","itemsId","itemsName","unitPrice","substr","sales","requestSalesInsert","componentDidMount","submitIsLoading","tmpUserInput","componentToPrintIsDisplay","onBeforePrint","onAfterPrint","trigger","content","componentRef","productsItems","servicesItems","ref","el","initItemsData","initItems","CardFormWrapperSales","PageSales","LineChart","labels","datasets","fill","borderColor","flag","scales","yAxes","ticks","beginAtZero","BarChart","names","amounts","backgroundColor","borderWidth","CardCharts","lineChartData","barChartData","timeStampToDate","getMonth","getDate","getHours","getMinutes","getSeconds","PageSalesReport","conditions","startDate","endDate","startTimeStamp","getTime","endTimeStamp","organisingChartData","organisingTableData","totalCount","arrLineChartData","objBarChartData","createdTimeStamp","sortedItemsName","b","itemsSoldAmount","dateTime","handleStartDateChange","handleEndDateChange","handleRowClick","currentRow","handleModalHide","clearIcon","maxDate","minDate","rowid","App","path","component","Boolean","window","hostname","match","initUser","combineReducers","PageLogin","isChecked","password","login","bgSrc","require","Unsplash","accessKey","timeout","photos","getRandomPhoto","query","orientation","toJson","json","urls","regular","placeholder","createStore","reducer","compose","applyMiddleware","thunk","devToolsExtension","f","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.30ec97e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/index.6fc62ed2.svg\";","import store from 'store'\n\nconst USERID = 'userid'\nexport default {\n    //保存\n    saveUserId(userid) {\n        // localStorage.setItem(USERID,JSON.stringify(userid))\n        store.set(USERID, userid)\n    },\n    //读取\n    getUserId() {\n        // return JSON.parse(localStorage.getItem(USERID) || '{}')\n        return store.get(USERID) || \"\"\n    },\n    //删除\n    deleteUserId() {\n        // localStorage.removeItem(USERID)\n        store.remove(USERID)\n    }\n}","import axios from 'axios'\n//data: {k: v}\nexport default function httpRequest(url, data, type) {\n    if (type === 'GET') {\n        let paramStr = ''\n        Object.keys(data).forEach(key => {\n            paramStr += key + '=' + data[key] + '&'\n        })\n        if (paramStr) {\n            paramStr = paramStr.substring(0, paramStr.length - 1)\n        }\n        // 使用axios发get请求\n        return axios.get(url + '?' + paramStr)\n        // return axios.get(`${url}?username=${data.username}&password=${data.password}`)\n    } else {\n        if (\"carImages\" in data) {\n            const fd = new FormData()\n            Object.keys(data).forEach(key => {\n                fd.append(key, data[key])\n                if (key === \"carImages\") {\n                    for (let i = 0; i < data[key].length; i++) {\n                        fd.append(key, data[key][i])\n                    }\n                }\n            })\n            return axios.post(url, fd, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            })\n        }\n        return axios.post(url, data)\n    }\n}","import httpRequest from \"./HTTP\";\n// http://34.126.86.176:4000\nexport const baseUrl = \"https://d1c27f3537dc.ngrok.io\"\n// export const baseUrl = \"http://127.0.0.1:4000\"\n// let baseUrl = \"http://127.0.0.1:4000\"\n\nexport const requestRegister = (user) => httpRequest(baseUrl + '/users/register', user, 'POST')\nexport const requestLogin = (user) => httpRequest(baseUrl + '/users/login', user, 'POST')\nexport const requestUserInfo = (userId) => httpRequest(baseUrl + '/users/query', userId, 'POST')\n\nexport const requestItemsQuery = (queryCondition) => httpRequest(baseUrl + '/items/query', queryCondition, 'GET')\nexport const requestItemInsert = (item) => httpRequest(baseUrl + '/items/insert', item, 'GET')\nexport const requestItemUpdate = (item) => httpRequest(baseUrl + '/items/update', item, 'GET')\nexport const requestItemDelete = (item) => httpRequest(baseUrl + '/items/delete', item, 'GET')\n\nexport const requestCustomersQuery = (queryCondition) => httpRequest(baseUrl + '/customers/query', queryCondition, 'GET')\nexport const requestCustomerInsert = (customer) => httpRequest(baseUrl + '/customers/insert', customer, 'GET')\nexport const requestCustomerUpdate = (customer) => httpRequest(baseUrl + '/customers/update', customer, 'GET')\nexport const requestCustomerDelete = (customer) => httpRequest(baseUrl + '/customers/delete', customer, 'GET')\n\nexport const requestCarsQuery = (queryCondition) => httpRequest(baseUrl + '/cars/query', queryCondition,'GET')\nexport const requestCarInsert = (car) => httpRequest(baseUrl + '/cars/insert', car,'POST')\nexport const requestCarUpdate = (car) => httpRequest(baseUrl + '/cars/update', car,'POST')\nexport const requestCarDelete = (carId) => httpRequest(baseUrl + '/cars/delete', carId,'GET')\n\nexport const requestSalesQuery = (conditions) => httpRequest(baseUrl + '/sales/query', conditions,'GET')\nexport const requestSalesInsert = (sales) => httpRequest(baseUrl + '/sales/insert', sales,'GET')\n// export const requestSalesInsert = (sales) => httpRequest(baseUrl + '/sales/test', sales,'GET')\n\n\nexport const requestReadMsg = (from) => httpRequest(baseUrl + '/readMsg',{from},'POST')","import {requestLogin} from \"../api\";\nimport {LOGIN, LOGOUT} from \"./action-type\";\n// import {init} from \"http-proxy-middleware/dist/handlers\";\n// import {items} from \"./reducer\";\n\nconst resLogin = (data) => ({type: LOGIN, data: data})\nconst resLogout = () => ({type: LOGOUT})\n\nconst initItems = (items) => ({type: \"init\", data: items})\n\nexport const login = (user) => {\n    return async dispatch => {\n        // requestLogin(user).then(r => {}).catch((err) => {})\n        const {data} = await requestLogin(user)\n        dispatch(resLogin(data))\n        // if (data.err_code === 0) {\n        //     dispatch(authSuccess(data))\n        // } else {\n        //     dispatch(errorMsg(data))\n        // }\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        dispatch(resLogout())\n    }\n}\n\nexport const initItemsData = (items) => {\n    return dispatch => {\n        dispatch(\n            initItems(items)\n        )\n    }\n}","export const LOGIN = 'login'\nexport const LOGOUT = 'logout'","import React from 'react';\nimport {Nav, Navbar, Button} from \"react-bootstrap\";\nimport {withRouter, Link} from 'react-router-dom'\nimport storageUtils from \"../../utils/storageUtils\";\nimport {requestUserInfo} from \"../../api\";\nimport {connect} from 'react-redux';\nimport {logout} from \"../../redux/action\"\n\n// 每个组件有个prop，prop可以通过'prop.'的方式拿到自定义组件标签里的任一属性\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        // let currentPathname = this.props.history.location.pathname\n        // if (currentPathname === \"/\") {\n        //     currentPathname = \"/sales\"\n        //     this.props.history.push(\"/sales\")\n        // }\n        this.state = {\n            navInfo: [\n                {\n                    text: \"SALES REPORT\",\n                    href: \"/sales_report\"\n                },\n                {\n                    text: \"SALES\",\n                    href: \"/sales\"\n                },\n                {\n                    text: \"CARS\",\n                    href: \"/cars\"\n                },\n                {\n                    text: \"CUSTOMERS\",\n                    href: \"/customers\"\n                },\n                {\n                    text: \"PRODUCTS/SERVICES\",\n                    href: \"/items\"\n                }\n            ],\n            isLoading: true,\n            username: \"\"\n        };\n    }\n\n    componentDidMount() {\n        if (!this.props.user.user) {\n            requestUserInfo({userId: storageUtils.getUserId()}).then((r) => {\n                if (r.data.err_code === 0) {\n                    this.setState({username: r.data.user.username})\n                } else {\n                    storageUtils.deleteUserId()\n                }\n                this.setState({isLoading: false})\n            }).catch((err) => {\n                storageUtils.deleteUserId()\n            })\n        } else {\n            this.setState({username: this.props.user.user.username, isLoading: false})\n        }\n    }\n\n    handleClick = () => {\n        storageUtils.deleteUserId()\n        this.props.history.replace('/login')\n        this.props.logout()\n    }\n\n\n    render() {\n        let currentPathname = this.props.history.location.pathname\n        let {isLoading, username} = this.state\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand>The One Car POS</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {\n                            this.state.navInfo.map(\n                                (item, idx) => (\n                                    <Nav.Link as={Link} to={item.href} key={idx}\n                                              className={currentPathname === item.href ? \"active\" : \"\"}>{item.text}</Nav.Link>\n                                )\n                            )\n                        }\n                    </Nav>\n                    {isLoading ? null\n                        :\n                        <Navbar.Text>\n                            Signed in as: {username}\n                        </Navbar.Text>\n                    }\n                    <Button className=\"btn\" variant=\"warning\" type=\"submit\"\n                            style={{position: \"relative\", marginLeft: \"20px\"}}\n                            disabled={isLoading ? true : false}\n                            onClick={this.handleClick}>\n                        <span\n                            className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                            role=\"status\" aria-hidden=\"true\"\n                            style={{right: \"5px\", position: \"relative\"}}></span>\n                        {\n                            isLoading ? \"Loading...\" : \"Logout\"\n                        }\n                    </Button>\n                    {/*<button type=\"button\" class=\"btn btn-warning\" style={{marginLeft: \"20px\"}}></button>*/}\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default connect(\n    state => ({user: state.user}),\n    {logout}\n)(withRouter(Header));\n","import React from \"react\";\nimport $ from \"jquery\";\n\nclass MyAlert extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeStamp: this.props.timeStamp\n        }\n    }\n\n    toggleAlert = () => {\n        $(`#${this.props.alertId}`).slideToggle()\n    }\n\n    componentDidUpdate(preProps,preStates, s) {\n        if (this.props.timeStamp === this.state.timeStamp) {\n            return\n        }\n        this.setState({timeStamp: this.props.timeStamp})\n        // 如果正在展示\n        if ($(`#${this.props.alertId}`).css(\"display\") === \"none\") {\n            this.toggleAlert()\n        }\n        // setTimeout(() => {\n        //     this.toggleAlert()\n        // }, 5000)\n    }\n\n    render() {\n        const {type, value, alertId} = this.props\n        // [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"dark\"]\n\n        return (\n            <div className={`alert alert-${type}`} id={alertId} role=\"alert\" style={{display: \"none\", width: \"100%\"}}>\n                {value}\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={this.toggleAlert}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default MyAlert;","import React from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport \"../common/my-dropdown.css\";\nimport jsonData from \"../../car_brand_model.json\";\nimport ImageUploader from 'react-images-upload';\nimport MyAlert from \"../common/my-alert\";\nimport {requestCustomersQuery, requestCarInsert} from \"../../api\";\nimport Select from \"react-select\";\n\nclass CardFormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        let brandPreContent = [];\n        Object.keys(jsonData).map((v, i) => {\n            brandPreContent.push({value: v, label: v})\n        });\n        let myDate = new Date();\n        let modelPreContent = this.handleModelPreContent(brandPreContent[0].value)\n\n        this.state = {\n            colorPreContent: [\n                {value: \"WHITE\", label: \"WHITE\"},\n                {value: \"BLACK\", label: \"BLACK\"},\n                {value: \"PURPLE\", label: \"PURPLE\"},\n                {value: \"BLUE\", label: \"BLUE\"},\n                {value: \"NAVY\", label: \"NAVY\"},\n                {value: \"GREEN\", label: \"GREEN\"},\n                {value: \"YELLOW\", label: \"YELLOW\"},\n                {value: \"ORANGE\", label: \"ORANGE\"},\n                {value: \"RED\", label: \"RED\"},\n                {value: \"เทา\", label: \"เทา\"}\n            ],\n            // ownersCount: 0,\n            brandPreContent: brandPreContent,\n            modelPreContent: modelPreContent,\n            ownerPreContent: [],\n            userInput: {\n                plateNumber: \"\",\n                year: myDate.getFullYear(),\n                color: \"\",\n                owner: \"\",\n                brand: brandPreContent[0],\n                model: modelPreContent[0],\n                oldCarImagesURLs: [],\n                carImages: \"\"\n            },\n            isLoading: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    // componentWillReceiveProps(nextProps, nextContext) {\n    //     console.log(nextProps)\n    // }\n    //\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     console.log(prevProps)\n    // }\n\n    handleModelPreContent = (key) => {\n        let modelPreContent = []\n        for (let i = 0; i < jsonData[key].length; i++) {\n            let tmp = jsonData[key][i]\n            modelPreContent.push({value: tmp, label: tmp})\n        }\n        return modelPreContent\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({...this.state, alert: alert})\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        this.setState(prevState => {\n            let userInput = Object.assign({}, prevState.userInput);\n            userInput[key] = value\n            return {userInput};\n        })\n    }\n\n    handleColorChange = (v) => {\n        let {userInput} = this.state\n        if (userInput.color === v.value) {\n            return\n        }\n        userInput.color = v.value\n        this.setState({userInput})\n    }\n\n    handleBrandChange = (v) => {\n        let {userInput, modelPreContent} = this.state\n        if (userInput.brand.value === v.value) {\n            return\n        }\n        modelPreContent = this.handleModelPreContent(v.value)\n        userInput.brand = v\n        userInput.model = modelPreContent[0]\n        this.setState({userInput, modelPreContent})\n    }\n\n    handleModelChange = (v) => {\n        let {userInput} = this.state\n        if (userInput.model.value === v.value) {\n            return\n        }\n        userInput.model = v\n        this.setState({userInput})\n    }\n\n    handleOwnerChange = (v) => {\n        let {userInput} = this.state\n        if (userInput.owner === v.value) {\n            return\n        }\n        userInput.owner = v.value\n        this.setState({userInput})\n    }\n\n\n    handleClick = (e) => {\n        e.preventDefault();\n        let {userInput} = this.state\n        if (!userInput.plateNumber || !userInput.year || !userInput.color || !userInput.owner || !userInput.brand || !userInput.model) {\n            this.informAlert(\"One or more required fields are empty\")\n            return\n        }\n        this.setState({isLoading: true})\n        userInput.brand = userInput.brand.value\n        userInput.model = userInput.model.value\n        console.log(userInput)\n        requestCarInsert(userInput).then((r) => {\n            if (r.data.err_code === 0) {\n                this.props.fromFormToParent(\"REQUEST DATA\", r.data.car)\n                let date = new Date()\n                userInput.plateNumber = \"\"\n                userInput.year = date.getFullYear()\n                // userInput.color = []\n                // userInput.owner = []\n                // userInput.brand = []\n                // userInput.model = []\n                userInput.carImages = \"\"\n                let domCloseIcon = document.getElementsByClassName(\"deleteImage\")\n                for (let i = 0; i < domCloseIcon.length; i++) {\n                    domCloseIcon[i].click()\n                }\n                this.informAlert(\"Insert success\", \"success\")\n                this.setState({userInput: userInput})\n            } else {\n                // 服务器返回错误\n                this.informAlert(`Insert fail ${r.data.message}`, \"danger\")\n                // this.setState({...this.state, isLoading: false})\n            }\n            this.setState({isLoading: false})\n        }).catch((err) => {\n            // 请求返回错误\n            this.informAlert(`Insert fail ${err}`, \"danger\")\n            this.setState({isLoading: false})\n            console.log(err)\n        })\n    }\n\n    onDrop = (picture) => {\n        let {userInput} = this.state\n        // userInput.carImages = userInput.carImages.concat(picture)\n        userInput.carImages = picture\n        this.setState({userInput: userInput});\n    }\n\n    requestData = (currentPageCount) => {\n        this.setState({isLoading: true})\n        requestCustomersQuery({currentPageCount}).then((r) => {\n            if (r.data.err_code === 0) {\n                let {ownerPreContent} = this.state\n                for (let i = 0; i < r.data.customers.length; i++) {\n                    ownerPreContent.push({value: r.data.customers[i]._id, label: r.data.customers[i].name})\n                }\n                // console.log(ownerPreContent)\n                this.props.fromFormToParent(\"TRANSFER DATA\", ownerPreContent)\n                this.setState({\n                    ownerPreContent,\n                    // ownersCount: r.data.customersCount,\n                    isLoading: false\n                })\n            } else {\n                this.informAlert(`Request customer data fail ${r.data.message}`, \"danger\")\n            }\n        }).catch((err) => {\n            this.informAlert(`Request customer data fail ${err}`, \"danger\")\n            this.setState({isLoading: false})\n            console.log(err)\n        })\n    }\n\n    componentDidMount() {\n        this.requestData(0)\n    }\n\n    render() {\n        const {userInput, colorPreContent, brandPreContent, modelPreContent, ownerPreContent, isLoading, alert} = this.state\n        return (\n            <Form>\n                <div className=\"row\">\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Plate Number</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"plateNumber\" value={userInput.plateNumber}/>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Year</Form.Label>\n                        <input type=\"number\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"year\" value={userInput.year}/>\n                    </div>\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Color</Form.Label>\n                        <Select options={colorPreContent} onChange={this.handleColorChange}/>\n                    </div>\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Brand</Form.Label>\n                        <Select value={userInput.brand} options={brandPreContent} onChange={this.handleBrandChange}/>\n                    </div>\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Model</Form.Label>\n                        <Select value={userInput.model} options={modelPreContent} onChange={this.handleModelChange}/>\n                    </div>\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Owner</Form.Label>\n                        <Select options={ownerPreContent} onChange={this.handleOwnerChange}/>\n                    </div>\n                    <div className=\"col-6 col-md-3\">\n                    </div>\n                    <ImageUploader\n                        withIcon={true}\n                        buttonText='Choose images'\n                        onChange={this.onDrop}\n                        imgExtension={['.jpg', 'jpeg', '.gif', '.png']}\n                        label=\"Max file size: 5mb, accepted: jpg|jpeg|gif|png\"\n                        maxFileSize={5242880}\n                        withPreview={true}\n                    />\n                    <div className=\"row-cols-2\">\n                        {/*{*/}\n                        {/*    data.imageURLs*/}\n                        {/*        ?*/}\n                        {/*        data.imageURLs.map((item, idx) => (*/}\n                        {/*            <div className=\"col\" style={{display: \"inline-block\"}} key={idx}>*/}\n                        {/*                <img src={`http://127.0.0.1:4000/images/${item}`} alt=\"\"*/}\n                        {/*                     className=\"img-thumbnail\"*/}\n                        {/*                     style={{width: \"-webkit-fill-available\"}}*/}\n                        {/*                />*/}\n                        {/*                <button type=\"button\" className=\"close\" aria-label=\"Close\" style={{*/}\n                        {/*                    position: \"absolute\",*/}\n                        {/*                    top: \"10px\",*/}\n                        {/*                    right: \"30px\"*/}\n                        {/*                }}>*/}\n                        {/*                    <span aria-hidden=\"true\">&times;</span>*/}\n                        {/*                </button>*/}\n                        {/*            </div>*/}\n                        {/*        ))*/}\n                        {/*        :*/}\n                        {/*        null*/}\n                        {/*}*/}\n                    </div>\n                </div>\n                <br/>\n                <Form.Row>\n                    <div className=\"col-6 col-md-1\">\n                        <Button variant=\"primary\" type=\"submit\" style={{position: \"relative\"}}\n                                disabled={!!isLoading}\n                                onClick={this.handleClick}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}/>\n                            {\n                                isLoading ? \"Loading...\" : \"Save\"\n                            }\n                        </Button>\n                    </div>\n                </Form.Row>\n                <br/>\n                <Form.Row>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}\n                             alertId=\"alert-cars-form\"/>\n                </Form.Row>\n\n            </Form>\n        )\n    }\n}\n\nexport default CardFormAdd;","import React from \"react\";\nimport CarFormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\n\nclass CardFormWrapperCars extends React.Component {\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    fromFormToParent = (action, data) => {\n        switch (action) {\n            case \"REQUEST DATA\":\n                this.props.fromWrapperToParent(\"REQUEST DATA\", data)\n                break\n            case \"TRANSFER DATA\":\n                this.props.fromWrapperToParent(\"TRANSFER DATA\", data)\n                break\n            default:\n                break\n        }\n    }\n\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\">\n                </i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new car record</h5>\n                <Card.Body>\n                    <CarFormAdd\n                        editingData={this.props.editingData}\n                        fromFormToParent={(action, data) => this.fromFormToParent(action, data)}\n                    >\n                    </CarFormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CardFormWrapperCars;","import React from \"react\";\nimport {Carousel} from \"react-bootstrap\";\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport {baseUrl} from \"../../api\";\n\nclass MyCarousels extends React.Component {\n\n    render() {\n        const {data} = this.props\n        return (\n            <Carousel interval={null}>\n                {\n                    data.imageURLs.map((item, idx) => (\n                        <Carousel.Item key={idx} style={{height: \"300px\"}}>\n                            {/*<img*/}\n                            {/*    className=\"d-block w-100 lazy\"*/}\n                            {/*    src={item.src}*/}\n                            {/*    alt={item.brand}*/}\n                            {/*    style={{height: \"300px\"}}*/}\n                            {/*/>*/}\n                            <LazyLoadImage\n                                wrapperClassName=\"img-thumbnail\"\n                                style={{minBlockSize: \"-webkit-fill-available\"}}\n                                alt={data.brand}\n                                effect=\"blur\"\n                                // src={`http://127.0.0.1:4000/images/${item}`}\n                                src={`${baseUrl}/images/${item}`} // use normal <img> attributes as props\n                                width=\"100%\"\n                            />\n                            <Carousel.Caption>\n                                <h3>{data.brand}</h3>\n                                <p>{data.model}</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                    ))\n                    // Object.keys(data).forEach((key, idx) => (\n                    //\n                    // ))\n                }\n\n                {/*<Carousel.Item>*/}\n                {/*  <img*/}\n                {/*    className=\"d-block w-100\"*/}\n                {/*    src=\"holder.js/800x400?text=Second slide&bg=282c34\"*/}\n                {/*    alt=\"Third slide\"*/}\n                {/*  />*/}\n                {/*  <Carousel.Caption>*/}\n                {/*    <h3>Audi</h3>*/}\n                {/*    <p>100</p>*/}\n                {/*  </Carousel.Caption>*/}\n                {/*</Carousel.Item>*/}\n\n                {/*<Carousel.Item>*/}\n                {/*  <img*/}\n                {/*    className=\"d-block w-100\"*/}\n                {/*    src=\"holder.js/800x400?text=Third slide&bg=20232a\"*/}\n                {/*    alt=\"Third slide\"*/}\n                {/*  />*/}\n                {/*  <Carousel.Caption>*/}\n                {/*    <h3>Audi</h3>*/}\n                {/*    <p>100</p>*/}\n                {/*  </Carousel.Caption>*/}\n                {/*</Carousel.Item>*/}\n\n            </Carousel>\n        );\n    }\n}\n\nexport default MyCarousels;","import React from \"react\";\nimport MyCarousels from \"../common/my-carousels\";\nimport {Button} from \"react-bootstrap\";\nimport {requestCarDelete} from \"../../api\";\n\nclass CardDetailCars extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false\n        }\n    }\n\n    handleEditClick = () => {\n        this.props.fromCardToParent(\"EDIT\", this.props.data)\n    }\n\n    handleDeleteClick = () => {\n        this.setState({isLoading: true})\n        requestCarDelete({_id: this.props.data._id}).then((r) => {\n            if (r.data.err_code === 0) {\n                this.props.fromCardToParent(\"DELETE SUC\", this.props.data)\n            } else {\n                this.props.fromCardToParent(\"DELETE FAIL\", r.data.message)\n            }\n            this.setState({isLoading: false})\n        }).catch((err) => {\n            this.props.fromCardToParent(\"DELETE FAIL\", err)\n            this.setState({isLoading: false})\n        })\n    }\n\n    render() {\n        const {data} = this.props\n        const {isLoading} = this.state\n        return (\n            <div className=\"col\" style={{margin: \"10px 0px\"}}>\n                <div className=\"card h-100\" id=\"card-detail-cars\">\n                    <MyCarousels className=\"card-img-top\" data={data}/>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{data.brand + \" \" + data.model}</h5>\n                        <p className=\"card-text\">Owner: {data.owner.name}</p>\n                        <p className=\"card-text\">Year: {data.year}</p>\n                        <p className=\"card-text\">Color: {data.color}</p>\n                        <p className=\"card-text\">Plate Number: {data.plateNumber}</p>\n                        <div className=\"row row-cols-6\">\n                            <Button className=\"col-5\" variant=\"primary\" type=\"submit\" style={{position: \"relative\", margin: \"0 10px\"}}\n                                    disabled={!!isLoading} onClick={this.handleEditClick}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}/>\n                                {\n                                    isLoading ? \"Loading...\" : \"Edit\"\n                                }\n                            </Button>\n                            <Button className=\"col-5\" variant=\"danger\" type=\"submit\" style={{position: \"relative\", margin: \"0 10px\"}}\n                                    disabled={!!isLoading} onClick={this.handleDeleteClick}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}/>\n                                {\n                                    isLoading ? \"Loading...\" : \"Delete\"\n                                }\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CardDetailCars;","import React from \"react\";\nimport \"./my-search-bar.css\";\nimport $ from \"jquery\";\n\nclass MySearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            fields: this.props.fields\n        }\n    }\n\n    // handleClick = () => {\n    //     $(\"#div-dropdown-menu\").slideToggle()\n    // }\n\n    handleDropDownClick = (event) => {\n        event.preventDefault();\n        $(event.target.nextElementSibling).slideToggle();\n    }\n\n    handleDropDownItemClick = (event) => {\n        const dropDownItem = event.target.innerText\n        if (dropDownItem !== this.state.fields) {\n            this.props.transferMsg(dropDownItem, \"SEARCH FIELD\")\n            this.setState({fields: dropDownItem, value: \"\"})\n        }\n        $(event.target.parentElement).slideToggle();\n    }\n\n    handleChange = (e) => {\n        let {value} = this.state\n        value = e.target.value\n        this.setState({...this.state, value})\n    }\n\n    enterTriggerSearch = (e) => {\n        if(e.keyCode === 13) {\n            this.props.transferMsg(this.state.value, \"TRIGGER SEARCH\")\n        }\n    }\n\n    clickTriggerSearch = () => {\n        this.props.transferMsg(this.state.value, \"TRIGGER SEARCH\")\n    }\n\n    render() {\n        const {data, fields} = this.props\n        return (\n            <div className=\"input-group input-field col-12 col-md-3\">\n                <div className=\"input-group-prepend\" style={{height: \"38px\"}}>\n                    <button className=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\"\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\n                            onClick={this.handleDropDownClick}>\n                        {fields}\n                    </button>\n                    <div className=\"dropdown-menu\" id=\"div-dropdown-menu\">\n                        {\n                            data.map((item, idx) => (\n                                <li className=\"dropdown-item\" style={{cursor: \"pointer\"}} key={idx}\n                                    onClick={this.handleDropDownItemClick}>{item}</li>\n                            ))\n                        }\n                        {/*<a className=\"dropdown-item\" href=\"#\">Another action</a>*/}\n                        {/*<a className=\"dropdown-item\" href=\"#\">Something else here</a>*/}\n                        {/*<div role=\"separator\" className=\"dropdown-divider\"></div>*/}\n                        {/*<a className=\"dropdown-item\" href=\"#\">Separated link</a>*/}\n                    </div>\n                </div>\n                <input type=\"text\" className=\"input-search-bar form-control\"\n                       aria-label=\"Text input with dropdown button\"\n                       name=\"search-text\"\n                       value={this.state.value}\n                       onChange={this.handleChange}\n                       onKeyUp={this.enterTriggerSearch}\n                />\n                <i onClick={this.clickTriggerSearch}></i>\n            </div>\n        )\n    }\n}\n\nexport default MySearchBar;","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport MySearchBar from \"../common/my-search-bar\";\nimport jsonData from \"../../car_brand_model.json\";\n\nclass SearchField extends React.Component {\n    constructor(props) {\n        super(props);\n        let brandPreContent = [{value: \"All\", label: \"All\"}]\n        Object.keys(jsonData).map((v, i) => {\n            brandPreContent.push({value: v, label: v})\n        });\n        let modelPreContent = this.handleModelPreContent(brandPreContent[0].value)\n        this.state = {\n            colorPreContent: [\n                {value: \"All\", label: \"All\"},\n                {value: \"WHITE\", label: \"WHITE\"},\n                {value: \"BLACK\", label: \"BLACK\"},\n                {value: \"PURPLE\", label: \"PURPLE\"},\n                {value: \"BLUE\", label: \"BLUE\"},\n                {value: \"NAVY\", label: \"NAVY\"},\n                {value: \"GREEN\", label: \"GREEN\"},\n                {value: \"YELLOW\", label: \"YELLOW\"},\n                {value: \"ORANGE\", label: \"ORANGE\"},\n                {value: \"RED\", label: \"RED\"},\n                {value: \"เทา\", label: \"เทา\"}\n            ],\n            brandPreContent: brandPreContent,\n            modelPreContent: modelPreContent,\n            userInput: {\n                // year: myDate.getFullYear(),\n                searchField: \"Plate Number\",\n                searchText: \"\",\n                color: {value: \"All\", label: \"All\"},\n                brand: {value: \"All\", label: \"All\"},\n                model: {value: \"All\", label: \"All\"}\n            }\n        }\n    }\n\n    handleModelPreContent = (key) => {\n        let modelPreContent = [{value: \"All\", label: \"All\"}]\n        if (key === \"All\") {\n            return modelPreContent\n        }\n        for (let i = 0; i < jsonData[key].length; i++) {\n            let tmp = jsonData[key][i]\n            modelPreContent.push({value: tmp, label: tmp})\n        }\n        return modelPreContent\n    }\n\n    handleColorChange = (v) => {\n        let {userInput} = this.state\n        if (userInput.color.value === v.value) {\n            return\n        }\n        userInput.color = v\n        this.setState({userInput})\n    }\n\n    handleBrandChange = (v) => {\n        let {userInput, modelPreContent} = this.state\n        if (userInput.brand.value === v.value) {\n            return\n        }\n        modelPreContent = this.handleModelPreContent(v.value)\n        userInput.brand = v\n        userInput.model = modelPreContent[0]\n        this.setState({userInput, modelPreContent})\n    }\n\n    handleModelChange = (v) => {\n        let {userInput} = this.state\n        if (userInput.model.value === v.value) {\n            return\n        }\n        userInput.model = v\n        this.setState({userInput})\n    }\n\n    transferMsg = (msg, label) => {\n        let {userInput} = this.state\n        if (label === \"SEARCH FIELD\") {\n            userInput.searchField = msg\n            this.setState({userInput})\n        }\n        if (label === \"TRIGGER SEARCH\") {\n            let tmp = {}\n            tmp.color = userInput.color.value\n            tmp.brand = userInput.brand.value\n            tmp.model = userInput.model.value\n            tmp.searchField = userInput.searchField\n            tmp.searchText = msg\n            this.props.fromSearchFieldToParent(tmp)\n        }\n    }\n\n    render() {\n\n        let {userInput, colorPreContent, brandPreContent, modelPreContent} = this.state\n        return (\n            <div className=\"card\">\n                <div className=\"card-body row\">\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Color</Form.Label>\n                        <Select defaultValue={{value: \"All\", label: \"All\"}} options={colorPreContent}\n                                onChange={this.handleColorChange}/>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Brand</Form.Label>\n                        <Select value={userInput.brand} options={brandPreContent} onChange={this.handleBrandChange}/>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Model</Form.Label>\n                        <Select value={userInput.model} options={modelPreContent} onChange={this.handleModelChange}/>\n                    </div>\n\n                    <MySearchBar transferMsg={(msg, label) => this.transferMsg(msg, label)} label=\"search-field\"\n                                 fields={userInput.searchField}\n                                 data={[\"Plate Number\", \"Owner\"]}></MySearchBar>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchField;","import React from 'react';\n\nclass MyPagination extends React.Component {\n    handleClick = (e) => {\n        let pageCount = e.target.getAttribute(\"name\")\n        let {currentPageCount} = this.props\n        if (parseInt(pageCount) === currentPageCount) {\n            return\n        }\n        switch (pageCount) {\n            case \"pre\":\n                currentPageCount--\n                break\n            case \"nex\":\n                currentPageCount++\n                break\n            default:\n                currentPageCount = pageCount\n        }\n        this.props.fromPaginationToParent(currentPageCount)\n    }\n\n    render() {\n        const {currentPageCount, dataCount, dataPerPage} = this.props\n        const totalPagesCount = Math.ceil(dataCount / dataPerPage)\n        let arr = []\n        if (totalPagesCount <= 5) {\n            for (let i = 0; i < totalPagesCount; i++) {\n                arr.push(i + 1)\n            }\n        } else {\n            let startPageCount\n            let endPageCount\n            startPageCount = currentPageCount - 2\n            endPageCount = currentPageCount + 2\n            arr = [currentPageCount - 2, currentPageCount - 1, currentPageCount, currentPageCount + 1, currentPageCount + 2]\n            if (startPageCount <= 0) {\n                let count = -(startPageCount)\n                let lastValue = arr[arr.length - 1]\n                arr.splice(0, count + 1)\n                for (let i = 0; i < count + 1; i++) {\n                    lastValue += 1\n                    arr.push(lastValue)\n                }\n            }\n            if (endPageCount > totalPagesCount) {\n                let count = (endPageCount - totalPagesCount)\n                let firstValue = arr[0]\n                arr.splice(arr.length - count, count + 1)\n                for (let i = 0; i < count; i++) {\n                    firstValue -= 1\n                    arr.unshift(firstValue)\n                }\n            }\n        }\n        return (\n            <ul className=\"pagination\" style={{margin: \"0 auto\"}}>\n                <li className={`page-item ${currentPageCount === 1 ? \"disabled\" : \"\"}`}>\n                    <p className=\"page-link\" role=\"button\" onClick={this.handleClick} name=\"pre\">\n                        ‹\n                    </p>\n                </li>\n                {\n                    arr.map((item, idx) => (\n                        <li key={idx} className={`page-item ${currentPageCount === item ? \"active\" : \"\"}`}>\n                            <p className=\"page-link\" role=\"button\" onClick={this.handleClick} name={item}>{item}</p>\n                        </li>\n                    ))\n                }\n                <li className={`page-item ${currentPageCount === totalPagesCount ? \"disabled\" : \"\"}`}>\n                    <p className=\"page-link\" role=\"button\" onClick={this.handleClick} name=\"nex\">\n                        ›\n                    </p>\n                </li>\n            </ul>\n        )\n    }\n}\n\nexport default MyPagination;\n","import React from \"react\";\n\nclass MySpinner extends React.Component {\n    render() {\n        const {isLoading} = this.props\n        return (\n            <div>\n                <div className={`modal-backdrop fade ${isLoading ? \"show\" : \"d-none\"}`}/>\n                <div className={`text-center fade ${isLoading ? \"show\" : \"\"}`}\n                     style={{position: \"fixed\", left: \"50%\", bottom: \"50%\", zIndex: \"1060\"}}>\n                    <div className=\"spinner-border text-primary\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MySpinner;","import {Button, Modal, ListGroup} from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport ImageUploader from 'react-images-upload';\nimport React from \"react\";\nimport jsonData from \"../../car_brand_model.json\";\nimport {baseUrl, requestCarUpdate} from \"../../api\";\nimport MyAlert from \"./my-alert\";\n\nexport default class MyVerticallyCenteredModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let brandPreContent = [];\n        Object.keys(jsonData).map((v, i) => {\n            brandPreContent.push({value: v, label: v})\n        });\n        let modelPreContent = this.handleModelPreContent(brandPreContent[0].value)\n\n        this.state = {\n            colorPreContent: [\n                {value: \"WHITE\", label: \"WHITE\"},\n                {value: \"BLACK\", label: \"BLACK\"},\n                {value: \"PURPLE\", label: \"PURPLE\"},\n                {value: \"BLUE\", label: \"BLUE\"},\n                {value: \"NAVY\", label: \"NAVY\"},\n                {value: \"GREEN\", label: \"GREEN\"},\n                {value: \"YELLOW\", label: \"YELLOW\"},\n                {value: \"ORANGE\", label: \"ORANGE\"},\n                {value: \"RED\", label: \"RED\"},\n                {value: \"เทา\", label: \"เทา\"}\n            ],\n            // ownersCount: 0,\n            isLoading: false,\n            brandPreContent: brandPreContent,\n            modelPreContent: modelPreContent,\n            ownerPreContent: [],\n            editingData: {\n                brand: \"\",\n                color: \"\",\n                model: \"\",\n                imageURLs: [],\n                carImages: [],\n                owner: \"\",\n                plateNumber: \"\",\n                year: \"\",\n                _id: \"\"\n            },\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n        // console.log(data)\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        console.log(nextProps)\n        let {editingData, modelPreContent} = this.state\n        editingData = {...nextProps.editingdata}\n        if (editingData.brand) {\n            modelPreContent = this.handleModelPreContent(editingData.brand)\n        } else {\n            modelPreContent = []\n        }\n        editingData.brand = {value: editingData.brand, label: editingData.brand}\n        editingData.color = {value: editingData.color, label: editingData.color}\n        editingData.model = {value: editingData.model, label: editingData.model}\n        editingData.owner = {value: editingData.owner._id, label: editingData.owner.name}\n        editingData.carImages = []\n        this.setState({editingData, modelPreContent, ownerPreContent: nextProps.ownerprecontent})\n    }\n\n    handleModelPreContent = (key) => {\n        let modelPreContent = []\n        for (let i = 0; i < jsonData[key].length; i++) {\n            let tmp = jsonData[key][i]\n            modelPreContent.push({value: tmp, label: tmp})\n        }\n        return modelPreContent\n    }\n\n    onDrop = (picture) => {\n        let {editingData} = this.state\n        editingData.carImages = picture\n        this.setState({editingData: editingData});\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    handleOwnerChange = (v) => {\n        let {editingData} = this.state\n        editingData.owner = v\n        this.setState({editingData})\n    }\n\n    handlePlateChange = (e) => {\n        let {editingData} = this.state\n        editingData.plateNumber = e.target.value\n        this.setState({editingData})\n    }\n\n    handleYearChange = (e) => {\n        let {editingData} = this.state\n        editingData.year = e.target.value\n        this.setState({editingData})\n    }\n\n    handleColorChange = (v) => {\n        let {editingData} = this.state\n        editingData.color = v\n        this.setState({editingData})\n    }\n\n    handleBrandChange = (v) => {\n        let {editingData, modelPreContent} = this.state\n        editingData.brand = v\n        modelPreContent = this.handleModelPreContent(editingData.brand.value)\n        editingData.model = modelPreContent[0]\n        this.setState({editingData, modelPreContent})\n    }\n\n    handleModelChange = (v) => {\n        let {editingData} = this.state\n        editingData.model = v\n        this.setState({editingData})\n    }\n\n    handleImageCloseCLick = (e) => {\n        let {editingData} = this.state\n        let idx = e.target.getAttribute(\"idx\")\n        editingData.imageURLs.splice(parseInt(idx), 1)\n        this.setState({editingData})\n    }\n\n    handleUpdate = () => {\n        // brand: {value: \"Avanti\", label: \"Avanti\"}\n        // color: {value: \"BLACK\", label: \"BLACK\"}\n        // imageURLs: (2) [\"4414ba7cee277ccd34c5899eb6b37e7a.jpeg\", \"e313903b8cb3c17cb07fc4342a8b681f.jpeg\"]\n        // model: {value: \"Coupe\", label: \"Coupe\"}\n        // newImages: [File]\n        // owner: {value: \"5f9aeb34b680344055bc4156\", label: \"3\"}\n        // plateNumber: \"214522\"\n        // year: \"2015\"\n        // _id: \"5f9b7bb8bdf6ca4b7d11a3fe\"\n        let {editingData} = this.state\n        let tmp = {...editingData, imageURLs: editingData.imageURLs.join(\",\"), brand: editingData.brand.value, model: editingData.model.value, color: editingData.color.value, owner: editingData.owner.value}\n        this.setState({isLoading: true})\n        requestCarUpdate(tmp).then((r) => {\n            if (r.data.err_code === 0) {\n                this.props.onHide()\n                this.props.fromModalToParent(\"REQUEST DATA\", r.data.car)\n            } else {\n                this.informAlert(`Update fail ${r.data.message}`, \"danger\")\n            }\n            this.setState({isLoading: false})\n        }).catch((err) => {\n            this.setState({isLoading: false})\n            this.informAlert(`Update fail ${err}`, \"danger\")\n        })\n    }\n\n\n    render() {\n        let {editingData, ownerPreContent, colorPreContent, brandPreContent, modelPreContent, isLoading, alert} = this.state\n        return (\n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"row\">\n                    </Modal.Title>\n                </Modal.Header>\n                <h5>\n                    <li className=\"list-group-item list-group-item-info\">\n                        Owner:\n                        <Select options={ownerPreContent} value={editingData.owner}\n                                onChange={this.handleOwnerChange}\n                        />\n                    </li>\n                </h5>\n                <Modal.Body>\n                    <div className=\"row-cols-2\">\n                        {\n                            editingData.imageURLs\n                                ?\n                                editingData.imageURLs.map((item, idx) => (\n                                    <div className=\"col\" style={{display: \"inline-block\"}} key={idx}>\n                                        <img src={`${baseUrl}/images/${item}`} alt=\"\"\n                                             className=\"img-thumbnail\"\n                                             style={{width: \"-webkit-fill-available\"}}\n                                        />\n                                        <button type=\"button\" className=\"close\" aria-label=\"Close\" style={{\n                                            position: \"absolute\",\n                                            top: \"10px\",\n                                            right: \"30px\"\n                                        }}\n                                            // onClick={}\n                                        >\n                                            <span aria-hidden=\"true\" idx={idx}\n                                                  onClick={this.handleImageCloseCLick}>&times;</span>\n                                        </button>\n                                    </div>\n                                ))\n                                :\n                                null\n                        }\n                    </div>\n                    <ImageUploader\n                        withIcon={true}\n                        buttonText='Choose images'\n                        onChange={this.onDrop}\n                        imgExtension={['.jpg', 'jpeg', '.gif', '.png']}\n                        label=\"Max file size: 5mb, accepted: jpg|jpeg|gif|png\"\n                        maxFileSize={5242880}\n                        withPreview={true}\n                    />\n                    <h4>Car info:</h4>\n                    <ListGroup.Item action variant=\"light\">\n                        Plate Number:\n                        <input type=\"text\" className=\"form-control\" value={editingData.plateNumber}\n                               onChange={this.handlePlateChange}/>\n                    </ListGroup.Item>\n                    <ListGroup.Item action variant=\"light\">\n                        Year:\n                        <input type=\"number\" className=\"form-control\" value={editingData.year}\n                               onChange={this.handleYearChange}/>\n                    </ListGroup.Item>\n                    <ListGroup.Item action variant=\"light\">\n                        Color:\n                        <Select options={colorPreContent} value={editingData.color} onChange={this.handleColorChange}/>\n                    </ListGroup.Item>\n                    <ListGroup.Item action variant=\"light\">\n                        Car Brand:\n                        <Select options={brandPreContent} value={editingData.brand} onChange={this.handleBrandChange}/>\n                    </ListGroup.Item>\n                    <ListGroup.Item action variant=\"light\">\n                        Car Model:\n                        <Select options={modelPreContent} value={editingData.model} onChange={this.handleModelChange}/>\n                    </ListGroup.Item>\n                </Modal.Body>\n                <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}\n                             alertId=\"alert-cars-modal\"/>\n                <Modal.Footer>\n                    <Button variant=\"primary\" type=\"submit\" style={{position: \"relative\"}}\n                            disabled={!!isLoading}\n                            onClick={this.handleUpdate}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}/>\n                        {\n                            isLoading ? \"Loading...\" : \"Update\"\n                        }\n                    </Button>\n                    {/*<Button>Close</Button>*/}\n                    {/*<Button onClick={this.props.onHide}>Close</Button>*/}\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}","import React from 'react';\nimport CardFormWrapperCars from \"./card-form-wrapper-cars\";\nimport CardDetailCars from \"./card-detail-cars\";\nimport SearchField from \"./search-field\";\nimport {requestCarsQuery} from \"../../api\";\nimport MyPagination from \"../common/my-pagination\";\nimport MySpinner from \"../common/my-spinner\";\nimport MyVerticallyCenteredModal from \"../common/my-vertically-centered-modal\";\nimport MyAlert from \"../common/my-alert\";\n\nclass PageCars extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fields: [\"Name\", \"Phone\", \"Email\"],\n            keys: [\"name\", \"phone\", \"email\"],\n            cars: [],\n            currentPageCount: 1,\n            carsCount: 1,\n            isLoading: true,\n            modalShow: false,\n            ownerPreContent: [],\n            editingData: {\n                brand: \"\",\n                color: \"\",\n                imageURLs: [],\n                newImages: [],\n                model: \"\",\n                owner: {\n                    _id: \"\",\n                    name: \"\"\n                },\n                plateNumber: \"\",\n                year: \"\",\n                _id: \"\"\n            },\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    async componentDidMount () {\n        await this.requestCarsData({currentPageCount: 1})\n    }\n\n    requestCarsData = (queryCondition) => {\n        this.setState({isLoading: true})\n        // {color, brand, model, searchField, searchText, currentPageCount}\n        requestCarsQuery(queryCondition).then((r) => {\n            if (r.data.err_code === 0) {\n                this.setState({\n                    cars: r.data.cars,\n                    carsCount: r.data.count,\n                    isLoading: false\n                })\n            } else {\n                this.setState({isLoading: false})\n                this.informAlert(`Request data fail ${r.data.message}`, \"danger\")\n            }\n        }).catch((err) => {\n            this.setState({isLoading: false})\n            this.informAlert(`Request data fail ${err}`, \"danger\")\n        })\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    toggleModal = () => {\n        let {modalShow} = this.state\n        this.setState({modalShow: !modalShow})\n    }\n\n    fromCardToParent = (action, data) => {\n        switch (action) {\n            case \"EDIT\":\n                this.setState({editingData: data})\n                this.toggleModal()\n                break\n            case \"DELETE SUC\":\n                this.requestCarsData({currentPageCount: this.state.currentPageCount})\n                break\n            case \"DELETE FAIL\":\n                this.informAlert(data, \"danger\")\n                break\n            default:\n                break\n        }\n    }\n\n    fromModalToParent = (action, data) => {\n        switch (action) {\n            case \"REQUEST DATA\":\n                this.requestCarsData({currentPageCount: this.state.currentPageCount})\n                break\n            default:\n                break\n        }\n    }\n\n    fromWrapperToParent = (action, data) => {\n        switch (action) {\n            case \"REQUEST DATA\":\n                this.requestCarsData({currentPageCount: this.state.currentPageCount})\n                break\n            case \"TRANSFER DATA\":\n                this.setState({ownerPreContent: data})\n                // this.props.fromWrapperToParent(\"TRANSFER DATA\", data)\n                break\n            default:\n                break\n        }\n\n    }\n\n    fromSearchFieldToParent = (userInput) => {\n        userInput.currentPageCount = 1\n        this.requestCarsData(userInput)\n    }\n\n    transferMsgFromPagination = async (msg) => {\n        this.setState({isLoading: true})\n        msg = parseInt(msg)\n        await this.requestCarsData(msg)\n        this.setState({currentPageCount: msg})\n    }\n\n    render() {\n        const {cars, modalShow, isLoading, currentPageCount, carsCount, editingData, ownerPreContent} = this.state\n\n        return (\n            <div style={{padding: \"30px\"}}>\n                <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}\n                             alertId=\"alert-page-cars\"/>\n                <MyVerticallyCenteredModal\n                    fromModalToParent={(action, data) => this.fromModalToParent(action, data)}\n                    ownerprecontent={ownerPreContent}\n                    editingdata={editingData}\n                    show={modalShow}\n                    onHide={this.toggleModal}\n                />\n                <MySpinner isLoading={isLoading}/>\n                <CardFormWrapperCars\n                    editingData={editingData}\n                    fromWrapperToParent={(action, data) => this.fromWrapperToParent(action, data)}>\n                </CardFormWrapperCars>\n                <br/>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"sticky-top\" style={{marginBottom: \"20px\"}}>\n                            <SearchField\n                                fromSearchFieldToParent={(userInput) => this.fromSearchFieldToParent(userInput)}/>\n                        </div>\n                        <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4\">\n                            {\n                                cars.map((car, idx) => (\n                                    <CardDetailCars\n                                        fromCardToParent={(action, data) => this.fromCardToParent(action, data)}\n                                        key={idx} data={car}/>\n                                ))\n                            }\n                        </div>\n                        <div className=\"row\">\n                            <MyPagination\n                                fromPaginationToParent={(msg, label) => this.transferMsgFromPagination(msg, label)}\n                                dataPerPage={18} currentPageCount={currentPageCount}\n                                dataCount={carsCount}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PageCars;","import React from \"react\";\nimport {Form, Button} from \"react-bootstrap\";\nimport MyAlert from \"../common/my-alert\";\nimport {requestCustomerInsert} from \"../../api\";\n\nclass FormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userInput: {\n                name: \"\",\n                phone: \"\",\n                email: \"\"\n            },\n            isLoading: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        };\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({...this.state, alert: alert})\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        if (key === \"phone\") {\n            let re = /^[0-9]*$/;\n            if (!re.test(value)) {\n                return\n            }\n        }\n        let {userInput} = this.state\n        userInput[key] = value\n        this.setState({...this.state, userInput: userInput})\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        const {userInput} = this.state\n        if (!userInput.name) {\n            this.informAlert(\"Name is empty\")\n            return\n        }\n        let rePhone = /^(09)\\d{8}$/;\n        if (!rePhone.test(userInput.phone)) {\n            this.informAlert(\"Phone number format is not correct\")\n            return\n        }\n        let reEmail = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n        if (!reEmail.test(userInput.email)) {\n            this.informAlert(\"Email format is not correct\")\n            return\n        }\n        this.setState({isLoading: true})\n        requestCustomerInsert(userInput).then((r) => {\n            if (r.data.err_code === 0) {\n                this.props.fromFormToParent(userInput)\n                userInput.name = \"\"\n                userInput.phone = \"\"\n                userInput.email = \"\"\n                this.informAlert(\"Insert success\", \"success\")\n                this.setState({...this.state, userInput: userInput})\n            } else {\n                // 服务器返回错误\n                this.informAlert(\"Insert fail\", \"danger\")\n                // this.setState({...this.state, isLoading: false})\n            }\n            this.setState({...this.state, isLoading: false})\n        }).catch((err) => {\n            // 请求返回错误\n            this.informAlert(`Insert fail ${err}`, \"danger\")\n            this.setState({...this.state, isLoading: false})\n            console.log(err)\n        })\n    }\n\n    render() {\n        const {userInput, isLoading, alert} = this.state\n        return (\n            <Form>\n                <Form.Row>\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Name</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"name\" value={userInput.name}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Phone</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"phone\" value={userInput.phone}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Email</Form.Label>\n                        <input type=\"email\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"email\" value={userInput.email}></input>\n                    </div>\n                    <div className=\"col-6 col-md-1\">\n                        <Button variant=\"primary\" type=\"submit\" style={{top: \"30px\", position: \"relative\"}}\n                                disabled={isLoading ? true : false}\n                                onClick={this.handleClick}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}></span>\n                            {\n                                isLoading ? \"Loading...\" : \"Submit\"\n                            }\n                        </Button>\n                    </div>\n                    {/*<div className=\"col-6 col-md-2\">*/}\n                    {/*    <div className=\"alert alert-danger\" role=\"alert\" id=\"div-alert\"*/}\n                    {/*         style={{position: \"relative\", top: \"20px\", display: \"none\"}}></div>*/}\n                    {/*</div>*/}\n                </Form.Row>\n                <br/>\n                <Form.Row>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp} alertId=\"alert-customers-form\"></MyAlert>\n                </Form.Row>\n\n            </Form>\n        )\n    }\n}\n\nexport default FormAdd;","import React from \"react\";\nimport FormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\"\n\nclass CardFormWrapperCustomers extends React.Component {\n\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    fromFormToParent = (data) => {\n        this.props.fromWrapperToParent(data)\n    }\n\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;{this.props.cardTitle}</h5>\n                <Card.Body>\n                    <FormAdd fromFormToParent={(data) => {this.fromFormToParent(data)}}></FormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CardFormWrapperCustomers;","import React from 'react';\nimport {Table} from \"react-bootstrap\";\nimport Select from 'react-select'\nimport MyAlert from \"./my-alert\";\nimport {\n    requestCustomerUpdate,\n    requestCustomerDelete,\n    requestItemDelete,\n    requestItemUpdate\n} from \"../../api\";\n\nexport class MyTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            idxIsLoading: [],\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    handleClick = (e) => {\n        let {idxIsLoading} = this.state\n        let rowId = parseInt(e.target.parentElement.parentElement.getAttribute(\"idx\"))\n        console.log(rowId)\n        // if (contents.length === 0) {\n        //     contents = this.props.contents\n        // }\n\n        let {contents} = this.props\n\n        // if (contents.length === 0) {\n        //     this.informAlert(\"Value no change\")\n        //     return\n        // }\n        let updateFunc\n        let deleteFunc\n        if (this.props.tableRole === \"customers\") {\n            let operatingContent = contents[rowId]\n            for (let item in operatingContent) {\n                if (!operatingContent[item]) {\n                    this.informAlert(\"One or more required fields are empty\")\n                    return\n                }\n            }\n            console.log(operatingContent)\n            let rePhone = /^(09)\\d{8}$/;\n            if (!rePhone.test(operatingContent.phone)) {\n                this.informAlert(\"Phone number format is not correct\")\n                return\n            }\n            let reEmail = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n            if (!reEmail.test(operatingContent.email)) {\n                this.informAlert(\"Email format is not correct\")\n                return\n            }\n            updateFunc = requestCustomerUpdate\n            deleteFunc = requestCustomerDelete\n        } else if (this.props.tableRole === \"items\") {\n            // amount: 87\n            // brand: \"brand 1\"\n            // name: \"product 1\"\n            // price: 120\n            // type: \"products\"\n            // _id: \"5f9525e01169084cb2567370\"\n            let operatingContent = contents[rowId]\n            for (let key in operatingContent) {\n                if (key === \"brand\" && operatingContent.type === \"services\") {\n                    continue\n                }\n                if (!operatingContent[key] && operatingContent.type === \"products\") {\n                    this.informAlert(\"One or more required fields are empty\")\n                    return\n                }\n            }\n            updateFunc = requestItemUpdate\n            deleteFunc = requestItemDelete\n        }\n        idxIsLoading.push(rowId)\n        this.setState({idxIsLoading: idxIsLoading})\n        switch (e.target.getAttribute(\"name\")) {\n            case \"update\":\n                updateFunc(contents[rowId]).then((r) => {\n                    if (r.data.err_code === 0) {\n                        this.informAlert(\"Update success\", \"success\")\n                    } else {\n                        this.informAlert(`Update fail ${r.data.message}`, \"danger\")\n                    }\n                    let {idxIsLoading} = this.state\n                    idxIsLoading = idxIsLoading.filter(idx => idx !== rowId)\n                    this.setState({idxIsLoading: idxIsLoading})\n                }).catch((err) => {\n                    this.informAlert(`Update fail ${err}`, \"danger\")\n                    let {idxIsLoading} = this.state\n                    idxIsLoading = idxIsLoading.filter(idx => idx !== rowId)\n                    this.setState({idxIsLoading: idxIsLoading})\n                })\n                break\n            case \"delete\":\n                deleteFunc({_id: contents[rowId]._id}).then((r) => {\n                    if (r.data.err_code === 0) {\n                        this.informAlert(\"Delete success\", \"success\")\n                        contents.splice(rowId, 1)\n                        if (contents.length === 0) {\n                            this.props.fromTableToParent(\"REQUEST PREVIOUS\")\n                        }\n                    } else {\n                        this.informAlert(`Delete fail ${r.data.message}`, \"danger\")\n                    }\n                    let {idxIsLoading} = this.state\n                    idxIsLoading = idxIsLoading.filter(idx => idx !== rowId)\n                    this.setState({contents: contents, idxIsLoading: idxIsLoading})\n                }).catch((err) => {\n                    this.informAlert(`Delete fail ${err}`, \"danger\")\n                    let {idxIsLoading} = this.state\n                    idxIsLoading = idxIsLoading.filter(idx => idx !== rowId)\n                    this.setState({idxIsLoading: idxIsLoading})\n                })\n                break\n            default:\n                break\n        }\n\n    }\n\n    handleSelectChange = (value) => {\n        let idx = value.value.split('-').pop()\n\n        // let {contents} = this.state\n        // if (contents.length === 0) {\n        //     contents = this.props.contents\n        // }\n\n        let {contents} = this.props\n\n        let operatingContent = contents[parseInt(idx)]\n        operatingContent.type = value.label\n        if (value.label === \"services\") {\n            operatingContent.amount = -1\n            operatingContent.brand = \"\"\n        }\n        if (value.label === \"products\") {\n            operatingContent.amount = 0\n            operatingContent.brand = \"\"\n        }\n        this.setState({contents: contents}, () => {console.log(this.state.contents)})\n    }\n\n    handleChange = (e) => {\n        let rowId = e.target.parentElement.parentElement.getAttribute(\"idx\")\n        let columnId = e.target.getAttribute(\"name\")\n        let value = e.target.value\n        // let {contents} = this.state\n        // if (contents.length === 0) {\n        //     contents = this.props.contents\n        // }\n\n        let {contents} = this.props\n\n        console.log(this.props.contents)\n        console.log(contents, rowId)\n        contents[rowId][columnId] = value\n        this.setState({contents: contents})\n    }\n\n    render() {\n        const {fields, keys, contents} = this.props\n        const {alert, idxIsLoading} = this.state\n        return (\n            <div>\n                <div className=\"form-row\">\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}\n                             alertId=\"alert-my-table\"/>\n                </div>\n                <Table hover responsive>\n                    <thead>\n                    <tr className=\"thead-dark text-center\">\n                        {\n                            fields.map(\n                                (item, idx) => (\n                                    <th key={idx} width={`${100 / fields.length}%`}>{item}</th>\n                                )\n                            )\n                        }\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        contents.map((item, idx) => (\n                            <tr key={idx} idx={idx}>\n                                {\n                                    keys.map((key, subIdx) => (\n                                        <td key={subIdx}>\n                                            {\n                                                key === \"type\"\n                                                    ?\n                                                    <Select\n                                                        id={idx}\n                                                        value={{value: item[key], label: item[key]}}\n                                                        options={[\n                                                            {value: `products-${idx}`, label: 'products'},\n                                                            {value: `services-${idx}`, label: 'services'},\n                                                        ]}\n                                                        isDisabled={idxIsLoading.indexOf(idx) > -1}\n                                                        onChange={this.handleSelectChange}\n                                                    />\n                                                :\n                                                <input\n                                                type={key === \"amount\" || key === \"price\" ? \"number\" : \"text\"}\n                                                className=\"form-control\" name={key}\n                                                value={item[key]}\n                                                disabled={(item[\"type\"] === \"services\" && item[key] === \"\") || item[key] === -1 || idxIsLoading.indexOf(idx) > -1}\n                                                onChange={this.handleChange}/>\n                                            }\n                                        </td>\n                                    ))\n                                }\n                                <td className=\"text-center\">\n                                    <button type=\"button\" className=\"btn btn-primary\" style={{marginRight: \"20px\"}}\n                                            name=\"update\"\n                                            disabled={idxIsLoading.indexOf(idx) > -1}\n                                            onClick={this.handleClick}>\n                                        <span\n                                            className={`spinner-border spinner-border-sm fade ${idxIsLoading.indexOf(idx) > -1 ? \"show\" : \"d-none\"}`}\n                                            role=\"status\" aria-hidden=\"true\"\n                                            style={{right: \"5px\", position: \"relative\"}}/>\n                                        {\n                                            idxIsLoading.indexOf(idx) > -1 ? \"Loading...\" : \"Update\"\n                                        }\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-danger\" style={{marginRight: \"20px\"}}\n                                            name=\"delete\"\n                                            disabled={idxIsLoading.indexOf(idx) > -1}\n                                            onClick={this.handleClick}>\n                                        <span\n                                            className={`spinner-border spinner-border-sm fade ${idxIsLoading.indexOf(idx) > -1 ? \"show\" : \"d-none\"}`}\n                                            role=\"status\" aria-hidden=\"true\"\n                                            style={{right: \"5px\", position: \"relative\"}}/>\n                                        {\n                                            idxIsLoading.indexOf(idx) > -1 ? \"Loading...\" : \"Delete\"\n                                        }\n                                    </button>\n                                </td>\n                            </tr>\n                        ))\n                    }\n                    </tbody>\n                </Table>\n            </div>\n\n\n        )\n    }\n}","import React from 'react';\nimport CardFormWrapperCustomers from \"./card-form-wrapper-customers\";\n// import {CarTable} from './table'\nimport {MyTable} from \"../common/my-table\";\nimport {requestCustomersQuery} from \"../../api\";\nimport MyPagination from \"../common/my-pagination\";\nimport MySpinner from \"../common/my-spinner\";\n\nclass PageCustomer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cardTitle: \"Add a new customer record\",\n            fields: [\"Name\", \"Phone\", \"Email\", \"Action\"],\n            keys: [\"name\", \"phone\", \"email\"],\n            customers: [],\n            currentPageCount: 1,\n            customersCount: 1,\n            isLoading: true\n        }\n    }\n\n    fromTableToParent = async (action) => {\n        switch (action) {\n            case \"REQUEST PREVIOUS\":\n                let {currentPageCount} = this.state\n                currentPageCount -= 1\n                if (currentPageCount === 0) {\n                    return\n                }\n                this.setState({currentPageCount})\n                await this.requestData(currentPageCount)\n                break\n            default:\n                break\n        }\n    }\n\n    fromWrapperToParent = async (data) => {\n        // let tmp = this.state.items\n        // tmp.unshift(item)\n        // for (let i=10;i<tmp.length;i++) {\n        //     tmp.remove(i)\n        // }\n        // this.setState({...this.state, items: tmp})\n        await this.requestData(this.state.currentPageCount)\n    }\n\n    transferMsgFromPagination = async (msg) => {\n        this.setState({isLoading: true})\n        msg = parseInt(msg)\n        await this.requestData(msg)\n        this.setState({currentPageCount: msg})\n    }\n\n    requestData = async (pageCount) => {\n        this.setState({isLoading: true})\n        requestCustomersQuery({currentPageCount: pageCount}).then((r) => {\n            if (r.data.err_code === 0) {\n                this.setState({\n                    customers: r.data.customers,\n                    customersCount: r.data.customersCount,\n                    isLoading: false\n                })\n            }\n        }).catch((err) => {\n            console.log(err)\n            this.setState({\n                isLoading: false\n            })\n        })\n    }\n\n    async componentDidMount() {\n        await this.requestData(this.state.currentPageCount)\n    }\n\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <MySpinner isLoading={this.state.isLoading}/>\n                <CardFormWrapperCustomers\n                    cardTitle={this.state.cardTitle}\n                    fromWrapperToParent={(data) => this.fromWrapperToParent(data)}>\n                </CardFormWrapperCustomers>\n                <br/>\n\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <MyTable\n                            tableRole=\"customers\"\n                            fromTableToParent={(action) => this.fromTableToParent(action)}\n                            fields={this.state.fields}\n                            keys={this.state.keys}\n                            contents={this.state.customers}/>\n                        <br/>\n                        <div className=\"row\">\n                            <MyPagination\n                                fromPaginationToParent={(msg, label) => this.transferMsgFromPagination(msg, label)}\n                                dataPerPage={10} currentPageCount={this.state.currentPageCount}\n                                dataCount={this.state.customersCount}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PageCustomer;","import React from \"react\";\nimport {Form, Button} from \"react-bootstrap\";\nimport MyAlert from \"../common/my-alert\";\nimport {requestItemInsert} from \"../../api\";\nimport Select from 'react-select'\n\nclass FormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userInput: {\n                name: \"\",\n                type: {value: \"products\", label: \"products\"},\n                brand: \"\",\n                amount: \"\",\n                price: \"\"\n            },\n            isLoading: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        };\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        let tmp = this.state.userInput\n        tmp[key] = value\n        this.setState({...this.state, userInput: tmp})\n    }\n\n    handleSelectChange = (value) => {\n        let tmp = this.state.userInput\n        tmp.type = value\n        if (value.value === \"services\") {\n            tmp[\"brand\"] = \"\"\n            tmp[\"amount\"] = -1\n        }\n        if (value.value === \"products\") {\n            tmp[\"amount\"] = \"\"\n        }\n        this.setState({userInput: tmp})\n        console.log(value)\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        // const {name, type, brand, amount, price} = this.state.userInput\n        let {userInput, alert} = this.state\n        for (let key in userInput) {\n            if (key === \"brand\" && userInput.type.value === \"services\") {\n                continue\n            }\n            if (!userInput[key]) {\n                this.informAlert(\"One or more required fields are empty\")\n                return\n            }\n        }\n        let tmp = {...userInput, type: userInput.type.value}\n        this.setState({isLoading: true})\n        requestItemInsert(tmp).then(r => {\n            this.setState({isLoading: false})\n            // insert suc\n            if (r.data.err_code === 0) {\n                // amount: -1\n                // brand: \"\"\n                // name: \"ubkhi\"\n                // price: 130\n                // type: \"services\"\n                // __v: 0\n                // _id: \"5f919134bf5afef228ea252b\"\n                this.props.fromFormToParent(userInput)\n                userInput.name = \"\"\n                userInput.brand = \"\"\n                if (userInput.type.value === \"services\") {\n                    userInput.amount = \"-1\"\n                } else {\n                    userInput.amount = \"\"\n                }\n                userInput.price = \"\"\n                alert.type = \"success\"\n                alert.value = \"Insert success\"\n                alert.timeStamp = Date.now()\n                this.setState({userInput: userInput, isLoading: false, alert: alert})\n            } else {\n                alert.type = \"danger\"\n                alert.value = `Insert fail ${r.data.message}`\n                alert.timeStamp = Date.now()\n                this.setState({...this.state, isLoading: false, alert: alert})\n            }\n            console.log(this.state)\n            console.log(r)\n        })\n    }\n\n    // transferMsg = (msg, label) => {\n    //     let tmp = this.state.userInput\n    //     tmp[label] = msg\n    //     if (msg === \"services\") {\n    //         tmp[\"brand\"] = \"\"\n    //         tmp[\"amount\"] = -1\n    //     }\n    //     if (msg === \"products\") {\n    //         tmp[\"amount\"] = \"\"\n    //     }\n    //     this.setState({...this.state, userInput: tmp})\n    // }\n\n    render() {\n        const {isLoading, userInput, alert} = this.state\n        return (\n            <Form>\n                <Form.Row>\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Name</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"name\" value={userInput.name} disabled={isLoading}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Type</Form.Label>\n                        <Select\n                            value={userInput.type}\n                            options={[\n                                {value: 'products', label: 'products'},\n                                {value: 'services', label: 'services'}\n                            ]}\n                            isDisabled={isLoading}\n                            onChange={this.handleSelectChange}\n                        />\n                    </div>\n\n                    {/*<MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)}*/}\n                    {/*            data={[\"products\", \"services\"]} label=\"type\" value={userInput.type}></MyDropdown>*/}\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Brand</Form.Label>\n                        <fieldset disabled={(userInput.type.value === \"products\" ? false : true) || isLoading}>\n                            <input type=\"text\" className=\"form-control\"\n                                   style={{textAlign: \"left\", transition: \"all .3s\"}} onChange={this.handleChange}\n                                   name=\"brand\" value={userInput.brand}></input>\n                        </fieldset>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Amount</Form.Label>\n                        <fieldset disabled={(userInput.type.value === \"products\" ?  false : true) || isLoading}>\n                            <input type=\"number\" className=\"form-control\"\n                                   style={{textAlign: \"left\", transition: \"all .3s\"}} onChange={this.handleChange}\n                                   name=\"amount\" value={userInput.amount}></input>\n                        </fieldset>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Price</Form.Label>\n                        <input type=\"number\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"price\" value={userInput.price} disabled={isLoading}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-1\">\n                        <Button variant=\"primary\" type=\"submit\" style={{top: \"30px\", position: \"relative\"}}\n                                disabled={isLoading ? true : false}\n                                onClick={this.handleClick}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}></span>\n                            {\n                                isLoading ? \"Loading...\" : \"Submit\"\n                            }\n                        </Button>\n                        {/*<button className=\"btn btn-primary\" type=\"button\" disabled>*/}\n                        {/*    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>*/}\n                        {/*    Loading...*/}\n                        {/*</button>*/}\n                    </div>\n                </Form.Row>\n                <br/>\n                <Form.Row>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}\n                             alertId=\"alert-items-form\"></MyAlert>\n                </Form.Row>\n            </Form>\n        )\n    }\n}\n\nexport default FormAdd;","import React from \"react\";\nimport FormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\n\nclass CardFormWrapperItems extends React.Component {\n\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    fromFormToParent = (item) => {\n        this.props.fromWrapperToParent(item)\n    }\n\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new products/services record</h5>\n                <Card.Body>\n                    <FormAdd fromFormToParent={(item) => this.fromFormToParent(item)}></FormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CardFormWrapperItems;","import React from \"react\";\nimport CardFormWrapperItems from \"./card-form-wrapper-items\";\nimport {MyTable} from \"../common/my-table\";\nimport {requestItemsQuery} from \"../../api\";\nimport MySpinner from \"../common/my-spinner\";\nimport MyPagination from \"../common/my-pagination\";\n\nclass PageItems extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: [\"Name\", \"Type\", \"Brand\", \"Amount\", \"Price\", \"Action\"],\n            keys: [\"name\", \"type\", \"brand\", \"amount\", \"price\"],\n            items: [],\n            currentPageCount: 1,\n            itemsCount: 1,\n            isLoading: true\n        }\n    }\n\n    fromTableToParent = async (action) => {\n        switch (action) {\n            case \"REQUEST PREVIOUS\":\n                let {currentPageCount} = this.state\n                currentPageCount -= 1\n                if (currentPageCount === 0) {\n                    return\n                }\n                this.setState({currentPageCount})\n                await this.requestData(currentPageCount)\n                break\n            default:\n                break\n        }\n    }\n\n    fromWrapperToParent = async (item) => {\n        // let tmp = this.state.items\n        // tmp.unshift(item)\n        // for (let i=10;i<tmp.length;i++) {\n        //     tmp.remove(i)\n        // }\n        // this.setState({...this.state, items: tmp})\n        await this.requestData(this.state.currentPageCount)\n    }\n\n    transferMsgFromPagination = async (msg) => {\n        msg = parseInt(msg)\n        await this.requestData(msg)\n        this.setState({currentPageCount: msg})\n    }\n\n    requestData = async (pageCount) => {\n        this.setState({isLoading: true})\n        requestItemsQuery({currentPageCount: pageCount}).then((r) => {\n            if (r.data.err_code === 0) {\n                this.setState({\n                    items: r.data.items,\n                    itemsCount: r.data.itemsCount,\n                    isLoading: false\n                })\n            }\n        }).catch((err) => {\n            this.setState({\n                isLoading: false\n            })\n            console.log(err)\n        })\n    }\n\n    async componentDidMount() {\n        await this.requestData()\n    }\n\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <MySpinner isLoading={this.state.isLoading}/>\n                <CardFormWrapperItems\n                    fromWrapperToParent={(item) => this.fromWrapperToParent(item)}>\n                </CardFormWrapperItems>\n                <br/>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <MyTable\n                            tableRole=\"items\"\n                            fromTableToParent={(action) => this.fromTableToParent(action)}\n                            fields={this.state.fields}\n                            contents={this.state.items}\n                            keys={this.state.keys}\n                        />\n                        <div className=\"row\">\n                            <MyPagination fromPaginationToParent={(msg) => this.transferMsgFromPagination(msg)}\n                                          dataPerPage={10}\n                                          currentPageCount={this.state.currentPageCount}\n                                          dataCount={this.state.itemsCount}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PageItems;","import React from \"react\";\nimport {connect} from 'react-redux'\nimport Select from \"react-select\";\n\nclass PreRowContent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleDropDownChange = (msg, label) => {\n        let index\n        let {userInput} = this.props\n        let preMsg = [...this.props.userInput]\n        switch (label) {\n            case \"type\":\n                index = 0\n                break\n            case \"items\":\n                index = 1\n                break\n            default:\n                break\n        }\n        userInput[index] = msg\n        if (index === 0 && msg !== preMsg[0]) {\n            if (msg === \"products\") {\n                userInput[1] = this.props.productsName[0]\n            } else {\n                userInput[1] = this.props.servicesName[0]\n            }\n        }\n        this.props.transferMsg(preMsg, userInput, this.props.rowIdx)\n    }\n\n    handleTypeChange = (v) => {\n        this.props.fromPreRowContentTransferMsgToParent(\"CHANGE TYPE\", v, this.props.rowIdx)\n    }\n\n    handleItemChange = (v) => {\n        this.props.fromPreRowContentTransferMsgToParent(\"CHANGE ITEM\", v, this.props.rowIdx)\n    }\n\n    handleAmountChange = (e) => {\n        let {value} = e.target\n        if (value < 0) {\n            return\n        }\n        if (!value) {\n            return\n        }\n        let {userInput} = this.props\n        if (value > userInput[6] && userInput[0].value === \"products\") {\n            return\n        }\n        userInput[3] = value\n        // 这里要用原剩余数量减\n        if (userInput[0].value === \"products\") {\n            userInput[4] = parseInt(userInput[6])- parseInt(userInput[3])\n        }\n        userInput[5] = parseInt(userInput[2]) * parseInt(userInput[3])\n        this.props.fromPreRowContentTransferMsgToParent(\"UPDATE AMOUNT\", userInput, this.props.rowIdx)\n    }\n\n    handleRemoveClick = () => {\n        this.props.fromPreRowContentTransferMsgToParent(\"REMOVE ROW\", \"\", this.props.rowIdx)\n    }\n\n    render() {\n        let {type, productsName, servicesName} = this.props\n        let {userInput} = this.props\n        return(\n            <tr>\n                <td>\n                    <Select options={type} value={userInput[0]} onChange={this.handleTypeChange}/>\n                    {/*<MyDropdown transferMsg={(msg, label) => this.handleDropDownChange(msg, label)} data={type} label=\"type\" value={userInput[0]} invisibleLabel={true} control={true}></MyDropdown>*/}\n                </td>\n                <td>\n                    <Select options={userInput[0].value === \"products\" ? productsName : servicesName} value={userInput[1]} onChange={this.handleItemChange}/>\n                    {/*<MyDropdown transferMsg={(msg, label) => this.handleDropDownChange(msg, label)} data={userInput[0] === \"products\" ? productsName : servicesName} label=\"items\" value={userInput[1]} invisibleLabel={true} control={true}></MyDropdown>*/}\n                </td>\n                <td>\n                    {userInput[2]}\n                </td>\n                <td>\n                    <input type=\"number\" className=\"form-control\" style={{textAlign: \"left\"}} onChange={this.handleAmountChange} name=\"amount\" value={userInput[3]}></input>\n                </td>\n                <td>\n                    {userInput[4]}\n                </td>\n                <td>\n                    {userInput[5]}\n                </td>\n                <td>\n                    <button type=\"button\" className=\"btn btn-outline-warning\" onClick={this.handleRemoveClick}>Remove</button>\n                </td>\n            </tr>\n        )\n    }\n}\n\nexport default connect(\n    state => ({items: state.items}),\n    {}\n)(PreRowContent)","export const compare = (property) => {\n    return function (obj1, obj2) {\n        let value1 = obj1[property];\n        let value2 = obj2[property];\n        // 升序\n        if (value1 < value2) {\n            return -1;\n        } else if (value1 > value2) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n}","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport $ from 'jquery';\n\nclass MyDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: this.props.value\n        }\n    }\n\n    handleDropDownClick = (event) => {\n        event.preventDefault();\n        $(event.target.nextElementSibling).slideToggle();\n    }\n\n    handleDropDownItemClick = (event) => {\n        const userInput = event.target.innerText\n        // if (userInput !== this.state.value) {\n        // }\n        if (this.props.label === \"owner\" || \"customer name\") {\n            this.props.transferMsg(userInput, this.props.label, event.target.getAttribute(\"data-id\"))\n        } else {\n            this.props.transferMsg(userInput, this.props.label)\n        }\n        this.setState({value: userInput})\n        $(event.target.parentElement).slideToggle();\n    }\n\n    render() {\n        const {data, label, value, control, invisibleLabel, dataId} = this.props;\n        return (\n            <div className={control ? \"dropdown\" : \"col-6 col-md-3 dropdown\"}>\n                {invisibleLabel ? null : <Form.Label>{label}</Form.Label>}\n                <button\n                    className={`btn btn-primary dropdown-toggle form-control ${invisibleLabel ? \"invisible-label-button-after\" : \"\"}`}\n                    onClick={this.handleDropDownClick} disabled={!!this.props.disabled}>{value}</button>\n                <ul className=\"dropdown-menu\" id={invisibleLabel ? \"invisible-label-ul\" : \"\"}\n                    style={{height: data.length >= 5 ? 180 : data.length * 40}}>\n                    {\n                        data.map((item, idx) => (\n                            <li className=\"dropdown-item\" style={{cursor: \"pointer\"}} key={idx}\n                                onClick={this.handleDropDownItemClick} data-id={dataId ? dataId[idx] : \"\"}>{item}</li>\n                        ))\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport {MyDropdown};","import React from \"react\";\nimport {MyDropdown} from \"../common/my-dropdown\";\nimport {requestCustomersQuery, requestCarsQuery} from \"../../api\";\nimport MyAlert from \"../common/my-alert\";\nimport Select from \"react-select\";\nimport {compare} from \"../../utils/normalUtils\";\n\nexport default class CustomerInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            customers: [],\n            cars: [],\n            customersName: [],\n            customersId: [],\n            plateNumber: [],\n            currentCustomer: {\n                customer: [],\n                plateNumber: [],\n                brand: {value: \"\", label: \"\"},\n                model: {value: \"\", label: \"\"}\n            },\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.organisingCars()\n    }\n\n    componentWillUnmount = () => {\n        this.setState = (state, callback) => {};\n    }\n\n    requestFail = (message) => {\n        this.informAlert(`Request data fail ${message}`, \"danger\")\n        this.setState({\n            isDisableButton: true,\n            // remainingLoad: remainingLoad - 1\n        })\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    organisingCars = () => {\n        requestCarsQuery({currentPageCount: 0}).then((r) => {\n            let {data} = r\n            // customers: {\n            //     \"customerId1\": {\n            //         \"name\": \"xxx\",\n            //         \"carPlate1\": {\n            //             \"brand\": \"xx\",\n            //             \"model\": \"xx\",\n            //         },\n            //         \"carPlate2\": {\n            //             \"brand\": \"xx\",\n            //             \"model\": \"xx\",\n            //         }\n            //     },\n            //     \"customerId2\": {\n            //         \"name\": \"xxx\",\n            //         \"carPlate3\": {\n            //             \"brand\": \"xx\",\n            //             \"model\": \"xx\",\n            //         },\n            //         \"carPlate4\": {\n            //             \"brand\": \"xx\",\n            //             \"model\": \"xx\",\n            //         }\n            //     },\n            // },\n            if (data.err_code === 0) {\n                let {cars} = data\n                let _cars = {}\n                for (let i = 0; i < cars.length; i++) {\n                    let obj = cars[i]\n                    if (!(obj.owner._id in _cars)) {\n                        _cars[obj.owner._id] = {}\n                    }\n                    _cars[obj.owner._id][obj.plateNumber] = {\n                        \"brand\": obj.brand,\n                        \"model\": obj.model\n                    }\n                }\n                this.setState({cars: _cars})\n                this.organisingCustomers()\n            } else {\n                this.requestFail(data.message)\n            }\n        }).catch((err) => {\n            this.requestFail(err)\n        })\n    }\n\n    organisingCustomers = () => {\n        requestCustomersQuery({currentPageCount: 0}).then(async (r) => {\n            let {data} = r\n            if (data.err_code === 0) {\n                let {customers} = data\n                let _customers = []\n                for (let i = 0; i < customers.length; i++) {\n                    _customers.push({value: customers[i]._id, label: customers[i].name})\n                }\n                _customers.sort(compare(\"label\"))\n                this.setState({\n                    customers: _customers,\n                })\n            } else {\n                this.requestFail(data.message)\n            }\n        }).catch((err) => {\n            this.requestFail(err)\n        })\n    }\n\n    handleNameDropDownChange = (v) => {\n        let {currentCustomer, plateNumber, cars} = this.state\n        currentCustomer.customer = v\n        currentCustomer.plateNumber = []\n        currentCustomer.brand = {value: \"\", label: \"\"}\n        currentCustomer.model = {value: \"\", label: \"\"}\n        plateNumber = []\n        if (v.value in cars) {\n            Object.keys(cars[v.value]).forEach((item, idx) => {\n                plateNumber.push({value: item, label: item})\n            })\n        }\n        this.props.fromCustomerInfoTransferMsgToParent(currentCustomer)\n        this.setState({currentCustomer, plateNumber})\n    }\n\n    handlePlateDropDownChange = (v) => {\n        let {currentCustomer, cars} = this.state\n        currentCustomer.plateNumber = v\n        let id = currentCustomer.customer.value\n        let objCar = cars[id]\n        let {brand, model} = objCar[v.value]\n        currentCustomer.brand = {value: brand, label: brand}\n        currentCustomer.model = {value: model, label: model}\n        this.props.fromCustomerInfoTransferMsgToParent(currentCustomer)\n        this.setState({currentCustomer})\n    }\n\n    // // setstate异步执行，所以要传入customers\n    // handleNameChange = (customerId, customers) => {\n    //     let plateNumber = []\n    //     // 判断该customer是否有car\n    //     let currentCustomerCars = customers[customerId]\n    //     for (let key in currentCustomerCars) {\n    //         if (key !== \"name\") {\n    //             plateNumber.push(key)\n    //         }\n    //     }\n    //     if (plateNumber.length === 0) {\n    //         plateNumber.push(\"\")\n    //     }\n    //     let {currentCustomer} = this.state\n    //     currentCustomer.id = customerId\n    //     currentCustomer.name = customers[customerId].name\n    //     currentCustomer.plateNumber = plateNumber[0]\n    //     if (plateNumber[0] !== \"\") {\n    //         currentCustomer.brand = customers[customerId][plateNumber[0]].brand\n    //         currentCustomer.model = customers[customerId][plateNumber[0]].model\n    //     } else {\n    //         currentCustomer.brand = \"\"\n    //         currentCustomer.model = \"\"\n    //     }\n    //     this.setState({currentCustomer})\n    //     return plateNumber\n    // }\n    //\n    // handlePlateChange = (value) => {\n    //     let {customers, plateNumber, currentCustomer} = this.state\n    //     console.log(value)\n    //     currentCustomer.plateNumber = \"\"\n    //     currentCustomer.brand = \"\"\n    //     currentCustomer.model = \"\"\n    //     plateNumber = []\n    //     if (value.cars) {\n    //         Object.keys(value.cars).forEach((item, idx) => {\n    //             plateNumber.push({value: item, label: item})\n    //         })\n    //     }\n    //     this.setState({currentCustomer, plateNumber})\n    // }\n\n    render() {\n        let {customersId, customers, currentCustomer, plateNumber, alert} = this.state\n        return (\n            <div className=\"row\">\n                <div className=\"col-xl-3\">\n                    <label>Customer name</label>\n                    <Select onChange={this.handleNameDropDownChange} value={currentCustomer.customer}\n                            options={customers}/>\n                    {/*<MyDropdown transferMsg={(msg, label, id) => this.handleDropDownChange(msg, label, id)}*/}\n                    {/*            dataId={customersId}*/}\n                    {/*            data={customersName} label=\"customer name\" value={currentCustomer.name}*/}\n                    {/*            control={true}></MyDropdown>*/}\n                </div>\n                <div className=\"col-xl-3\">\n                    <label>Plate number</label>\n                    <Select onChange={this.handlePlateDropDownChange} value={currentCustomer.plateNumber}\n                            options={plateNumber}/>\n                    {/*<MyDropdown transferMsg={(msg, label) => this.handleDropDownChange(msg, label)}*/}\n                    {/*            data={plateNumber} label=\"plate number\" value={currentCustomer.plateNumber}*/}\n                    {/*            control={true}></MyDropdown>*/}\n                </div>\n                <div className=\"col-xl-3\">\n                    <label>Car brand</label>\n                    <Select isDisabled={true} value={currentCustomer.brand}/>\n                    {/*<MyDropdown transferMsg={(msg, label) => this.handleDropDownChange(msg, label)}*/}\n                    {/*            data={[\"a\", \"b\"]} label=\"car brand\" value={currentCustomer.brand} control={true}*/}\n                    {/*            disabled={true}></MyDropdown>*/}\n                </div>\n                <div className=\"col-xl-3\">\n                    <label>Car model</label>\n                    <Select isDisabled={true} value={currentCustomer.model}/>\n                    {/*<MyDropdown transferMsg={(msg, label) => this.handleDropDownChange(msg, label)}*/}\n                    {/*            data={[\"a\", \"b\"]} label=\"car model\" value={currentCustomer.model}*/}\n                    {/*            control={true} disabled={true}></MyDropdown>*/}\n                </div>\n                <div className=\"col\">\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}\n                             alertId=\"alert-request-customer-info\"></MyAlert>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport {Table, Col, Image} from \"react-bootstrap\";\n\nexport default class ComponentToPrint extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let display = this.props.display\n        console.log(display)\n        console.log(this.props.userInput)\n        let {userInput, gross, VAT, totalPrice} = this.props\n        return (\n            <div className={`container-fluid`} style={{padding: \"30px\"}}>\n                <div className=\"row\">\n                    <Col xs={2} md={2}>\n                        <Image src=\"https://i.pinimg.com/originals/33/b8/69/33b869f90619e81763dbf1fccc896d8d.jpg\"\n                               style={{width: \"200px\", height: \"150px\"}}/>\n                    </Col>\n                    <div className=\"col-10\">\n                        <p>row1</p>\n                        <p>row2</p>\n                        <p>row3</p>\n                        <p>row4</p>\n                    </div>\n                </div>\n                <h1 style={{textAlign: \"center\"}}>Title</h1>\n                <div className=\"row\" style={{margin: \"20px 0px\"}}>\n                    <span className=\"col-4\" style={{padding: \"0px\"}}>xxx: xxx</span>\n                    <span className=\"col-4\" style={{textAlign: \"center\", padding: \"0px\"}}>xxx: xxx</span>\n                    <span className=\"col-4\" style={{textAlign: \"center\", padding: \"0px\"}}>xxx: xxx</span>\n                </div>\n                <p style={{margin: \"20px 0px\"}}>xx: </p>\n                <p style={{margin: \"20px 0px\"}}>xx: </p>\n                <div className=\"row\" style={{margin: \"20px 0px\"}}>\n                    <span className=\"col-4\" style={{padding: \"0px\"}}>xxx: xxx</span>\n                    <span className=\"col-4\" style={{textAlign: \"center\", padding: \"0px\"}}>xxx: xxx</span>\n                    <span className=\"col-4\" style={{textAlign: \"center\", padding: \"0px\"}}>xxx: xxx</span>\n                </div>\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th>Item Name</th>\n                        <th>Unit Price</th>\n                        <th>Unit</th>\n                        <th>????</th>\n                        <th>Total Price</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        userInput.map((item, idx) => (\n                            <tr key={idx}>\n                                <td>{item[1].value}</td>\n                                <td>{item[2]}</td>\n                                <td>{item[3]}</td>\n                                <td></td>\n                                <td>{item[5]}</td>\n                            </tr>\n                        ))\n                    }\n\n                    < tr>\n                        < td colSpan={4}>Gross</td>\n                        <td>{gross}</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={4}>7%</td>\n                        <td>{VAT}</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={4}>Total Price</td>\n                        <td>{totalPrice}</td>\n                    </tr>\n                    </tbody>\n                </Table>\n                <div className=\"row\" style={{marginTop: \"20px\"}}>\n                    <span className=\"col-5\" style={{margin: \"10px 20px\"}}>xxx</span>\n                    <span className=\"col-5\" style={{margin: \"10px 20px\"}}>xxx</span>\n                </div>\n            </div>\n        );\n    }\n}\n\n// class Example extends React.Component {\n//     render() {\n//         return (\n//             <div>\n//                 <ReactToPrint\n//                     trigger={() => <a href=\"#\">Print this out!</a>}\n//                     content={() => this.componentRef}\n//                 />\n//                 <ComponentToPrint ref={el => (this.componentRef = el)}/>\n//             </div>\n//         );\n//     }\n// }\n\n// export default Example;\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport PreRowContent from \"./preRowContent\";\nimport MyAlert from \"../common/my-alert\";\nimport {requestItemsQuery, requestSalesInsert} from \"../../api\";\nimport MySpinner from \"../common/my-spinner\";\nimport {connect} from 'react-redux'\nimport {initItemsData} from \"../../redux/action\";\nimport CustomerInfo from \"./customer-info\";\nimport {compare} from \"../../utils/normalUtils\";\nimport ReactToPrint from 'react-to-print';\nimport ComponentToPrint from \"./component-to-print\";\n\nclass TableAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: [\"Type\", \"Item\", \"Unit Price\", \"Amount\", \"Remaining Amount\", \"Total\", \"Action\"],\n            type: [\n                {value: \"products\", label: \"products\"},\n                {value: \"services\", label: \"services\"}\n            ],\n            productsName: [],\n            servicesName: [],\n            products: {},\n            services: {},\n            customerInfo: {\n                customer: \"\",\n                plateNumber: \"\",\n                brand: \"\",\n                model: \"\"\n            },\n            remainingLoad: 1,\n            submitIsLoading: false,\n            userInput: [],\n            tmpUserInput: [],\n            isDisableButton: false,\n            isVAT: false,\n            gross: 0,\n            VAT: 0,\n            totalPrice: 0,\n            componentToPrintIsDisplay: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.organisingItems()\n    }\n\n    componentWillUnmount = () => {\n        this.setState = (state, callback) => {\n        };\n    }\n\n    organisingItems = () => {\n        requestItemsQuery({currentPageCount: 0}).then((r) => {\n            let {data} = r\n            if (data.err_code === 0) {\n                // let {products, services, productsName, servicesName} = this.state\n                let products = {}, services = {}, productsName = [], servicesName = []\n                for (let i = 0; i < data.items.length; i++) {\n                    if (data.items[i].type === \"products\") {\n                        productsName.push({value: data.items[i].name, label: data.items[i].name})\n                        productsName = productsName.sort(compare(\"label\"))\n                        products[data.items[i].name] = {\n                            amount: data.items[i].amount,\n                            id: data.items[i]._id,\n                            brand: data.items[i].brand,\n                            price: data.items[i].price\n                        }\n                    } else {\n                        servicesName.push({value: data.items[i].name, label: data.items[i].name})\n                        servicesName = servicesName.sort(compare(\"label\"))\n                        services[data.items[i].name] = {\n                            amount: data.items[i].amount,\n                            id: data.items[i]._id,\n                            brand: data.items[i].brand,\n                            price: data.items[i].price\n                        }\n                    }\n                }\n                let {remainingLoad} = this.state\n                this.setState({\n                    remainingLoad: remainingLoad - 1,\n                    products: products,\n                    services: services,\n                    productsName: productsName,\n                    servicesName: servicesName,\n                })\n            } else {\n                this.requestFail(data.message)\n            }\n        }).catch((err) => {\n            this.requestFail(err)\n            console.log(err)\n        })\n    }\n\n    requestFail = (message) => {\n        this.informAlert(`Request data fail ${message}`, \"danger\")\n        let {remainingLoad} = this.state\n        this.setState({\n            isDisableButton: true,\n            remainingLoad: remainingLoad - 1\n        })\n    }\n\n    rollBackArray = (itemType, obj) => {\n        let itemsArr\n        if (this.state.productsName.length === 0 && this.state.servicesName.length === 0) {\n            this.setState({isDisableButton: false})\n        }\n        switch (itemType.value) {\n            case \"products\":\n                itemsArr = this.state.productsName\n                if (itemsArr.length === 0) {\n                    let {type} = this.state\n                    type.unshift({value: \"products\", label: \"products\"})\n                    this.setState({type})\n                }\n                itemsArr.push(obj)\n                itemsArr = itemsArr.sort(compare(\"label\"))\n                this.setState({productsName: itemsArr})\n                break;\n            case \"services\":\n                itemsArr = this.state.servicesName\n                if (itemsArr.length === 0) {\n                    let {type} = this.state\n                    type.push({value: \"services\", label: \"services\"})\n                    this.setState({type})\n                }\n                itemsArr.push(obj)\n                itemsArr = itemsArr.sort(compare(\"label\"))\n                this.setState({servicesName: itemsArr})\n                break;\n            default:\n                break;\n        }\n    }\n\n    // itemType = {}：要过滤的类型\n    // obj = {}：要过滤的数据\n    filterTheArray = (itemType, obj) => {\n        let arr\n        let value = obj.value\n        let {productsName, servicesName, type} = this.state\n        switch (itemType.value) {\n            case \"products\":\n                arr = productsName.filter(obj => obj.value !== value)\n                if (arr.length === 0) {\n                    this.setState({type: type.filter(obj => obj.value !== \"products\")})\n                }\n                if (type.length === 1 && servicesName.length !== 0) {\n                    type.push({value: \"services\", label: \"services\"})\n                    this.setState({type})\n                }\n                this.setState({productsName: arr})\n                break;\n            case \"services\":\n                console.log(servicesName)\n                arr = servicesName.filter(obj => obj.value !== value)\n                if (arr.length === 0) {\n                    this.setState({type: type.filter(obj => obj.value !== \"services\")})\n                }\n                if (type.length === 1 && productsName.length !== 0) {\n                    type.unshift({value: \"products\", label: \"products\"})\n                    this.setState({type: type})\n                }\n                this.setState({servicesName: arr})\n                break;\n            default:\n                break;\n        }\n        if ((productsName.length === 1 && servicesName.length === 0) || (productsName.length === 0 && servicesName.length === 1)) {\n            this.setState({\n                isDisableButton: true\n            })\n        }\n    }\n\n    handleClick = () => {\n        let {userInput, productsName, servicesName, products, services} = this.state\n        let type\n        let name\n        let remainingAmount\n        let price\n        if (productsName.length !== 0) {\n            type = {value: \"products\", label: \"products\"}\n            name = productsName[0].value ? {value: productsName[0].value, label: productsName[0].value} : \"\"\n            remainingAmount = products[name.value].amount ? products[name.value].amount : 0\n            price = products[name.value].price ? products[name.value].price : 0\n        } else if (servicesName.length !== 0) {\n            type = {value: \"services\", label: \"services\"}\n            name = servicesName[0].value ? {value: servicesName[0].value, label: servicesName[0].value} : \"\"\n            remainingAmount = services[name.value].amount ? services[name.value].amount : 0\n            price = services[name.value].price ? services[name.value].price : 0\n        } else {\n            return\n        }\n        userInput.push([type, name, price, 0, remainingAmount, price * 0, remainingAmount])\n        this.filterTheArray(type, name)\n        this.calculateTotalPrice(userInput, this.state.isVAT)\n        this.setState({\n            userInput: userInput\n        })\n    }\n\n    handleCheckBoxChange = (e) => {\n        let isVAT = e.target.checked\n        let {userInput} = this.state\n        this.setState({isVAT})\n        this.calculateTotalPrice(userInput, isVAT)\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    fromPreRowContentTransferMsgToParent = (action, newMsg, idx) => {\n        let {userInput, productsName, servicesName} = this.state\n        let preRow = userInput[idx]\n        let newRow = [...preRow]\n        let tmp\n        switch (action) {\n            case \"CHANGE TYPE\":\n                if (newMsg.value === preRow[0].value) {\n                    return\n                }\n                this.rollBackArray(preRow[0], preRow[1])\n                newRow[0] = newMsg\n                if (newMsg.value === \"products\") {\n                    newRow[1] = productsName[0]\n                } else {\n                    newRow[1] = servicesName[0]\n                }\n                this.filterTheArray(newRow[0], newRow[1])\n                tmp = this.getItemData(newRow[0], newRow[1])\n                newRow[2] = tmp.price\n                newRow[3] = 0\n                newRow[4] = tmp.amount\n                newRow[5] = 0\n                newRow[6] = tmp.amount\n                userInput[idx] = newRow\n                break\n            case \"CHANGE ITEM\":\n                if (newMsg.value === preRow[1].value) {\n                    return\n                }\n                newRow[1] = newMsg\n                this.rollBackArray(preRow[0], preRow[1])\n                this.filterTheArray(preRow[0], newMsg)\n                tmp = this.getItemData(newRow[0], newRow[1])\n                newRow[2] = tmp.price\n                newRow[3] = 0\n                newRow[4] = tmp.amount\n                newRow[5] = 0\n                newRow[6] = tmp.amount\n                userInput[idx] = newRow\n                break\n            case \"REMOVE ROW\":\n                this.rollBackArray(preRow[0], preRow[1])\n                userInput.splice(idx, 1)\n                break\n            case \"UPDATE AMOUNT\":\n                userInput[idx] = newMsg\n                break\n            default:\n                break\n        }\n        this.setState({userInput})\n        this.calculateTotalPrice(userInput, this.state.isVAT)\n    }\n\n    fromCustomerInfoTransferMsgToParent = (customerInfo) => {\n        this.setState({customerInfo})\n    }\n\n    getItemData = (type, item) => {\n        switch (type.value) {\n            case \"products\":\n                let {products} = this.state\n                return products[item.value]\n            case \"services\":\n                let {services} = this.state\n                return services[item.value]\n            default:\n                break\n        }\n    }\n\n    calculateTotalPrice = (arr, isVAT) => {\n        let totalPrice = 0;\n        let VAT = 0;\n        arr.map((item) => {\n            totalPrice += parseFloat(item[5])\n        })\n        if (isVAT) {\n            VAT = (totalPrice / 107) * 7\n        }\n        this.setState({\n            gross: (totalPrice - VAT).toFixed(2),\n            VAT: VAT.toFixed(2),\n            totalPrice: totalPrice.toFixed(2)\n        })\n    }\n\n    handleSubmit = () => {\n        let itemsId = \"\",\n            itemsName = \"\",\n            amount = \"\",\n            unitPrice = \"\",\n            price = \"\"\n        // remainingAmount = \"\"\n        let {userInput, products, services, totalPrice, customerInfo} = this.state\n        if (userInput.length === 0) {\n            this.informAlert(\"The form is empty\")\n            return\n        }\n        for (let i = 0; i < userInput.length; i++) {\n            if (parseInt(userInput[i][3]) === 0) {\n                this.informAlert(\"The amount should be at least 1\")\n                return\n            }\n            switch (userInput[i][0].value) {\n                case \"products\":\n                    itemsId += `${products[userInput[i][1].value].id},`\n                    itemsName += `${userInput[i][1].value},`\n                    break\n                case \"services\":\n                    itemsId += `${services[userInput[i][1].value].id},`\n                    itemsName += `${userInput[i][1].value},`\n                    break\n                default:\n                    this.informAlert(\"Please check your data\")\n                    return\n            }\n            unitPrice += `${userInput[i][2]},`\n            amount += `${[userInput[i][3]]},`\n            // remainingAmount += `${[userInput[i][4]]},`\n            price += `${userInput[i][5]},`\n        }\n        if (!customerInfo.customer) {\n            this.informAlert(\"The customer name is empty\")\n            return\n        }\n        let tmp = {\n            id: customerInfo.customer.value,\n            name: customerInfo.customer.label,\n            plateNumber: customerInfo.plateNumber.value ? customerInfo.plateNumber.value : \"\",\n            brand: customerInfo.brand.value,\n            model: customerInfo.model.value\n        }\n        itemsId = itemsId.substring(0, itemsId.length - 1)\n        itemsName = itemsName.substring(0, itemsName.length - 1)\n        amount = amount.substring(0, amount.length - 1)\n        unitPrice = unitPrice.substring(0, unitPrice.length - 1)\n        price = price.substr(0, price.length - 1)\n        let sales = {\n            itemsId, itemsName, amount, unitPrice, price, totalPrice, ...tmp\n        }\n        this.setState({remainingLoad: 1})\n        console.log(sales)\n        requestSalesInsert(sales).then((r) => {\n            if (r.data.err_code === 0) {\n                this.informAlert(\"Insert success\", \"success\")\n                let {userInput} = this.state\n                for (let i = 0; i < userInput.length; i++) {\n                    this.rollBackArray(userInput[i][0], userInput[i][1])\n                }\n                userInput.splice(0, userInput.length)\n                this.setState({userInput: userInput, gross: 0, VAT: 0, totalPrice: 0,})\n            } else {\n                // 服务器返回错误\n                this.requestFail(r.data.message)\n            }\n            this.componentDidMount()\n            // this.setState({isLoading: false})\n        }).catch((err) => {\n            this.requestFail(err)\n        })\n    }\n\n    test = () => {\n        console.log(1)\n    }\n\n    render() {\n        let {userInput, tmpUserInput, gross, VAT, totalPrice, isDisableButton, remainingLoad, alert, componentToPrintIsDisplay} = this.state\n        return (\n            <div>\n                <MySpinner isLoading={remainingLoad !== 0}/>\n                <CustomerInfo\n                    fromCustomerInfoTransferMsgToParent={(customerInfo) => this.fromCustomerInfoTransferMsgToParent(customerInfo)}/>\n                <br/>\n                <div className=\"text-right\">\n                    <ReactToPrint\n                        onBeforePrint={() => {\n                            this.handleSubmit()\n                            // tmpUserInput = [...userInput]\n                            // componentToPrintIsDisplay = true\n                        }}\n                        onAfterPrint={() => {\n                            // componentToPrintIsDisplay = false\n                        }}\n                        trigger={() => (\n                            <button type=\"button\" className=\"btn btn-light\" style={{marginRight: \"20px\"}}\n                                    disabled={remainingLoad !== 0}\n                            >\n                            <span\n                                className={`spinner-border spinner-border-sm fade ${remainingLoad === 0 ? \"d-none\" : \"show\"}`}\n                                role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}/>\n                                {\n                                    remainingLoad === 0 ? \"SAVE&PRINT\" : \"Loading...\"\n                                }\n                            </button>\n                        )}\n                        content={() => this.componentRef}\n                    />\n                    <button className=\"btn btn-dark\" type=\"submit\" style={{position: \"relative\"}}\n                            disabled={remainingLoad !== 0}\n                            onClick={this.handleSubmit}>\n                            <span\n                                className={`spinner-border spinner-border-sm fade ${remainingLoad === 0 ? \"d-none\" : \"show\"}`}\n                                role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}/>\n                        {\n                            remainingLoad === 0 ? \"SAVE\" : \"Loading...\"\n                        }\n                    </button>\n                </div>\n                <br/>\n                <Table hover responsive>\n                    <thead>\n                    <tr className=\"thead-dark\">\n                        {\n                            this.state.fields.map(\n                                (item, idx) => (\n                                    <th key={idx} style={{width: \"14.2%\"}}>{item}</th>\n                                )\n                            )\n                        }\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        userInput.map(\n                            (item, idx) => (\n                                <PreRowContent key={idx} rowIdx={idx}\n                                               fromPreRowContentTransferMsgToParent={(preMsg, newMsg, idx) => this.fromPreRowContentTransferMsgToParent(preMsg, newMsg, idx)}\n                                               type={this.state.type}\n                                               productsName={this.state.productsName}\n                                               servicesName={this.state.servicesName}\n                                               productsItems={this.state.products}\n                                               servicesItems={this.state.services}\n                                               userInput={item}/>\n                            )\n                        )\n                    }\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"6\" className=\"text-right\">Gross:</td>\n                        <td>{gross}</td>\n                    </tr>\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"6\" className=\"text-right\">\n                            <input type=\"checkbox\" style={{marginRight: \"10px\"}} onChange={this.handleCheckBoxChange}/>\n                            VAT:\n                        </td>\n                        <td>{VAT}</td>\n                    </tr>\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"6\" className=\"text-right\">Total Price:</td>\n                        <td>{totalPrice}</td>\n                    </tr>\n                    </tbody>\n                </Table>\n                <div>\n                    <button type=\"button\" className=\"btn btn-primary\" disabled={isDisableButton}\n                            onClick={this.handleClick}>Add a new row\n                    </button>\n                </div>\n                <br/>\n                <div>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}\n                             alertId=\"alert-table-add\"/>\n                </div>\n                <ComponentToPrint userInput={userInput} gross={gross} VAT={VAT} totalPrice={totalPrice} ref={el => (this.componentRef = el)}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({items: state.items}),\n    {initItemsData}\n)(TableAdd)","import React from \"react\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport TableAdd from \"./table-add\";\n\nexport default class CardFormWrapperSales extends React.Component {\n\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    render() {\n        return (\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"/>\n                <h5 className=\"card-header\" onClick={this.handleClick}\n                    style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new sales record</h5>\n                <Card.Body>\n                    <TableAdd/>\n                </Card.Body>\n            </Card>\n        );\n    }\n}","import React from \"react\";\nimport CardFormWrapperSales from \"./card-form-wrapper-sales\";\n// import {PDFDownloadLink, PDFViewer} from '@react-pdf/renderer'\n// import {MyDocument} from \"./component-to-pdf\";\n// import ReactToPrint from 'react-to-print';\n// import ComponentToPrint from \"./component-to-print\";\n\n\n\nexport default class PageSales extends React.Component {\n    // handleClick = () => {\n    //     console.log(1)\n    // }\n\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <CardFormWrapperSales/>\n                {/*<PDFDownloadLink document={MyDocument(1)} fileName=\"somename.pdf\">*/}\n                {/*    {({blob, url, loading, error}) => (loading ? 'Loading document...' : 'Download now!')}*/}\n                {/*</PDFDownloadLink>*/}\n                {/*<PDFViewer width=\"100%\" height=\"1000px\">*/}\n                {/*    <MyDocument/>*/}\n                {/*</PDFViewer>*/}\n                {/*<div>*/}\n                {/*    <ReactToPrint*/}\n                {/*        onBeforePrint={() => {*/}\n                {/*            this.handleClick()*/}\n                {/*        }}*/}\n                {/*        trigger={() => {*/}\n                {/*            return <button onClick={this.handleClick}>Print this out!</button>;*/}\n                {/*        }}*/}\n                {/*        content={() => this.componentRef}*/}\n                {/*    />*/}\n                {/*    <ComponentToPrint style={{marginTop: \"1000px\"}} data={[1,2,3]} ref={el => (this.componentRef = el)}/>*/}\n                {/*</div>*/}\n            </div>\n        )\n    }\n}","import React from \"react\";\n\nimport {Line} from \"react-chartjs-2\";\n\nexport default class LineChart extends React.Component {\n\n    render() {\n        const data = {\n            labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n            datasets: [\n                {\n                    label: \"Monthly sales\",\n                    data: this.props.data,\n                    fill: false,\n                    borderColor: \"#742774\"\n                }\n            ]\n        }\n        return (\n            <Line key={this.props.flag} data={data}/>\n        );\n    }\n}","import React from \"react\";\n\nimport {Bar} from \"react-chartjs-2\";\n\nconst options = {\n    scales: {\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                },\n            },\n        ],\n    },\n}\n\nexport default class BarChart extends React.Component {\n\n    render() {\n        const data = {\n            labels: this.props.data.names,\n            datasets: [\n                {\n                    label: 'Top sold items in this year',\n                    data: this.props.data.amounts,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(153, 102, 255, 0.2)',\n                        'rgba(255, 159, 64, 0.2)',\n                    ],\n                    borderColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)',\n                    ],\n                    borderWidth: 1,\n                },\n            ],\n        }\n\n        return (\n            <Bar key={this.props.flag} data={data} options={options}/>\n        );\n    }\n}","import React from \"react\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport LineChart from \"./line-chart\";\nimport BarChart from \"./bar-chart\";\n\nexport default class CardCharts extends React.Component {\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    render() {\n        let {flag} = this.props\n        return (\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick}\n                    style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Charts</h5>\n                <div className=\"row row-cols-1 row-cols-md-2\" style={{padding: \"30px\"}}>\n                    <div className=\"col mb-4\">\n                        <div className=\"card\">\n                            <LineChart flag={flag} data={this.props.lineChartData}></LineChart>\n                        </div>\n                    </div>\n                    <div className=\"col mb-4\">\n                        <div className=\"card\">\n                            <BarChart flag={flag} data={this.props.barChartData}></BarChart>\n                        </div>\n                    </div>\n                </div>\n            </Card>\n        )\n    }\n}\n","export const timeStampToDate = (date) => {\n    date = new Date(date);//如果date为13位不需要乘1000\n    let Y = date.getFullYear() + '-';\n    let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n    let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n    let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n    let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n    let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\n    return Y + M + D + h + m + s;\n}","import React from \"react\";\nimport CardCharts from \"./card-charts\";\nimport {requestSalesQuery} from \"../../api\";\nimport MyPagination from \"../common/my-pagination\";\nimport DatePicker from 'react-date-picker';\nimport MySpinner from \"../common/my-spinner\";\nimport MyAlert from \"../common/my-alert\";\nimport {Modal, Button, Table, ListGroup} from 'react-bootstrap';\nimport {timeStampToDate} from \"../../utils/timeUtils\";\n\nexport default class PageSalesReport extends React.Component {\n    constructor(props) {\n        super(props);\n        let date = new Date()\n        this.state = {\n            // Date/Time | Customer Name | Car Brand/Model/Number | Price\n            fields: [\"Date/time\", \"Customer Name\", \"Car Brand\", \"Model\", \"Number\", \"Price\", \"\"],\n            keys: [\"name\", \"type\", \"brand\", \"amount\", \"price\"],\n            // Date/time\tCustomer Name\tCar Brand\tModel\tNumber\tPrice\n            currentRow: 0,\n            items: [],\n            currentPageCount: 1,\n            startDate: new Date(date.getFullYear(), 0, 1),\n            endDate: new Date(date.getFullYear(), date.getMonth(), date.getDate() + 1),\n            itemsCount: 1,\n            flag: 0,\n            isLoading: false,\n            arrLineChartData: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            objBarChartData: {\n                names: [\"\", \"\", \"\", \"\", \"\"],\n                amounts: [0, 0, 0, 0, 0]\n            },\n            modalShow: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    requestData = (currentPageCount) => {\n        this.setState({isLoading: true})\n        let {startDate, endDate} = this.state\n        requestSalesQuery({\n            currentPageCount: currentPageCount,\n            startTimeStamp: startDate.getTime(),\n            endTimeStamp: endDate.getTime()\n        }).then((r) => {\n            if (r.data.err_code === 0) {\n                let {sales} = r.data\n                // this.setState({\n                //     itemsCount: sales.length\n                // })\n                console.log(r.data)\n                // 第一次请求:\n                if (currentPageCount === 0) {\n                    this.organisingChartData(sales)\n                }\n                // 如果第一次请求数据长度大于10:\n                if (sales.length > 10) {\n                    sales.splice(10)\n                    this.organisingTableData(sales)\n                } else {\n                    this.organisingTableData(sales)\n                }\n            } else {\n                console.log(r.data.message)\n                this.informAlert(`Request data fail ${r.data.message}`)\n            }\n            this.setState({isLoading: false, itemsCount: r.data.totalCount})\n        }).catch((err) => {\n            console.log(err)\n            this.informAlert(`Request data fail ${err}`)\n            this.setState({isLoading: false})\n        })\n    }\n\n    organisingChartData = (data) => {\n        let {arrLineChartData, objBarChartData, flag} = this.state\n        let tmp = {}\n        for (let i = 0; i < data.length; i++) {\n            let date = new Date(data[i].createdTimeStamp)\n            arrLineChartData[date.getMonth()] += data[i].totalPrice\n            let {items} = data[i]\n            for (let key in items) {\n                if (!(key in tmp)) {\n                    tmp[key] = 0\n                }\n                tmp[key] += parseInt(items[key].amount)\n            }\n        }\n        let sortedItemsName = Object.keys(tmp).sort((a, b) => (tmp[b] - tmp[a]))\n        if (sortedItemsName.length > 5) {\n            sortedItemsName.splice(5)\n        }\n        let itemsSoldAmount = []\n        for (let i = 0; i < sortedItemsName.length; i++) {\n            let key = sortedItemsName[i]\n            itemsSoldAmount.push(tmp[key])\n        }\n        objBarChartData = {names: sortedItemsName, amounts: itemsSoldAmount}\n        flag+=1\n        this.setState({arrLineChartData, objBarChartData, flag: flag})\n    }\n\n    organisingTableData = (data) => {\n        let items = []\n        for (let i = 0; i < data.length; i++) {\n            let tmp = {dateTime: \"\", name: \"\", brand: \"\", model: \"\", plateNumber: \"\", price: \"\", items: {}}\n            tmp.dateTime = data[i].createdTimeStamp\n            tmp.name = data[i].customer.name\n            tmp.brand = data[i].customer.brand\n            tmp.model = data[i].customer.model\n            tmp.plateNumber = data[i].customer.plateNumber\n            tmp.price = data[i].totalPrice\n            tmp.items = data[i].items\n            items.push(tmp)\n        }\n        this.setState({items})\n        console.log(items)\n    }\n\n    componentDidMount() {\n        this.requestData(0)\n    }\n\n    handleStartDateChange = async (value) => {\n        await this.setState({startDate: new Date(value.getFullYear(), value.getMonth(), value.getDate()), currentPageCount: 1})\n        await this.requestData(1)\n    }\n\n    handleEndDateChange = async (value) => {\n        await this.setState({endDate: new Date(value.getFullYear(), value.getMonth(), value.getDate()), currentPageCount: 1})\n        await this.requestData(1)\n    }\n\n    // handleSubmit = async () => {\n    //     // let {currentPageCount} = this.state\n    //     await this.requestData(1)\n    //     this.setState({currentPageCount: 1})\n    // }\n\n    toggleModal = () => {\n        let {modalShow} = this.state\n        this.setState({modalShow: !modalShow})\n    }\n\n    handleRowClick = async (e) => {\n        await this.setState({currentRow: e.target.getAttribute(\"rowid\")})\n        this.toggleModal()\n    }\n\n    handleModalHide = () => {\n        this.toggleModal()\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    transferMsgFromPagination = async (msg) => {\n        this.setState({isLoading: true})\n        msg = parseInt(msg)\n        await this.requestData(msg)\n        console.log(msg)\n        this.setState({currentPageCount: msg})\n    }\n\n    render() {\n        const {flag, isLoading, startDate, endDate, alert, arrLineChartData, objBarChartData, items, fields, modalShow, currentRow} = this.state\n        let date = new Date()\n        // const [, ] = React.useState(false);\n        function MyVerticallyCenteredModal(props) {\n            let {editingData} = props\n            let items\n            if (editingData) {\n                items = editingData.items\n            }\n            return (\n                <Modal\n                    {...props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\" className=\"row\">\n                        </Modal.Title>\n                    </Modal.Header>\n                    <h5>\n                        <li className=\"list-group-item list-group-item-info\">Customer\n                        Name: {editingData ? editingData.name : \"\"}</li>\n                    </h5>\n                    <Modal.Body>\n                        <h4>Date: {editingData ? timeStampToDate(editingData.dateTime) : \"\"}</h4>\n                        <ListGroup.Item action variant=\"light\">\n                            Car Brand: {editingData ? editingData.brand : \"\"}\n                        </ListGroup.Item>\n                        <ListGroup.Item action variant=\"light\">\n                            Car Model: {editingData ? editingData.model : \"\"}\n                        </ListGroup.Item>\n                        <ListGroup.Item action variant=\"light\">\n                            Plate Number: {editingData ? editingData.plateNumber : \"\"}\n                        </ListGroup.Item>\n                        <Table hover responsive className=\"text-center\">\n                            <thead>\n                            <tr>\n                                <th>Item Name</th>\n                                <th>Item Amount</th>\n                                <th>Item Price</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {\n                                items ?\n                                    Object.keys(items).map((key, idx) => (\n                                        <tr key={idx}>\n                                            <td>{key}</td>\n                                            <td>{items[key].amount}</td>\n                                            <td>{items[key].price}</td>\n                                        </tr>\n                                    ))\n                                    :\n                                    \"\"\n                            }\n                            <tr>\n                                <td colSpan={3} className=\"text-right\"><b>Total Price: {editingData ? editingData.price : \"\"}</b></td>\n                            </tr>\n                            </tbody>\n                        </Table>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={props.onHide}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            );\n        }\n\n        return (\n            <div style={{padding: \"30px\"}}>\n                <MySpinner isLoading={isLoading}></MySpinner>\n                <CardCharts flag={flag} lineChartData={arrLineChartData} barChartData={objBarChartData}></CardCharts>\n                <br/>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"row text-center\" style={{marginBottom: \"20px\"}}>\n                            <div className=\"col-lg-6\" style={{marginTop: \"20px\"}}>\n                                {/*最大不能大过今天*/}\n                                start date:&nbsp;\n                                <DatePicker\n                                    name=\"start\"\n                                    clearIcon={null}\n                                    disabled={isLoading}\n                                    onChange={this.handleStartDateChange}\n                                    maxDate={new Date()}\n                                    value={startDate}\n                                />\n                            </div>\n                            <div className=\"col-lg-6\" style={{marginTop: \"20px\"}}>\n                                {/*最小不能小过起始*/}\n                                end date:&nbsp;\n                                <DatePicker\n                                    name=\"end\"\n                                    clearIcon={null}\n                                    disabled={isLoading}\n                                    onChange={this.handleEndDateChange}\n                                    minDate={startDate}\n                                    maxDate={new Date(date.getFullYear(), date.getMonth(), date.getDate() + 1)}\n                                    value={endDate}\n                                />\n                            </div>\n                        </div>\n                        <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}\n                                 alertId=\"alert-sales-table\"></MyAlert>\n                        <Table hover responsive>\n                            <thead>\n                            <tr className=\"thead-dark text-center\" width={`${100 / fields.length}%`}>\n                                {\n                                    fields.map((item, idx) => (<th key={idx}>{item}</th>))\n                                }\n                            </tr>\n                            </thead>\n                            <tbody className=\"text-center\">\n                            {\n                                items.map((item, idx) => (\n                                    <tr key={idx}>\n                                        <td>{timeStampToDate(item.dateTime)}</td>\n                                        <td>{item.name}</td>\n                                        <td>{item.brand}</td>\n                                        <td>{item.model}</td>\n                                        <td>{item.plateNumber}</td>\n                                        <td>{item.price}</td>\n                                        <td><Button rowid={idx} variant=\"info\"\n                                                    onClick={this.handleRowClick}>\n                                            Detail</Button></td>\n                                    </tr>\n                                ))\n                            }\n                            </tbody>\n                        </Table>\n                        <MyVerticallyCenteredModal\n                            editingData={items[currentRow]}\n                            show={modalShow}\n                            onHide={this.handleModalHide}\n                        />\n                        <div className=\"row\">\n                            <MyPagination fromPaginationToParent={(msg) => this.transferMsgFromPagination(msg)}\n                                          dataPerPage={10}\n                                          currentPageCount={this.state.currentPageCount}\n                                          dataCount={this.state.itemsCount}></MyPagination>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react'\nimport './App.css'\nimport Header from './components/header/header'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport PageCars from \"./components/cars/page-cars\"\nimport PageCustomer from \"./components/customers/page-customers\"\nimport PageItems from \"./components/items/page-items\"\nimport PageSales from \"./components/sales/page-sales\"\nimport PageSalesReport from \"./components/sales-report/page-sales-report\";\nimport {connect} from 'react-redux'\nimport storageUtils from \"./utils/storageUtils\"\n\nclass App extends React.Component {\n\n    render() {\n        const {user} = this.props.user\n        let userid = user ? user._id : storageUtils.getUserId()\n        if (!userid) {\n            return <Redirect to='/login'/>\n        }\n        return (\n            <div className=\"main\">\n                <Header/>\n                <Switch>\n                    {/*<DefaultRoute handler={PageSales}/>*/}\n                    <Route path='/sales' component={PageSales}/>\n                    <Route path='/sales_report' component={PageSalesReport}/>\n                    <Route path='/cars' component={PageCars}/>\n                    <Route path='/customers' component={PageCustomer}/>\n                    <Route path='/items' component={PageItems}/>\n                    <Redirect to='/sales_report'/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({user: state.user}),\n    {}\n)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\";\nimport {LOGIN, LOGOUT} from \"./action-type\";\n// import {user} from './action'\n\nconst initUser = {}\n\nexport const user = (state=initUser, action) => {\n    switch (action.type) {\n        case LOGIN:\n            return {...action.data}\n        case LOGOUT:\n            return initUser\n        // case AUTH_SUCCESS:\n        //     // const authSuccess = (user) => ({type: AUTH_SUCCESS, data: user})\n        //     // action.data -> user\n        //     return {...state, user: action.data, errMsg: \"Login success\"}\n        // case ERROR_MSG:\n        //     // const errorMsg = (errMsg) => ({type: ERROR_MSG, data: errMsg})\n        //     // action.data -> errMsg\n        //     return {...state, errMsg: action.data}\n        default:\n            return state\n    }\n}\n\nconst initItems = {}\n\nexport const items = (state=initItems, action) => {\n    switch (action.type) {\n        case \"init\":\n            return {...action.data}\n        default:\n            return state\n    }\n}\n\n// 向外暴露: {user: {}}\nexport default combineReducers({\n    user,\n    items\n})","import React from \"react\";\nimport {login} from \"../redux/action\"\nimport {Button} from \"react-bootstrap\";\nimport {connect} from 'react-redux'\nimport MyAlert from \"../components/common/my-alert\";\nimport storageUtils from \"../utils/storageUtils\"\nimport {Redirect} from 'react-router-dom'\nimport Unsplash, {toJson} from 'unsplash-js'\nimport {LazyLoadImage} from 'react-lazy-load-image-component'\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nclass PageLogin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: \"\",\n            username: \"\",\n            password: \"\",\n            isChecked: false,\n            isLoading: false,\n            key: 0,\n            bgSrc: require(\"./index.svg\"),\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    componentDidMount() {\n        const unsplash = new Unsplash({\n            accessKey: \"bwlM1wzrPkZSlj1RXG-MAjNDeSIeV-Gf7nflQ-5hYFU\",\n            // Optionally you can also configure a custom header to be sent with every request\n            headers: {\n                \"X-Custom-Header\": \"foo\"\n            },\n            // Optionally if using a node-fetch polyfill or a version of fetch which supports the timeout option, you can configure the request timeout for all requests\n            timeout: 500 // values set in ms\n        });\n        unsplash.photos.getRandomPhoto({query: \"car\", orientation: \"landscape\"})\n            .then(toJson)\n            .then((json) => {\n                this.setState({bgSrc: json.urls.regular, key: 1})\n            });\n    }\n\n    componentWillUnmount = () => {\n        this.setState = (state, callback) => {};\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    handleChange = (e) => {\n        let key = e.target.getAttribute(\"name\")\n        let value = e.target.value\n        if (key === \"isChecked\") {\n            value = !this.state.isChecked\n        }\n        this.setState({[key]: value})\n    }\n\n    handleClick = async (e) => {\n        e.preventDefault()\n        if (e.target.getAttribute(\"name\") === \"guest\") {\n            await this.setState({username: \"guest\", password: \"00000000\"})\n        }\n        const {username, password} = this.state\n        if (!username || !password) {\n            this.informAlert(\"One or more required fields are empty\")\n            return\n        }\n        this.setState({isLoading: true})\n        // 发请求redux更新user\n        try {\n            await this.props.login({username, password})\n        } catch (err) {\n            this.informAlert(`Login fail ${err}, can not connect to server`, \"danger\")\n            this.setState({isLoading: false})\n            return\n        }\n        // 读取新的props.user\n        const {user} = this.props\n        // err_code: 1\n        // message: \"Username or password is wrong\"\n        console.log(user)\n        if (user.err_code === 0) {\n            let {isChecked} = this.state\n            if (isChecked) {\n                storageUtils.saveUserId(user.user._id)\n            }\n            this.informAlert(\"Login success\", \"success\")\n            this.props.history.replace('/')\n        } else {\n            this.informAlert(`Login fail ${user.message}`, \"danger\")\n        }\n        this.setState({isLoading: false})\n    }\n\n    enterTriggerSearch = async (e) => {\n        if (e.keyCode === 13) {\n            await this.handleClick(e)\n        }\n    }\n\n    render() {\n        const {isLoading, alert, bgSrc, key} = this.state\n        const {user} = this.props.user\n        let userid = user ? user._id : storageUtils.getUserId()\n        if (userid) {\n            return <Redirect to='/sales'/>\n        }\n        return (\n            <div>\n                <LazyLoadImage\n                    key={key}\n                    wrapperClassName=\"img-fluid\"\n                    style={{\n                        height: \"-webkit-fill-available\"\n                    }}\n                    effect=\"blur\"\n                    src={bgSrc}\n                    width=\"100%\"\n                />\n                <div className=\"card text-center\" style={{\n                    width: \"330px\",\n                    position: \"absolute\",\n                    top: \"20%\",\n                    left: \"calc(50% - 165px)\"\n                }}>\n                    <div className=\"card-header\">\n                        Login\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"container\">\n                            <div className=\"panel panel-default\">\n                                {/*<div className=\"panel-heading\">*/}\n                                {/*    <h3 className=\"panel-title\">Please login</h3>*/}\n                                {/*</div>*/}\n                                <div className=\"panel-body\">\n                                    <fieldset>\n                                        <div className=\"form-group\">\n                                            <input className=\"form-control\" placeholder=\"Username\" name=\"username\"\n                                                   disabled={isLoading}\n                                                   type=\"text\" value={this.state.username}\n                                                   onChange={this.handleChange}/>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <input className=\"form-control\" placeholder=\"Password\" name=\"password\"\n                                                   disabled={isLoading}\n                                                   type=\"password\" value={this.state.password}\n                                                   onChange={this.handleChange}\n                                                   onKeyUp={this.enterTriggerSearch}\n                                            />\n                                        </div>\n                                        <div className=\"checkbox\">\n                                            <label>\n                                                <input name=\"isChecked\" type=\"checkbox\" checked={this.state.isChecked}\n                                                       disabled={isLoading}\n                                                       onChange={this.handleChange} value=\"Remember Me\"/> Remember Me\n                                            </label>\n                                        </div>\n                                        <Button className=\"btn btn-lg btn-block\" variant=\"primary\" type=\"submit\"\n                                                name=\"login\"\n                                                style={{position: \"relative\"}}\n                                                disabled={!!isLoading}\n                                                onClick={this.handleClick}>\n                                            <span\n                                                className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                                role=\"status\" aria-hidden=\"true\"\n                                                style={{right: \"5px\", position: \"relative\"}}/>\n                                            {\n                                                isLoading ? \"Loading...\" : \"Login\"\n                                            }\n                                        </Button>\n                                        <Button className=\"btn btn-lg btn-block\" variant=\"success\" type=\"submit\"\n                                                name=\"guest\"\n                                                style={{position: \"relative\"}}\n                                                disabled={!!isLoading}\n                                                onClick={this.handleClick}>\n                                            <span\n                                                className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                                role=\"status\" aria-hidden=\"true\"\n                                                style={{right: \"5px\", position: \"relative\"}}/>\n                                            {\n                                                isLoading ? \"Loading...\" : \"Login as guest\"\n                                            }\n                                        </Button>\n                                        {/*<input className=\"btn btn-lg btn-success btn-block\" type=\"submit\"*/}\n                                        {/*       value=\"Login\" onClick={this.handleClick}/>*/}\n                                    </fieldset>\n                                    <br/>\n                                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}\n                                             alertId=\"alert-login-form\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({user: state.user}),\n    {login}\n)(PageLogin)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {HashRouter, Switch, Route} from 'react-router-dom'\nimport thunk from 'redux-thunk'\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport {Provider} from 'react-redux'\nimport reducer from \"./redux/reducer\";\nimport PageLogin from \"./pages/page-login\";\n\nconst store = createStore(reducer, compose(\n    applyMiddleware(thunk), //解决redux异步问题\n    window.devToolsExtension ? window.devToolsExtension() : f => f // chrome控制台redux工具\n))\n\nReactDOM.render(\n    // <React.StrictMode>\n    <Provider store={store}>\n        <HashRouter>\n            <Switch>\n                <Route path='/login' component={PageLogin}></Route>\n                <Route component={App}></Route>\n            </Switch>\n        </HashRouter>\n    </Provider>,\n// </React.StrictMode>,\n    document.getElementById('root')\n)\n;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}