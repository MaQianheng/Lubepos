{"version":3,"sources":["logo.svg","components/header/header.js","components/common/my-dropdown.js","components/cars/form-add.js","components/cars/card-form-wrapper-cars.js","components/common/my-carousels.js","components/cars/card-detail-cars.js","components/common/my-search-bar.js","components/cars/search-field.js","components/cars/page-cars.js","components/customers/form-add.js","components/customers/card-customers.js","components/common/my-table.js","components/customers/page-customers.js","components/products/form-add.js","components/products/card-form-wrapper-products.js","components/products/page-products.js","components/sales/preRowContent.js","components/sales/table-add.js","components/sales/card-form-wrapper-sales.js","components/sales/page-sales.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","state","currentPathname","navInfo","text","href","this","history","location","pathname","push","setState","listen","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","map","item","idx","Link","as","to","key","React","Component","withRouter","MyDropdown","handleDropDownClick","event","preventDefault","$","target","nextElementSibling","slideToggle","handleDropDownItemClick","userInput","innerText","value","transferMsg","label","parentElement","data","control","invisibleLabel","Form","Label","onClick","style","height","length","cursor","CardFormAdd","msg","modelPreContent","jsonData","prevState","Object","assign","handleChange","e","getAttribute","handleClick","console","log","onDrop","picture","pictures","brandPreContent","keys","v","i","myDate","Date","colorPreContent","ownerPreContent","plateNumber","year","getFullYear","color","owner","brand","model","type","textAlign","onChange","name","withIcon","buttonText","imgExtension","maxFileSize","withPreview","Row","Button","variant","CardFormWrapperCars","toggleClass","Card","Body","MyCarousels","Carousel","interval","Item","src","alt","Caption","CardDetailCars","MySearchBar","placeholder","placeHolder","SearchField","carPreContent","arrayCopy","searchText","PageCars","padding","marginBottom","FormAdd","test","tmp","phone","email","fadeOut","html","fadeIn","top","position","role","display","CustomerCard","MyTable","fields","content","Table","hover","responsive","subItem","subIdx","PageCustomer","amount","price","disabled","transition","CardFormWrapperProducts","PageProducts","PreRowContent","handleDropDownChange","index","preMsg","items","productsItems","servicesItems","productsName","servicesName","parseInt","pre","rowIdx","TableAdd","rollBackArray","arr","sort","filterTheArray","filter","isDisableButton","products","services","calculateTotalPrice","isVAT","gross","VAT","total","checked","newMsg","parseFloat","toFixed","preInput","selectedItems","width","colSpan","marginRight","CardFormWrapperSales","PageSales","App","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5018107c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport {Nav, Navbar} from \"react-bootstrap\";\nimport {withRouter, Link} from 'react-router-dom'\n\n// 每个组件有个prop，prop可以通过'prop.'的方式拿到自定义组件标签里的任一属性\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentPathname: \"/sales\",\n            navInfo: [\n                {\n                    text: \"SALES\",\n                    href: \"/sales\"\n                },\n                {\n                    text: \"CARS\",\n                    href: \"/cars\"\n                },\n                {\n                    text: \"CUSTOMERS\",\n                    href: \"/customers\"\n                },\n                {\n                    text: \"PRODUCTS/SERVICES\",\n                    href: \"/products\"\n                }\n            ]\n        };\n    }\n\n    componentWillMount() {\n        let currentPathname = this.props.history.location.pathname\n        if (currentPathname === \"/\") {\n            currentPathname = \"/sales\"\n            this.props.history.push(\"/sales\")\n        }\n        this.setState({currentPathname})\n        // console.log(currentPathname)\n    }\n\n    componentDidMount() {\n        this.props.history.listen((location) => {\n            let currentPathname = location.pathname\n            this.setState({currentPathname})\n        })\n    }\n\n\n    render() {\n        return(\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"/sales\">The One Car POS</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {\n                            this.state.navInfo.map(\n                                (item, idx) => (\n                                    <Nav.Link as={Link} to={item.href} key={idx} className={this.state.currentPathname === item.href ? \"active\" : \"\"}>{item.text}</Nav.Link>\n                                )\n                            )\n                        }\n                        {/*<NavLink className=\"nav-link\" to=\"\">a</NavLink>*/}\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport $ from 'jquery';\n\nclass MyDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: this.props.value\n        }\n    }\n\n    handleDropDownClick = (event) => {\n        event.preventDefault();\n        $(event.target.nextElementSibling).slideToggle();\n    }\n\n    handleDropDownItemClick = (event) => {\n        const userInput = event.target.innerText\n        if (userInput !== this.state.value) {\n            this.props.transferMsg(userInput, this.props.label)\n            this.setState({value: userInput})\n        }\n        $(event.target.parentElement).slideToggle();\n    }\n\n    render() {\n        const {data, label, value, control, invisibleLabel} = this.props;\n        return (\n            <div className={control ? \"dropdown\" : \"col-6 col-md-3 dropdown\"}>\n                {invisibleLabel ? null : <Form.Label>{label}</Form.Label>}\n                <button className=\"btn btn-primary dropdown-toggle form-control\" id={invisibleLabel ? \"invisible-label-button-after\" : \"\"} onClick={this.handleDropDownClick}>{value}</button>\n                <ul className=\"dropdown-menu\" id={invisibleLabel ? \"invisible-label-ul\" : null} style={{height: data.length>=5 ? 180 : data.length * 40}}>\n                    {\n                        data.map((item, idx) => (\n                            <li className=\"dropdown-item\" style={{cursor:\"pointer\"}} key={idx} onClick={this.handleDropDownItemClick}>{item}</li>\n                        ))\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport {MyDropdown};","import React from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {MyDropdown} from \"../common/my-dropdown\";\nimport \"../common/my-dropdown.css\";\nimport jsonData from \"../../car_brand_model.json\";\nimport ImageUploader from 'react-images-upload';\n\nclass CardFormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        let brandPreContent = [];\n        Object.keys(jsonData).map((v,i)=>{\n            brandPreContent.push(v)\n        });\n        let myDate = new Date();\n        let modelPreContent = jsonData[brandPreContent[0]];\n        this.state = {\n            colorPreContent: [\"WHITE\", \"BLACK\", \"PURPLE\", \"BLUE\", \"NAVY\", \"GREEN\", \"YELLOW\", \"ORANGE\", \"RED\", \"เทา\"],\n            ownerPreContent: [],\n            brandPreContent: brandPreContent,\n            modelPreContent: modelPreContent,\n            pictures: \"\",\n            userInput: {\n                plateNumber: \"\",\n                year: myDate.getFullYear(),\n                color: \"WHITE\",\n                owner: \"\",\n                brand: brandPreContent[0],\n                model: modelPreContent[0]\n            }\n        }\n    }\n\n    transferMsg = (msg, label) => {\n        // switch (label) {\n        //     case \"Brand\":\n        //         this.setState(prevState => {\n        //             let inputFields = Object.assign({}, prevState.inputFields);\n        //             inputFields[4].userInput = msg;\n        //             inputFields[5].preContent = jsonData[msg]\n        //             return { inputFields };\n        //         })\n        //         break;\n        //     default:\n        //         break;\n        // }\n        let key = \"\"\n        switch (label) {\n            case \"Color\":\n                key = \"color\";\n                break;\n            case \"Owner\":\n                key = \"owner\";\n                break;\n            case \"Brand\":\n                key = \"brand\";\n                this.setState({...this.state, modelPreContent: jsonData[msg]});\n                this.setState(prevState => {\n                    let userInput = Object.assign({}, prevState.userInput);\n                    userInput[\"model\"] = jsonData[msg][0]\n                    return {userInput};\n                })\n                break;\n            case \"Model\":\n                key = \"model\";\n                break;\n            default:\n                break;\n        }\n        this.setState(prevState => {\n            let userInput = Object.assign({}, prevState.userInput);\n            userInput[key] = msg\n            return {userInput};\n        })\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        this.setState(prevState => {\n            let userInput = Object.assign({}, prevState.userInput);\n            userInput[key] = value\n            return {userInput};\n        })\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n    }\n\n    onDrop = (picture) => {\n        this.setState({\n            pictures: picture\n            // pictures: this.state.pictures.concat(picture)\n        });\n    }\n\n    render() {\n        console.log(this.state)\n        // console.log(jsonData)\n        return(\n            <Form>\n                <div className=\"row\">\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Plate Number</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign:\"left\"}} onChange={this.handleChange} name=\"plateNumber\" value={this.state.userInput.plateNumber}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Year</Form.Label>\n                        <input type=\"number\" className=\"form-control\" style={{textAlign:\"left\"}} onChange={this.handleChange} name=\"year\" value={this.state.userInput.year}></input>\n                    </div>\n                    <MyDropdown transferMsg = {(msg, label) => this.transferMsg(msg, label)} data={this.state.colorPreContent} label=\"Color\" value={this.state.userInput.color}></MyDropdown>\n                    <MyDropdown transferMsg = {(msg, label) => this.transferMsg(msg, label)} data={this.state.ownerPreContent} label=\"Owner\" value={this.state.userInput.owner}></MyDropdown>\n                    <MyDropdown transferMsg = {(msg, label) => this.transferMsg(msg, label)} data={this.state.brandPreContent} label=\"Brand\" value={this.state.userInput.brand}></MyDropdown>\n                    <MyDropdown transferMsg = {(msg, label) => this.transferMsg(msg, label)} data={this.state.modelPreContent} label=\"Model\" value={this.state.userInput.model}></MyDropdown>\n                    <div className=\"col-6 col-md-3\">\n                    </div>\n                    <ImageUploader\n                        withIcon={true}\n                        buttonText='Choose images'\n                        onChange={this.onDrop}\n                        imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                        maxFileSize={5242880}\n                        withPreview={true}\n                    />\n                </div>\n                <br/>\n                <Form.Row>\n                    <Button variant=\"primary\" type=\"submit\" onClick={this.handleClick}>\n                        Submit\n                    </Button>\n                </Form.Row>\n\n            </Form>\n        )\n    }\n}\n\nexport default CardFormAdd;","import React from \"react\";\nimport CarFormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\n\nclass CardFormWrapperCars extends React.Component {\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new car record</h5>\n                <Card.Body>\n                    <CarFormAdd></CarFormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CardFormWrapperCars;","import React from \"react\";\nimport {Carousel} from \"react-bootstrap\";\n\nclass MyCarousels extends React.Component {\n    render() {\n        return (\n            <Carousel interval={null}>\n                {\n                    this.props.data.map((item, idx) => (\n                        <Carousel.Item key={idx}>\n                            <img\n                              className=\"d-block w-100\"\n                              src={item.src}\n                              alt={item.brand}\n                              style={{height: \"300px\"}}\n                            />\n                            <Carousel.Caption>\n                              <h3>{item.brand}</h3>\n                              <p>{item.model}</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                    ))\n                }\n\n              {/*<Carousel.Item>*/}\n              {/*  <img*/}\n              {/*    className=\"d-block w-100\"*/}\n              {/*    src=\"holder.js/800x400?text=Second slide&bg=282c34\"*/}\n              {/*    alt=\"Third slide\"*/}\n              {/*  />*/}\n              {/*  <Carousel.Caption>*/}\n              {/*    <h3>Audi</h3>*/}\n              {/*    <p>100</p>*/}\n              {/*  </Carousel.Caption>*/}\n              {/*</Carousel.Item>*/}\n\n              {/*<Carousel.Item>*/}\n              {/*  <img*/}\n              {/*    className=\"d-block w-100\"*/}\n              {/*    src=\"holder.js/800x400?text=Third slide&bg=20232a\"*/}\n              {/*    alt=\"Third slide\"*/}\n              {/*  />*/}\n              {/*  <Carousel.Caption>*/}\n              {/*    <h3>Audi</h3>*/}\n              {/*    <p>100</p>*/}\n              {/*  </Carousel.Caption>*/}\n              {/*</Carousel.Item>*/}\n\n            </Carousel>\n        );\n    }\n}\n\nexport default MyCarousels;","import React from \"react\";\nimport MyCarousels from \"../common/my-carousels\";\n\nclass CardDetailCars extends React.Component {\n    render() {\n        return(\n            <div className=\"col mb-4\">\n                <div className=\"card h-100\" id=\"card-detail-cars\">\n                    <MyCarousels className=\"card-img-top\" data={\n                        [\n                            {\n                                // src: \"http://127.0.0.1/imgs/0d016c1d4607b0c5cbe88174b037be86.jpg\",\n                                src: \"https://img.wallpapersafari.com/tablet/2048/2732/67/87/GQNkS5.jpg\",\n                                brand: \"Audi\",\n                                model: \"100\"\n                            },\n                            {\n                                src: \"https://lh3.googleusercontent.com/proxy/u-VILd_S73fAqwxCfmy3vnjDb99uRWTnlnRMMaeaVhBr9Fy0bL2Fwsjsk23wmTcWrmT5jGh6Mi_OctlOG-YCQ89hOdztJTKfSQur1cHch-zdvsvfj3arulc4HlYY0O8ysYYhJpR33zQbxQgG3gQV1g\",\n                                brand: \"3\",\n                                model: \"4\"\n                            },\n                            {\n                                src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRbqK9gI0IZ7_8b7kk5i2RSbhSA2DooXl2ztA&usqp=CAU\",\n                                brand: \"5\",\n                                model: \"6\"\n                            }\n                        ]\n                    }></MyCarousels>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Audi 100</h5>\n                        <p className=\"card-text\">Owner: Bob</p>\n                        <p className=\"card-text\">Year: 2018</p>\n                        <p className=\"card-text\">Color: white</p>\n                        {/*<p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>*/}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CardDetailCars;","import React from \"react\";\nimport \"./my-search-bar.css\";\n\nclass MySearchBar extends React.Component {\n\n    render() {\n        return(\n            // <div className=\"card\">\n                <div className=\"input-field col-12 col-md-3\">\n                    <input type=\"text\" className=\"input-search-bar form-control\" placeholder={this.props.placeHolder}/>\n                    <i></i>\n                </div>\n            // </div>\n        )\n    }\n}\n\nexport default MySearchBar;","import React from \"react\";\nimport {MyDropdown} from \"../common/my-dropdown\";\nimport MySearchBar from \"../common/my-search-bar\";\nimport jsonData from \"../../car_brand_model.json\";\n\nclass SearchField extends React.Component {\n    constructor(props) {\n        super(props);\n        // let carPreContent = {\n        //     \"All\": [\"All\"]\n        // };\n        // let brandPreContent = []\n        // Object.keys(jsonData).map((v,i)=>{\n        //     brandPreContent.push(v)\n        //     carPreContent[v] = jsonData[v]\n        //     carPreContent[v].unshift(\"All\")\n        // });\n        // console.log(carPreContent)\n        let brandPreContent = [\"All\"]\n        let carPreContent = {\n            \"All\": [\"All\"]\n        }\n        for (let key in jsonData) {\n            brandPreContent.push(key);\n            let arrayCopy = [\"All\", ...jsonData[key]];\n            carPreContent[key] = arrayCopy;\n        }\n        this.state = {\n            colorPreContent: [\"WHITE\", \"BLACK\", \"PURPLE\", \"BLUE\", \"NAVY\", \"GREEN\", \"YELLOW\", \"ORANGE\", \"RED\", \"เทา\"],\n            ownerPreContent: [],\n            carPreContent: carPreContent,\n            brandPreContent: brandPreContent,\n            modelPreContent: carPreContent[\"All\"],\n            userInput: {\n                // year: myDate.getFullYear(),\n                searchText: \"\",\n                color: \"WHITE\",\n                brand: \"All\",\n                model: \"All\"\n            }\n        }\n    }\n\n    transferMsg = (msg, label) => {\n        let key = \"\"\n        switch (label) {\n            case \"Color\":\n                key = \"color\";\n                break;\n            case \"Owner\":\n                key = \"owner\";\n                break;\n            case \"Brand\":\n                key = \"brand\";\n                this.setState({...this.state, modelPreContent: this.state.carPreContent[msg]});\n                this.setState(prevState => {\n                    let userInput = Object.assign({}, prevState.userInput);\n                    userInput[\"model\"] = this.state.carPreContent[msg][0]\n                    return {userInput};\n                })\n                break;\n            case \"Model\":\n                key = \"model\";\n                break;\n            default:\n                break;\n        }\n        this.setState(prevState => {\n            let userInput = Object.assign({}, prevState.userInput);\n            userInput[key] = msg\n            return {userInput};\n        })\n    }\n\n    render() {\n        console.log(this.state)\n        return(\n            <div className=\"card\">\n                <div className=\"card-body row\">\n                    <MyDropdown transferMsg = {(msg, label) => this.transferMsg(msg, label)} data={this.state.colorPreContent} label=\"Color\" value={this.state.userInput.color}></MyDropdown>\n                    <MyDropdown transferMsg = {(msg, label) => this.transferMsg(msg, label)} data={this.state.brandPreContent} label=\"Brand\" value={this.state.userInput.brand}></MyDropdown>\n                    <MyDropdown transferMsg = {(msg, label) => this.transferMsg(msg, label)} data={this.state.modelPreContent} label=\"Model\" value={this.state.userInput.model}></MyDropdown>\n                    {/*<div className=\"col-6 col-md-3\">*/}\n                        {/*<div class=\"input-group-prepend\">*/}\n                        {/*    <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</button>*/}\n                        {/*    <div class=\"dropdown-menu\">*/}\n                        {/*        <a class=\"dropdown-item\" href=\"#\">Action</a>*/}\n                        {/*        <a class=\"dropdown-item\" href=\"#\">Another action</a>*/}\n                        {/*        <a class=\"dropdown-item\" href=\"#\">Something else here</a>*/}\n                        {/*        <div role=\"separator\" class=\"dropdown-divider\"></div>*/}\n                        {/*        <a class=\"dropdown-item\" href=\"#\">Separated link</a>*/}\n                        {/*    </div>*/}\n                        {/*</div>*/}\n                        {/*<MySearchBar placeHolder=\"Search by plate number or owner name\"></MySearchBar>*/}\n                    {/*</div>*/}\n                    <MySearchBar placeHolder=\"Search by plate number or owner name\"></MySearchBar>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchField;","import React from 'react';\nimport CardFormWrapperCars from \"./card-form-wrapper-cars\";\nimport CardDetailCars from \"./card-detail-cars\";\nimport SearchField from \"./search-field\";\n\n\n// add a search box, the search keyword can be Licence plate number, owner's name,\n// also add filter of brands / models / color\n\nclass PageCars extends React.Component {\n\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <CardFormWrapperCars></CardFormWrapperCars>\n                <br/>\n                {/*<MyTable data={*/}\n                {/*    {*/}\n                {/*        fields: [\"Plate Number\", \"Brand\", \"Model\", \"Color\", \"Owner\", \"Year\"],*/}\n                {/*        content: [*/}\n                {/*            [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],*/}\n                {/*            [\"1\", \"Audi\", \"200\", \"White\", \"0\", \"2018\"],*/}\n                {/*            [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],*/}\n                {/*            [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]*/}\n                {/*        ]*/}\n                {/*    }*/}\n                {/*}></MyTable>*/}\n                <div className=\"sticky-top\" style={{marginBottom: \"20px\"}}>\n                    <SearchField></SearchField>\n                </div>\n                <div className=\"row row-cols-1 row-cols-md-6\">\n                    <CardDetailCars></CardDetailCars>\n                    <CardDetailCars></CardDetailCars>\n                    <CardDetailCars></CardDetailCars>\n                    <CardDetailCars></CardDetailCars>\n                    <CardDetailCars></CardDetailCars>\n                    <CardDetailCars></CardDetailCars>\n                    <CardDetailCars></CardDetailCars>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PageCars;","import React from \"react\";\nimport {Form,Button} from \"react-bootstrap\";\nimport $ from \"jquery\";\n\nclass FormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            name: \"\",\n            phone: \"\",\n            email: \"\"\n        };\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        if (key === \"phone\") {\n            let re = /^[0-9]*$/;\n            if (!re.test(value)){\n                return\n            }\n        }\n        this.setState(prevState => {\n            let tmp = Object.assign({}, prevState.userInput);\n            tmp[key] = value\n            return tmp;\n        })\n    }\n    handleClick = (e) => {\n        e.preventDefault();\n        let rePhone = /^(09)\\d{8}$/;\n        if (!this.state.name) {\n            $(\"#div-alert\").html(\"Name is empty\").fadeIn(100)\n            return\n        }\n        if (!rePhone.test(this.state.phone)) {\n            $(\"#div-alert\").html(\"Phone format does not match\").fadeIn(100)\n            return\n        }\n        let reEmail = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n        if (!reEmail.test(this.state.email)) {\n            $(\"#div-alert\").html(\"Email format does not match\").fadeIn(100)\n            return\n        }\n        $(\"#div-alert\").fadeOut(100)\n        console.log(this.state)\n    }\n\n    render () {\n        return(\n            <Form>\n                <Form.Row>\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Name</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign:\"left\"}} onChange={this.handleChange} name=\"name\" value={this.state.name}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Phone</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign:\"left\"}} onChange={this.handleChange} name=\"phone\" value={this.state.phone}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Email</Form.Label>\n                        <input type=\"email\" className=\"form-control\" style={{textAlign:\"left\"}} onChange={this.handleChange} name=\"email\" value={this.state.email}></input>\n                    </div>\n                    <div className=\"col-6 col-md-1\">\n                        <Button variant=\"primary\" type=\"submit\" style={{top: \"30px\",position: \"relative\"}} onClick={this.handleClick}>\n                            Submit\n                        </Button>\n                    </div>\n                    <div className=\"col-6 col-md-2\">\n                        <div className=\"alert alert-danger\" role=\"alert\" id=\"div-alert\" style={{position: \"relative\",top: \"20px\", display: \"none\"}}></div>\n                    </div>\n                </Form.Row>\n\n            </Form>\n        )\n    }\n}\n\nexport default FormAdd;","import React from \"react\";\nimport CarFormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\"\n\nclass CustomerCard extends React.Component {\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new customer record</h5>\n                <Card.Body>\n                    <CarFormAdd></CarFormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CustomerCard;","import React from 'react';\nimport {Table} from \"react-bootstrap\";\n\n// 每个组件有个prop，prop可以通过'prop.'的方式拿到自定义组件标签里的任一属性\n\nexport class MyTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        const {fields, content} = this.props.data;\n        return(\n            <Table hover responsive>\n              <thead>\n                <tr className=\"thead-dark\">\n                    {\n                        fields.map(\n                            (item, idx) => (\n                                <th key={idx}>{item}</th>\n                            )\n                        )\n                    }\n                </tr>\n              </thead>\n              <tbody>\n                {\n                    content.map(\n                        (item, idx) => (\n                            <tr key={idx}>\n                                {\n                                    item.map((subItem, subIdx) => (\n                                        <td key={subIdx}>{subItem}</td>\n                                    ))\n                                }\n                            </tr>\n                        )\n                    )\n                }\n              </tbody>\n            </Table>\n        )\n    }\n}","import React from 'react';\nimport CustomerCard from \"./card-customers\";\n// import {CarTable} from './table'\nimport {MyTable} from \"../common/my-table\";\n\nclass PageCustomer extends React.Component {\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <CustomerCard></CustomerCard>\n                <br/>\n                <MyTable data={\n                    {\n                        fields: [\"Name\", \"Phone\", \"Email\"],\n                        content: [\n                            [\"1\", \"2\", \"3\"],\n                            [\"1\", \"0999999999\", \"200@gmail.com\"],\n                            [\"1\", \"2\", \"3\"],\n                            [\"1\", \"2\", \"3\"]\n                        ]\n                    }\n                }></MyTable>\n            </div>\n        );\n    }\n}\n\nexport default PageCustomer;","import React from \"react\";\nimport {Form,Button} from \"react-bootstrap\";\nimport {MyDropdown} from \"../common/my-dropdown\";\n\nclass FormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            name: \"\",\n            type: \"products\",\n            brand: \"\",\n            amount: \"\",\n            price: \"\"\n        };\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        this.setState(prevState => {\n            let tmp = Object.assign({}, prevState);\n            tmp[key] = value\n            return tmp;\n        })\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        console.log(this.state)\n    }\n\n    transferMsg = (msg, label) => {\n        // this.setState({type: msg})\n        this.setState(prevState => {\n            let tmp = Object.assign({}, prevState);\n            tmp[label] = msg\n            if (msg === \"services\") {\n                tmp[\"brand\"] = \"\"\n                tmp[\"amount\"] = \"\"\n            }\n            return tmp;\n        })\n    }\n\n    render () {\n        return(\n            <Form>\n                <Form.Row>\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Name</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign:\"left\"}} onChange={this.handleChange} name=\"name\" value={this.state.name}></input>\n                    </div>\n\n                    <MyDropdown transferMsg = {(msg, label) => this.transferMsg(msg, label)} data={[\"products\", \"services\"]} label=\"type\" value={this.state.type}></MyDropdown>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Brand</Form.Label>\n                        <fieldset disabled={this.state.type === \"products\" ? false : true}>\n                            <input type=\"text\" className=\"form-control\" style={{textAlign:\"left\", transition: \"all .3s\"}} onChange={this.handleChange} name=\"brand\" value={this.state.brand}></input>\n                        </fieldset>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Amount</Form.Label>\n                        <fieldset disabled={this.state.type === \"products\" ? false : true}>\n                            <input type=\"number\" className=\"form-control\" style={{textAlign:\"left\", transition: \"all .3s\"}} onChange={this.handleChange} name=\"amount\" value={this.state.amount}></input>\n                        </fieldset>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Price</Form.Label>\n                        <input type=\"number\" className=\"form-control\" style={{textAlign:\"left\"}} onChange={this.handleChange} name=\"price\" value={this.state.price}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-1\">\n                        <Button variant=\"primary\" type=\"submit\" style={{top: \"30px\",position: \"relative\"}} onClick={this.handleClick}>\n                            Submit\n                        </Button>\n                    </div>\n\n                    <div className=\"col-6 col-md-2\">\n                        <div className=\"alert alert-danger\" role=\"alert\" id=\"div-alert\" style={{position: \"relative\",top: \"20px\", display: \"none\"}}></div>\n                    </div>\n                </Form.Row>\n            </Form>\n        )\n    }\n}\n\nexport default FormAdd;","import React from \"react\";\nimport CarFormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\n\nclass CardFormWrapperProducts extends React.Component {\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new products/services record</h5>\n                <Card.Body>\n                    <CarFormAdd></CarFormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CardFormWrapperProducts;","import React from \"react\";\nimport CardFormWrapperProducts from \"./card-form-wrapper-products\";\nimport {MyTable} from \"../common/my-table\";\n\nclass PageProducts extends React.Component {\n    render() {\n        return(\n            <div  style={{padding: \"30px\"}}>\n                <CardFormWrapperProducts></CardFormWrapperProducts>\n                <br/>\n                <MyTable  data={\n                    {\n                        fields: [\"Name\", \"Type\", \"Brand\", \"Amount\", \"Price\"],\n                        content: [\n                            [\"1\", \"services\", \"3\", \"23\", \"200\"],\n                            [\"1\", \"services\", \"200@gmail.com\", \"23\", \"200\"],\n                            [\"1\", \"services\", \"3\", \"23\", \"200\"],\n                            [\"1\", \"products\", \"3\", \"23\", \"200\"]\n                        ]\n                    }\n                }></MyTable>\n            </div>\n        )\n    }\n}\n\nexport default PageProducts;","import React from \"react\";\nimport {MyDropdown} from \"../common/my-dropdown\";\n\nexport default class PreRowContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            idx: this.props.rowIdx,\n            userInput: this.props.userInput\n        }\n    }\n\n    handleDropDownChange = (msg, label) => {\n        let index\n        let {userInput} = this.state\n        let preMsg = [...this.state.userInput]\n        switch (label) {\n            case \"type\":\n                index = 0\n                break\n            case \"items\":\n                index = 1\n                let items\n                if (this.state.userInput[0] === \"products\") {\n                    items = this.props.productsItems\n                } else {\n                    items = this.props.servicesItems\n                }\n                userInput[2] = items[msg][0]\n                userInput[3] = 1\n                break\n            default:\n                break\n        }\n        userInput[index] = msg\n        if (index === 0 && msg !== preMsg[0]) {\n            if (msg === \"products\") {\n                userInput[1] = this.props.productsName[0]\n                // console.log(userInput)\n            } else {\n                userInput[1] = this.props.servicesName[0]\n                // console.log(userInput)\n            }\n        }\n\n        userInput[4] = parseInt(userInput[2]) * parseInt(userInput[3])\n        this.setState({\n            userInput: userInput\n        })\n\n        // this.setState(prevState => {\n        //     let userInput = Object.assign({}, prevState.userInput);\n        //     userInput[index] = msg\n        //     if (index === 0 && msg !== this.state.userInput[0]) {\n        //         if (msg === \"products\") {\n        //             userInput[1] = this.props.productsName[0]\n        //         } else {\n        //             userInput[1] = this.props.servicesName[0]\n        //         }\n        //     }\n        //     if (items) {\n        //         userInput[2] = items[msg][0]\n        //         userInput[3] = 1\n        //         // console.log(items)\n        //     }\n        //     userInput[4] = parseInt(userInput[2]) * parseInt(userInput[3])\n        //     return {userInput: userInput};\n        // })\n        this.props.transferMsg(preMsg, userInput, this.state.idx)\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        let index = 0\n        let pre = this.state.userInput\n        const key = e.target.getAttribute('name');\n        switch (key) {\n            case \"amount\":\n                index = 3\n                break\n            default:\n                break\n        }\n        let {userInput} = this.state\n        userInput[index] = value\n        userInput[4] = parseInt(userInput[2]) * parseInt(userInput[3])\n        this.setState({\n            userInput: userInput\n        })\n        // this.setState(prevState => {\n        //     let userInput = Object.assign({}, prevState.userInput);\n        //     userInput[index] = value\n        //     userInput[4] = parseInt(userInput[2]) * parseInt(userInput[3])\n        //     return {userInput: userInput};\n        // })\n        this.props.transferMsg(pre, userInput, this.state.idx)\n    }\n\n    render() {\n        let {type, productsName, servicesName} = this.props\n        let {userInput} = this.state\n        return(\n            <tr>\n                <td>\n                    <MyDropdown transferMsg={(msg, label) => this.handleDropDownChange(msg, label)} data={type} label=\"type\" value={userInput[0]} invisibleLabel={true} control={true}></MyDropdown>\n                </td>\n                <td>\n                    <MyDropdown transferMsg={(msg, label) => this.handleDropDownChange(msg, label)} data={userInput[0] === \"products\" ? productsName : servicesName} label=\"items\" value={userInput[1]} invisibleLabel={true} control={true}></MyDropdown>\n                </td>\n                <td>\n                    {userInput[2]}\n                </td>\n                <td>\n                    <input type=\"number\" className=\"form-control\" style={{textAlign: \"left\"}} onChange={this.handleChange} name=\"amount\" value={userInput[3]}></input>\n                </td>\n                <td>\n                    {userInput[4]}\n                </td>\n            </tr>\n        )\n    }\n}","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport PreRowContent from \"./preRowContent\";\n\nexport default class TableAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: [\"Type\", \"Item\", \"Unit Price\", \"Amount\", \"Total\"],\n            type: [\"products\", \"services\"],\n            //[\"name\", \"price\", \"in stock\"]\n            productsName: [],\n            servicesName: [],\n            // {name: [price, stock]}\n            products: {\n                \"product 1\": [\"20\", \"30\"],\n                \"product 2\": [\"30\", \"10\"],\n                \"product 3\": [\"40\", \"50\"],\n                \"product 4\": [\"50\", \"100\"],\n                \"product 5\": [\"60\", \"80\"]\n            },\n            services: {\n                \"service 1\": [\"10\", \"-1\"],\n                \"service 2\": [\"20\", \"-1\"],\n                \"service 3\": [\"30\", \"-1\"],\n                \"service 4\": [\"10\", \"-1\"],\n                \"service 5\": [\"140\", \"-1\"],\n                \"service 6\": [\"50\", \"-1\"],\n                \"service 7\": [\"90\", \"-1\"]\n            },\n            preInput: [\"products\", \"product 1\", \"20\", \"1\", \"20\"],\n            userInput: [],\n            selectedItems:{\n                \"products\": [],\n                \"services\": []\n            },\n            isDisableButton: false,\n            isVAT: false,\n            gross: 0,\n            VAT: 0,\n            total: 0\n        }\n    }\n\n    componentDidMount() {\n        let oriProductsName = [\"product 1\", \"product 2\", \"product 3\", \"product 4\", \"product 5\"]\n        let oriServicesName = [\"service 1\", \"service 2\", \"service 3\", \"service 4\", \"service 5\", \"service 6\", \"service 7\"]\n        this.setState({productsName: oriProductsName, servicesName: oriServicesName})\n    }\n\n    rollBackArray = (name, value) => {\n        let arr\n        switch (name) {\n            case \"products\":\n                arr = this.state.productsName\n                arr.push(value)\n                arr = arr.sort()\n                this.setState({productsName: arr})\n                break;\n            case \"services\":\n                arr = this.state.servicesName\n                arr.push(value)\n                arr = arr.sort()\n                this.setState({servicesName: arr})\n                break;\n            default:\n                break;\n        }\n    }\n\n    filterTheArray = (name, value) => {\n        let arr\n        let {productsName, servicesName, type} = this.state\n        switch (name) {\n            case \"products\":\n                arr = productsName.filter(name => name !== value)\n                if (arr.length === 0) {\n                    this.setState({type: type.filter(name => name !== \"products\")})\n                }\n                this.setState({productsName: arr})\n                break;\n            case \"services\":\n                arr = servicesName.filter(name => name !== value)\n                if (arr.length === 0) {\n                    this.setState({type: type.filter(name => name !== \"services\")})\n                }\n                this.setState({servicesName: arr})\n                break;\n            default:\n                break;\n        }\n        if ((productsName.length === 1 && servicesName.length === 0) || (productsName.length === 0 && servicesName.length === 1)) {\n            this.setState({\n                isDisableButton: true\n            })\n        }\n    }\n\n    handleClick = () => {\n        let {userInput, productsName, servicesName, products, services} = this.state\n        let name\n        let value\n        let price\n        if (productsName.length !== 0) {\n            name = \"products\"\n            value = productsName[0]\n            price = products[value][0]\n        } else if (servicesName.length !== 0) {\n            name = \"services\"\n            value = servicesName[0]\n            price = services[value][0]\n        } else {\n            return\n        }\n        userInput.push([name, value, price, 1, price])\n        this.filterTheArray(name, value)\n        let arr = this.calculateTotalPrice(userInput, this.state.isVAT)\n        this.setState({\n            userInput: userInput,\n            gross: arr[0],\n            VAT: arr[1],\n            total: arr[2]\n        })\n    }\n\n    handleChange = (e) => {\n        let isVAT = e.target.checked\n        this.setState(prevState => {\n            let tmp = Object.assign({}, prevState);\n            let arr = this.calculateTotalPrice(tmp[\"userInput\"], isVAT)\n            tmp[\"isVAT\"] = isVAT\n            tmp[\"gross\"] = arr[0]\n            tmp[\"VAT\"] = arr[1]\n            tmp[\"total\"] = arr[2]\n            return tmp;\n        })\n    }\n\n    transferMsg = (preMsg, newMsg, idx) => {\n        let {userInput} = this.state\n        userInput[idx] = newMsg\n        // roll back\n        this.rollBackArray(preMsg[0], preMsg[1])\n        // filter\n        this.filterTheArray(newMsg[0], newMsg[1])\n        let arr = this.calculateTotalPrice(userInput, this.state.isVAT)\n        this.setState({\n            userInput: userInput,\n            gross: arr[0],\n            VAT: arr[1],\n            total: arr[2]\n        })\n    }\n\n    calculateTotalPrice = (arr, isVAT) => {\n        let total = 0;\n        let VAT;\n        arr.map((item) => {\n            total += parseFloat(item[4])\n        })\n        if (isVAT) {\n            VAT = (total/107) * 7\n            return [(total-VAT).toFixed(2), VAT.toFixed(2), total.toFixed(2)]\n        }\n        return [total.toFixed(2), 0, total.toFixed(2)]\n    }\n\n    render() {\n        let {userInput, gross, VAT, total, isDisableButton} = this.state\n        return (\n            <div>\n                <Table hover responsive>\n                    <thead>\n                    <tr className=\"thead-dark\">\n                        {\n                            this.state.fields.map(\n                                (item, idx) => (\n                                    <th key={idx} style={{width: \"20%\"}}>{item}</th>\n                                )\n                            )\n                        }\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        userInput.map(\n                            (item, idx) => (\n                                <PreRowContent key={idx} rowIdx={idx}\n                                               transferMsg={(preMsg, newMsg, idx) => this.transferMsg(preMsg, newMsg, idx)}\n                                               type={this.state.type}\n                                               productsName={this.state.productsName}\n                                               servicesName={this.state.servicesName}\n                                               productsItems={this.state.products}\n                                               servicesItems={this.state.services}\n                                               userInput={item}></PreRowContent>\n                            )\n                        )\n                    }\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"4\" className=\"text-right\">Gross:</td>\n                        <td>{gross}</td>\n                    </tr>\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"4\" className=\"text-right\">\n                            <input type=\"checkbox\" style={{marginRight: \"10px\"}} onChange={this.handleChange}/>\n                            VAT:\n                        </td>\n                        <td>{VAT}</td>\n                    </tr>\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"4\" className=\"text-right\">Total:</td>\n                        <td>{total}</td>\n                    </tr>\n                    </tbody>\n                </Table>\n                <button type=\"button\" className=\"btn btn-primary\" disabled={isDisableButton} onClick={this.handleClick}>Add a new row</button>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport TableAdd from \"./table-add\";\n\nexport default class CardFormWrapperSales extends React.Component {\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    render() {\n        return (\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new sales record</h5>\n                <Card.Body>\n                    <div className=\"text-right\">\n                        <button type=\"button\" className=\"btn btn-light\" style={{marginRight: \"20px\"}}>SAVE&PRINT</button>\n                        <button type=\"button\" className=\"btn btn-dark\">SAVE</button>\n                    </div>\n                    <br/>\n                    <TableAdd></TableAdd>\n                </Card.Body>\n            </Card>\n        );\n    }\n}","import React from \"react\";\nimport CardFormWrapperSales from \"./card-form-wrapper-sales\";\n\nexport default class PageSales extends React.Component {\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <CardFormWrapperSales></CardFormWrapperSales>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/header/header';\nimport {Switch, Router, Route, Redirect, DefaultRoute} from 'react-router-dom';\nimport PageCars from \"./components/cars/page-cars\";\nimport PageCustomer from \"./components/customers/page-customers\";\nimport PageProducts from \"./components/products/page-products\";\nimport PageSales from \"./components/sales/page-sales\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div className=\"main\">\n            <Header/>\n            <Switch>\n                {/*<DefaultRoute handler={PageSales}/>*/}\n                <Route path='/sales' component={PageSales}/>\n                <Route path='/cars' component={PageCars}/>\n                <Route path='/customers' component={PageCustomer}/>\n                <Route path='/products' component={PageProducts}/>\n                <Redirect to='/sales'/>\n            </Switch>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  // <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}