{"version":3,"sources":["utils/storageUtils.js","api/HTTP.js","api/index.js","redux/reducer.js","redux/action-type.js","redux/action.js","components/header/header.js","components/common/my-dropdown.js","components/common/my-alert.js","components/cars/form-add.js","components/cars/card-form-wrapper-cars.js","components/common/my-carousels.js","components/cars/card-detail-cars.js","components/common/my-search-bar.js","components/cars/search-field.js","components/common/my-pagination.js","components/common/my-spinner.js","components/cars/page-cars.js","components/customers/form-add.js","components/customers/card-form-wrapper-customers.js","components/common/my-table.js","components/customers/page-customers.js","components/items/form-add.js","components/items/card-form-wrapper-items.js","components/items/page-items.js","components/sales/preRowContent.js","components/sales/table-add.js","components/sales/card-form-wrapper-sales.js","components/sales/page-sales.js","App.js","serviceWorker.js","pages/page-login.js","index.js"],"names":["userid","store","set","get","remove","httpRequest","url","data","type","paramStr","Object","keys","forEach","key","substring","length","axios","fd","FormData","append","i","post","headers","baseUrl","requestLogin","user","requestItemsQuery","queryCondition","requestItemUpdate","item","requestItemDelete","requestCustomersQuery","requestCustomerUpdate","customer","requestCustomerDelete","initUser","initItems","combineReducers","state","action","items","resLogin","Header","props","handleClick","storageUtils","history","replace","logout","navInfo","text","href","isLoading","username","userId","this","setState","then","r","err_code","catch","err","currentPathname","location","pathname","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","map","idx","Link","as","to","Text","Button","variant","style","position","marginLeft","disabled","onClick","role","aria-hidden","right","React","Component","connect","dispatch","withRouter","MyDropdown","handleDropDownClick","event","preventDefault","$","target","nextElementSibling","slideToggle","handleDropDownItemClick","userInput","innerText","value","label","transferMsg","getAttribute","parentElement","control","invisibleLabel","dataId","Form","Label","height","cursor","data-id","MyAlert","toggleAlert","alertId","timeStamp","preProps","preStates","s","css","display","width","aria-label","CardFormAdd","msg","ownerId","tmp","jsonData","modelPreContent","informAlert","alert","Date","now","handleChange","e","prevState","assign","car","plateNumber","year","color","owner","brand","model","fromFormToParent","date","getFullYear","carImages","domCloseIcon","document","getElementsByClassName","click","console","log","onDrop","picture","requestData","pageCount","ownersId","ownersName","customers","push","_id","name","ownersCount","customersCount","brandPreContent","v","myDate","colorPreContent","textAlign","onChange","withIcon","buttonText","imgExtension","maxFileSize","withPreview","Row","CardFormWrapperCars","toggleClass","fromWrapperToParent","Card","Body","MyCarousels","Carousel","interval","imageURLs","Item","minBlockSize","alt","effect","src","Caption","CardDetailCars","MySearchBar","fields","enterTriggerSearch","keyCode","clickTriggerSearch","data-toggle","aria-haspopup","aria-expanded","onKeyUp","SearchField","carPreContent","fromSearchFieldToParent","arrayCopy","ownerPreContent","searchField","searchText","MyPagination","currentPageCount","parseInt","fromPaginationToParent","dataCount","dataPerPage","totalPagesCount","Math","ceil","arr","startPageCount","endPageCount","count","lastValue","splice","firstValue","unshift","margin","MySpinner","left","bottom","zIndex","PageCars","transferMsgFromPagination","a","requestCarsQuery","cars","carsCount","padding","marginBottom","FormAdd","test","phone","email","top","CardFormWrapperCustomers","cardTitle","MyTable","updateFunc","deleteFunc","idxIsLoading","contents","rowId","tableRole","operatingContent","message","filter","handleDropDownChange","amount","columnId","Table","hover","responsive","subIdx","indexOf","marginRight","PageCustomer","price","transition","CardFormWrapperItems","PageItems","itemsCount","PreRowContent","index","preMsg","productsName","servicesName","fromPreRowContentToParent","rowIdx","oriAmount","TableAdd","componentWillUnmount","callback","rollBackArray","itemsArr","isDisableButton","sort","filterTheArray","remainingAmount","products","services","calculateTotalPrice","isVAT","gross","VAT","totalPrice","handleSubmit","itemsId","itemsName","sales","requestSalesInsert","componentDidMount","checked","newMsg","parseFloat","toFixed","initItemsData","productsItems","servicesItems","colSpan","CardFormWrapperSales","PageSales","App","path","component","Boolean","window","hostname","match","PageLogin","isChecked","password","login","marginTop","placeholder","createStore","reducer","compose","applyMiddleware","thunk","devToolsExtension","f","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.81f34f63.chunk.js","sourcesContent":["import store from 'store'\n\nconst USERID = 'userid'\nexport default {\n    //保存\n    saveUserId(userid) {\n        // localStorage.setItem(USERID,JSON.stringify(userid))\n        store.set(USERID, userid)\n    },\n    //读取\n    getUserId() {\n        // return JSON.parse(localStorage.getItem(USERID) || '{}')\n        return store.get(USERID) || \"\"\n    },\n    //删除\n    deleteUserId() {\n        // localStorage.removeItem(USERID)\n        store.remove(USERID)\n    }\n}","import axios from 'axios'\n//data: {k: v}\nexport default function httpRequest(url, data, type) {\n    if (type === 'GET') {\n        let paramStr = ''\n        Object.keys(data).forEach(key => {\n            paramStr += key + '=' + data[key] + '&'\n        })\n        if (paramStr) {\n            paramStr = paramStr.substring(0, paramStr.length - 1)\n        }\n        // 使用axios发get请求\n        return axios.get(url + '?' + paramStr)\n        // return axios.get(`${url}?username=${data.username}&password=${data.password}`)\n    } else {\n        if (\"carImages\" in data) {\n            const fd = new FormData()\n            Object.keys(data).forEach(key => {\n                fd.append(key, data[key])\n                if (key === \"carImages\") {\n                    for (let i = 0; i < data[key].length; i++) {\n                        fd.append(key, data[key][i])\n                    }\n                }\n            })\n            return axios.post(url, fd, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            })\n        }\n        return axios.post(url, data)\n    }\n}","import httpRequest from \"./HTTP\";\n// http://34.126.86.176:4000\nlet baseUrl = \"https://e307b1922e60.ngrok.io\"\n\nexport const requestRegister = (user) => httpRequest(baseUrl + '/users/register', user, 'POST')\nexport const requestLogin = (user) => httpRequest(baseUrl + '/users/login', user, 'POST')\nexport const requestUserInfo = (userId) => httpRequest(baseUrl + '/users/query', userId, 'POST')\n\nexport const requestItemsQuery = (queryCondition) => httpRequest(baseUrl + '/items/query', queryCondition, 'GET')\nexport const requestItemInsert = (item) => httpRequest(baseUrl + '/items/insert', item, 'GET')\nexport const requestItemUpdate = (item) => httpRequest(baseUrl + '/items/update', item, 'GET')\nexport const requestItemDelete = (item) => httpRequest(baseUrl + '/items/delete', item, 'GET')\n\nexport const requestCustomersQuery = (queryCondition) => httpRequest(baseUrl + '/customers/query', queryCondition, 'GET')\nexport const requestCustomerInsert = (customer) => httpRequest(baseUrl + '/customers/insert', customer, 'GET')\nexport const requestCustomerUpdate = (customer) => httpRequest(baseUrl + '/customers/update', customer, 'GET')\nexport const requestCustomerDelete = (customer) => httpRequest(baseUrl + '/customers/delete', customer, 'GET')\n\nexport const requestCarsQuery = (queryCondition) => httpRequest(baseUrl + '/cars/query', queryCondition,'GET')\nexport const requestCarInsert = (car) => httpRequest(baseUrl + '/cars/insert', car,'POST')\n\nexport const requestSalesInsert = (sales) => httpRequest(baseUrl + '/sales/insert', sales,'GET')\n\nexport const requestReadMsg = (from) => httpRequest(baseUrl + '/readMsg',{from},'POST')","import {combineReducers} from \"redux\";\nimport {AUTH_SUCCESS, ERROR_MSG, LOGIN, LOGOUT} from \"./action-type\";\n// import {user} from './action'\n\nconst initUser = {}\n\nexport const user = (state=initUser, action) => {\n    switch (action.type) {\n        case LOGIN:\n            return {...action.data}\n        case LOGOUT:\n            return initUser\n        // case AUTH_SUCCESS:\n        //     // const authSuccess = (user) => ({type: AUTH_SUCCESS, data: user})\n        //     // action.data -> user\n        //     return {...state, user: action.data, errMsg: \"Login success\"}\n        // case ERROR_MSG:\n        //     // const errorMsg = (errMsg) => ({type: ERROR_MSG, data: errMsg})\n        //     // action.data -> errMsg\n        //     return {...state, errMsg: action.data}\n        default:\n            return state\n    }\n}\n\nconst initItems = {}\n\nexport const items = (state=initItems, action) => {\n    switch (action.type) {\n        case \"init\":\n            return {...action.data}\n        default:\n            return state\n    }\n}\n\n// 向外暴露: {user: {}}\nexport default combineReducers({\n    user,\n    items\n})","export const AUTH_SUCCESS = 'auth_success'\nexport const ERROR_MSG = 'error_msg'\nexport const LOGIN = 'login'\nexport const LOGOUT = 'logout'","import {requestLogin} from \"../api\";\nimport {ERROR_MSG, AUTH_SUCCESS, LOGIN, LOGOUT} from \"./action-type\";\nimport {init} from \"http-proxy-middleware/dist/handlers\";\nimport {items} from \"./reducer\";\n\nconst authSuccess = (user) => ({type: AUTH_SUCCESS, data: user})\nconst errorMsg = (errMsg) => ({type: ERROR_MSG, data: errMsg})\nconst resLogin = (data) => ({type: LOGIN, data: data})\nconst resLogout = () => ({type: LOGOUT})\n\nconst initItems = (items) => ({type: \"init\", data: items})\n\nexport const login = (user) => {\n    return async dispatch => {\n        // requestLogin(user).then(r => {}).catch((err) => {})\n        const {data} = await requestLogin(user)\n        dispatch(resLogin(data))\n        // if (data.err_code === 0) {\n        //     dispatch(authSuccess(data))\n        // } else {\n        //     dispatch(errorMsg(data))\n        // }\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        dispatch(resLogout())\n    }\n}\n\nexport const initItemsData = (items) => {\n    return dispatch => {\n        dispatch(\n            initItems(items)\n        )\n    }\n}","import React from 'react';\nimport {Nav, Navbar, Button} from \"react-bootstrap\";\nimport {withRouter, Link} from 'react-router-dom'\nimport storageUtils from \"../../utils/storageUtils\";\nimport {requestUserInfo} from \"../../api\";\nimport {connect} from 'react-redux';\nimport {logout} from \"../../redux/action\"\n\n// 每个组件有个prop，prop可以通过'prop.'的方式拿到自定义组件标签里的任一属性\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        // let currentPathname = this.props.history.location.pathname\n        // if (currentPathname === \"/\") {\n        //     currentPathname = \"/sales\"\n        //     this.props.history.push(\"/sales\")\n        // }\n        this.state = {\n            navInfo: [\n                {\n                    text: \"SALES\",\n                    href: \"/sales\"\n                },\n                {\n                    text: \"SALES REPORT\",\n                    href: \"/sales_report\"\n                },\n                {\n                    text: \"CARS\",\n                    href: \"/cars\"\n                },\n                {\n                    text: \"CUSTOMERS\",\n                    href: \"/customers\"\n                },\n                {\n                    text: \"PRODUCTS/SERVICES\",\n                    href: \"/items\"\n                }\n            ],\n            isLoading: true,\n            username: \"\"\n        };\n    }\n\n    componentDidMount() {\n        if (!this.props.user.user) {\n            requestUserInfo({userId: storageUtils.getUserId()}).then((r) => {\n                if (r.data.err_code === 0) {\n                    this.setState({username: r.data.user.username})\n                } else {\n                    storageUtils.deleteUserId()\n                }\n                this.setState({isLoading: false})\n            }).catch((err) => {\n                storageUtils.deleteUserId()\n            })\n        } else {\n            this.setState({username: this.props.user.user.username, isLoading: false})\n        }\n    }\n\n    handleClick = () => {\n        storageUtils.deleteUserId()\n        this.props.history.replace('/login')\n        this.props.logout()\n    }\n\n\n    render() {\n        let currentPathname = this.props.history.location.pathname\n        let {isLoading, username} = this.state\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"/sales\">The One Car POS</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {\n                            this.state.navInfo.map(\n                                (item, idx) => (\n                                    <Nav.Link as={Link} to={item.href} key={idx}\n                                              className={currentPathname === item.href ? \"active\" : \"\"}>{item.text}</Nav.Link>\n                                )\n                            )\n                        }\n                    </Nav>\n                    {isLoading ? null\n                        :\n                        <Navbar.Text>\n                            Signed in as: {username}\n                        </Navbar.Text>\n                    }\n                    <Button className=\"btn\" variant=\"warning\" type=\"submit\"\n                            style={{position: \"relative\", marginLeft: \"20px\"}}\n                            disabled={isLoading ? true : false}\n                            onClick={this.handleClick}>\n                        <span\n                            className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                            role=\"status\" aria-hidden=\"true\"\n                            style={{right: \"5px\", position: \"relative\"}}></span>\n                        {\n                            isLoading ? \"Loading...\" : \"Logout\"\n                        }\n                    </Button>\n                    {/*<button type=\"button\" class=\"btn btn-warning\" style={{marginLeft: \"20px\"}}></button>*/}\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default connect(\n    state => ({user: state.user}),\n    {logout}\n)(withRouter(Header));\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport $ from 'jquery';\n\nclass MyDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: this.props.value\n        }\n    }\n\n    handleDropDownClick = (event) => {\n        event.preventDefault();\n        $(event.target.nextElementSibling).slideToggle();\n    }\n\n    handleDropDownItemClick = (event) => {\n        const userInput = event.target.innerText\n        if (userInput !== this.state.value) {\n            if (this.props.label === \"owner\") {\n                this.props.transferMsg(userInput, this.props.label, event.target.getAttribute(\"data-id\"))\n            } else {\n                this.props.transferMsg(userInput, this.props.label)\n            }\n\n            this.setState({value: userInput})\n        }\n        $(event.target.parentElement).slideToggle();\n    }\n\n    render() {\n        const {data, label, value, control, invisibleLabel, dataId} = this.props;\n        return (\n            <div className={control ? \"dropdown\" : \"col-6 col-md-3 dropdown\"}>\n                {invisibleLabel ? null : <Form.Label>{label}</Form.Label>}\n                <button className={`btn btn-primary dropdown-toggle form-control ${invisibleLabel ? \"invisible-label-button-after\" : null}`} onClick={this.handleDropDownClick}>{value}</button>\n                <ul className=\"dropdown-menu\" id={invisibleLabel ? \"invisible-label-ul\" : null} style={{height: data.length>=5 ? 180 : data.length * 40}}>\n                    {\n                        data.map((item, idx) => (\n                            <li className=\"dropdown-item\" style={{cursor:\"pointer\"}} key={idx} onClick={this.handleDropDownItemClick} data-id={dataId ? dataId[idx] : \"\"}>{item}</li>\n                        ))\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport {MyDropdown};","import React from \"react\";\nimport $ from \"jquery\";\n\nclass MyAlert extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeStamp: this.props.timeStamp\n        }\n    }\n\n    toggleAlert = () => {\n        $(`#${this.props.alertId}`).slideToggle()\n    }\n\n    componentDidUpdate(preProps,preStates, s) {\n        if (this.props.timeStamp === this.state.timeStamp) {\n            return\n        }\n        this.setState({timeStamp: this.props.timeStamp})\n        // 如果正在展示\n        if ($(`#${this.props.alertId}`).css(\"display\") === \"none\") {\n            this.toggleAlert()\n        }\n        // setTimeout(() => {\n        //     this.toggleAlert()\n        // }, 5000)\n    }\n\n    render() {\n        const {type, value, alertId} = this.props\n        // [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"dark\"]\n\n        return (\n            <div className={`alert alert-${type}`} id={alertId} role=\"alert\" style={{display: \"none\", width: \"100%\"}}>\n                {value}\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={this.toggleAlert}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default MyAlert;","import React from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {MyDropdown} from \"../common/my-dropdown\";\nimport \"../common/my-dropdown.css\";\nimport jsonData from \"../../car_brand_model.json\";\nimport ImageUploader from 'react-images-upload';\nimport MyAlert from \"../common/my-alert\";\nimport {requestCustomersQuery, requestCarInsert} from \"../../api\";\n\nclass CardFormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        let brandPreContent = [];\n        Object.keys(jsonData).map((v, i) => {\n            brandPreContent.push(v)\n        });\n        let myDate = new Date();\n        let modelPreContent = jsonData[brandPreContent[0]];\n        this.state = {\n            colorPreContent: [\"WHITE\", \"BLACK\", \"PURPLE\", \"BLUE\", \"NAVY\", \"GREEN\", \"YELLOW\", \"ORANGE\", \"RED\", \"เทา\"],\n            ownersId: [],\n            ownersName: [],\n            ownersCount: 0,\n            brandPreContent: brandPreContent,\n            modelPreContent: modelPreContent,\n            userInput: {\n                plateNumber: \"\",\n                year: myDate.getFullYear(),\n                color: \"WHITE\",\n                owner: \"\",\n                ownerId: \"\",\n                brand: brandPreContent[0],\n                model: modelPreContent[0],\n                carImages: \"\"\n            },\n            isLoading: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    transferMsg = (msg, label, dataId) => {\n        let key = \"\"\n        let {userInput} = this.state\n        switch (label) {\n            case \"color\":\n                key = \"color\";\n                break;\n            case \"owner\":\n                key = \"owner\";\n                userInput.ownerId = dataId\n                this.setState({...this.state, userInput: userInput})\n                break;\n            case \"brand\":\n                key = \"brand\";\n                let tmp = jsonData[msg]\n                userInput[\"model\"] = tmp[0]\n                let {state} = this\n                state.userInput = userInput\n                state.modelPreContent = tmp\n                this.setState(state)\n                break;\n            case \"model\":\n                key = \"model\";\n                break;\n            default:\n                break;\n        }\n        userInput[key] = msg\n        this.setState({...this.state, userInput: userInput})\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({...this.state, alert: alert})\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        this.setState(prevState => {\n            let userInput = Object.assign({}, prevState.userInput);\n            userInput[key] = value\n            return {userInput};\n        })\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        let {userInput} = this.state\n        if (!userInput.plateNumber || !userInput.year || !userInput.color || !userInput.owner || !userInput.brand || !userInput.model) {\n            this.informAlert(\"One or more required fields are empty\")\n            return\n        }\n        this.setState({isLoading: true})\n        requestCarInsert(userInput).then((r) => {\n            if (r.data.err_code === 0) {\n                this.props.fromFormToParent(r.data.car)\n                let date = new Date()\n                userInput.plateNumber = \"\"\n                userInput.year = date.getFullYear()\n                userInput.color = \"WHITE\"\n                userInput.owner = \"\"\n                userInput.ownerId = \"\"\n                // userInput.brand = this.brandPreContent[0]\n                // userInput.model = this.modelPreContent[0]\n                userInput.carImages = \"\"\n                let domCloseIcon = document.getElementsByClassName(\"deleteImage\")\n                for (let i = 0; i < domCloseIcon.length; i++) {\n                    domCloseIcon[i].click()\n                }\n                this.informAlert(\"Insert success\", \"success\")\n                this.setState({...this.state, userInput: userInput})\n            } else {\n                // 服务器返回错误\n                this.informAlert(\"Insert fail\", \"danger\")\n                // this.setState({...this.state, isLoading: false})\n            }\n            this.setState({...this.state, isLoading: false})\n            console.log(this.state)\n        }).catch((err) => {\n            // 请求返回错误\n            this.informAlert(`Insert fail ${err}`, \"danger\")\n            this.setState({...this.state, isLoading: false})\n            console.log(err)\n        })\n        // this.setState(prevState => {\n        //     let alert = Object.assign({}, prevState.alert);\n        //     alert[\"type\"] = \"success\"\n        //     alert[\"value\"] = \"success\"\n        //     alert[\"timeStamp\"] = Date.now()\n        //     return {alert};\n        // })\n        // console.log(this.state);\n    }\n\n    onDrop = (picture) => {\n        let {userInput} = this.state\n        // userInput.carImages = userInput.carImages.concat(picture)\n        userInput.carImages = picture\n        this.setState({...this.state, userInput: userInput});\n    }\n\n    requestData = (pageCount) => {\n        this.setState({isLoading: true})\n        requestCustomersQuery({pageCount}).then((r) => {\n            if (r.data.err_code === 0) {\n                let {ownersId, ownersName} = this.state\n                for (let i = 0; i < r.data.customers.length; i++) {\n                    ownersId.push(r.data.customers[i]._id)\n                    ownersName.push(r.data.customers[i].name)\n                }\n                console.log(ownersId)\n                this.setState({\n                    ownersId: ownersId,\n                    ownersName: ownersName,\n                    ownersCount: r.data.customersCount,\n                    isLoading: false\n                })\n            } else {\n            }\n        }).catch((err) => {\n            console.log(err)\n            // this.informAlert(\"Insert success\", \"success\")\n            // this.setState({...this.state, userInput: userInput})\n        })\n    }\n\n    componentDidMount() {\n        this.requestData(0)\n    }\n\n    render() {\n        console.log(this.state)\n        const {userInput, colorPreContent, ownersId, ownersName, brandPreContent, modelPreContent, isLoading, alert} = this.state\n        return (\n            <Form>\n                <div className=\"row\">\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Plate Number</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"plateNumber\" value={userInput.plateNumber}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Year</Form.Label>\n                        <input type=\"number\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"year\" value={userInput.year}></input>\n                    </div>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)} data={colorPreContent}\n                                label=\"color\" value={userInput.color}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label, dataId) => this.transferMsg(msg, label, dataId)}\n                                data={ownersName} dataId={ownersId}\n                                label=\"owner\" value={userInput.owner}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)} data={brandPreContent}\n                                label=\"brand\" value={userInput.brand}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)} data={modelPreContent}\n                                label=\"model\" value={userInput.model}></MyDropdown>\n                    <div className=\"col-6 col-md-3\">\n                    </div>\n                    <ImageUploader\n                        withIcon={true}\n                        buttonText='Choose images'\n                        onChange={this.onDrop}\n                        imgExtension={['.jpg', 'jpeg', '.gif', '.png']}\n                        label=\"Max file size: 5mb, accepted: jpg|jpeg|gif|png\"\n                        maxFileSize={5242880}\n                        withPreview={true}\n                    />\n                </div>\n                <br/>\n                <Form.Row>\n                    <div className=\"col-6 col-md-1\">\n                        <Button variant=\"primary\" type=\"submit\" style={{position: \"relative\"}}\n                                disabled={isLoading ? true : false}\n                                onClick={this.handleClick}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}></span>\n                            {\n                                isLoading ? \"Loading...\" : \"Submit\"\n                            }\n                        </Button>\n                    </div>\n                </Form.Row>\n                <br/>\n                <Form.Row>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp} alertId=\"alert-cars-form\"></MyAlert>\n                </Form.Row>\n\n            </Form>\n        )\n    }\n}\n\nexport default CardFormAdd;","import React from \"react\";\nimport CarFormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\n\nclass CardFormWrapperCars extends React.Component {\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    fromFormToParent = (data) => {\n        this.props.fromWrapperToParent(data)\n    }\n\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new car record</h5>\n                <Card.Body>\n                    <CarFormAdd fromFormToParent={(data) => this.fromFormToParent(data)}></CarFormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CardFormWrapperCars;","import React from \"react\";\nimport {Carousel} from \"react-bootstrap\";\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nclass MyCarousels extends React.Component {\n\n    render() {\n        const {data} = this.props\n        return (\n            <Carousel interval={null}>\n                {\n                    data.imageURLs.map((item, idx) => (\n                        <Carousel.Item key={idx} style={{height: \"300px\"}}>\n                            {/*<img*/}\n                            {/*    className=\"d-block w-100 lazy\"*/}\n                            {/*    src={item.src}*/}\n                            {/*    alt={item.brand}*/}\n                            {/*    style={{height: \"300px\"}}*/}\n                            {/*/>*/}\n                            <LazyLoadImage\n                                style={{minBlockSize: \"-webkit-fill-available\"}}\n                                alt={data.brand}\n                                effect=\"blur\"\n                                src={`https://e307b1922e60.ngrok.io/images/${item}`} // use normal <img> attributes as props\n                                width=\"100%\"/>\n                            <Carousel.Caption>\n                                <h3>{data.brand}</h3>\n                                <p>{data.model}</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                    ))\n                    // Object.keys(data).forEach((key, idx) => (\n                    //\n                    // ))\n                }\n\n                {/*<Carousel.Item>*/}\n                {/*  <img*/}\n                {/*    className=\"d-block w-100\"*/}\n                {/*    src=\"holder.js/800x400?text=Second slide&bg=282c34\"*/}\n                {/*    alt=\"Third slide\"*/}\n                {/*  />*/}\n                {/*  <Carousel.Caption>*/}\n                {/*    <h3>Audi</h3>*/}\n                {/*    <p>100</p>*/}\n                {/*  </Carousel.Caption>*/}\n                {/*</Carousel.Item>*/}\n\n                {/*<Carousel.Item>*/}\n                {/*  <img*/}\n                {/*    className=\"d-block w-100\"*/}\n                {/*    src=\"holder.js/800x400?text=Third slide&bg=20232a\"*/}\n                {/*    alt=\"Third slide\"*/}\n                {/*  />*/}\n                {/*  <Carousel.Caption>*/}\n                {/*    <h3>Audi</h3>*/}\n                {/*    <p>100</p>*/}\n                {/*  </Carousel.Caption>*/}\n                {/*</Carousel.Item>*/}\n\n            </Carousel>\n        );\n    }\n}\n\nexport default MyCarousels;","import React from \"react\";\nimport MyCarousels from \"../common/my-carousels\";\n\nclass CardDetailCars extends React.Component {\n    render() {\n        const {data} = this.props\n        return(\n            <div className=\"col mb-4\">\n                <div className=\"card h-100\" id=\"card-detail-cars\">\n                    <MyCarousels className=\"card-img-top\" data={data}></MyCarousels>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{data.brand +\" \"+ data.model}</h5>\n                        <p className=\"card-text\">Owner: {data.owner.name}</p>\n                        <p className=\"card-text\">Year: {data.year}</p>\n                        <p className=\"card-text\">Color: {data.color}</p>\n                        {/*<p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>*/}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CardDetailCars;","import React from \"react\";\nimport \"./my-search-bar.css\";\nimport $ from \"jquery\";\n\nclass MySearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            fields: this.props.fields\n        }\n    }\n\n    // handleClick = () => {\n    //     $(\"#div-dropdown-menu\").slideToggle()\n    // }\n\n    handleDropDownClick = (event) => {\n        event.preventDefault();\n        $(event.target.nextElementSibling).slideToggle();\n    }\n\n    handleDropDownItemClick = (event) => {\n        const userInput = event.target.innerText\n        if (userInput !== this.state.fields) {\n            this.props.transferMsg(userInput, this.props.label)\n            this.setState({fields: userInput, value: \"\"})\n        }\n        $(event.target.parentElement).slideToggle();\n    }\n\n    handleChange = (e) => {\n        let {value} = this.state\n        value = e.target.value\n        this.setState({...this.state, value})\n    }\n\n    enterTriggerSearch = (e) => {\n        if(e.keyCode === 13) {\n            this.props.transferMsg(this.state.value, \"search-text\")\n            // search-text\n        }\n    }\n\n    clickTriggerSearch = () => {\n        this.props.transferMsg(this.state.value, \"search-text\")\n    }\n\n    render() {\n        const {data, fields} = this.props\n        return (\n            <div className=\"input-group input-field col-12 col-md-3\">\n                <div className=\"input-group-prepend\" style={{height: \"38px\"}}>\n                    <button className=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\"\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\n                            onClick={this.handleDropDownClick}>\n                        {fields}\n                    </button>\n                    <div className=\"dropdown-menu\" id=\"div-dropdown-menu\">\n                        {\n                            data.map((item, idx) => (\n                                <li className=\"dropdown-item\" style={{cursor: \"pointer\"}} key={idx}\n                                    onClick={this.handleDropDownItemClick}>{item}</li>\n                            ))\n                        }\n                        {/*<a className=\"dropdown-item\" href=\"#\">Another action</a>*/}\n                        {/*<a className=\"dropdown-item\" href=\"#\">Something else here</a>*/}\n                        {/*<div role=\"separator\" className=\"dropdown-divider\"></div>*/}\n                        {/*<a className=\"dropdown-item\" href=\"#\">Separated link</a>*/}\n                    </div>\n                </div>\n                <input type=\"text\" className=\"input-search-bar form-control\"\n                       aria-label=\"Text input with dropdown button\"\n                       name=\"search-text\"\n                       value={this.state.value}\n                       onChange={this.handleChange}\n                       onKeyUp={this.enterTriggerSearch}\n                />\n                <i onClick={this.clickTriggerSearch}></i>\n            </div>\n        )\n    }\n}\n\nexport default MySearchBar;","import React from \"react\";\nimport {MyDropdown} from \"../common/my-dropdown\";\nimport MySearchBar from \"../common/my-search-bar\";\nimport jsonData from \"../../car_brand_model.json\";\n\nclass SearchField extends React.Component {\n    constructor(props) {\n        super(props);\n        // let carPreContent = {\n        //     \"All\": [\"All\"]\n        // };\n        // let brandPreContent = []\n        // Object.keys(jsonData).map((v,i)=>{\n        //     brandPreContent.push(v)\n        //     carPreContent[v] = jsonData[v]\n        //     carPreContent[v].unshift(\"All\")\n        // });\n        // console.log(carPreContent)\n        let brandPreContent = [\"All\"]\n        let carPreContent = {\n            \"All\": [\"All\"]\n        }\n        for (let key in jsonData) {\n            brandPreContent.push(key);\n            let arrayCopy = [\"All\", ...jsonData[key]];\n            carPreContent[key] = arrayCopy;\n        }\n        this.state = {\n            colorPreContent: [\"All\", \"WHITE\", \"BLACK\", \"PURPLE\", \"BLUE\", \"NAVY\", \"GREEN\", \"YELLOW\", \"ORANGE\", \"RED\", \"เทา\"],\n            ownerPreContent: [],\n            carPreContent: carPreContent,\n            brandPreContent: brandPreContent,\n            modelPreContent: carPreContent[\"All\"],\n            userInput: {\n                // year: myDate.getFullYear(),\n                searchField: \"Plate Number\",\n                searchText: \"\",\n                color: \"All\",\n                brand: \"All\",\n                model: \"All\"\n            }\n        }\n    }\n\n    transferMsg = (msg, label) => {\n        let key = \"\"\n        switch (label) {\n            case \"color\":\n                key = \"color\";\n                break;\n            case \"owner\":\n                key = \"owner\";\n                break;\n            case \"brand\":\n                key = \"brand\";\n                this.setState({...this.state, modelPreContent: this.state.carPreContent[msg]});\n                this.setState(prevState => {\n                    let userInput = Object.assign({}, prevState.userInput);\n                    userInput[\"model\"] = this.state.carPreContent[msg][0]\n                    return {userInput};\n                })\n                break;\n            case \"model\":\n                key = \"model\";\n                break;\n            case \"search-field\":\n                key = \"searchField\"\n                break;\n            case \"search-text\":\n                key = \"searchText\"\n                break;\n            default:\n                break;\n        }\n        this.setState(prevState => {\n            let userInput = Object.assign({}, prevState.userInput);\n            if (label === \"search-text\") {\n                this.props.fromSearchFieldToParent(userInput)\n            }\n            userInput[key] = msg\n            return {userInput};\n        })\n    }\n\n    render() {\n        console.log(this.state)\n        return (\n            <div className=\"card\">\n                <div className=\"card-body row\">\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)}\n                                data={this.state.colorPreContent} label=\"color\"\n                                value={this.state.userInput.color}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)}\n                                data={this.state.brandPreContent} label=\"brand\"\n                                value={this.state.userInput.brand}></MyDropdown>\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)}\n                                data={this.state.modelPreContent} label=\"model\"\n                                value={this.state.userInput.model}></MyDropdown>\n                    <MySearchBar transferMsg={(msg, label) => this.transferMsg(msg, label)} label=\"search-field\"\n                                 fields={this.state.userInput.searchField}\n                                 data={[\"Plate Number\", \"Owner\"]}></MySearchBar>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchField;","import React from 'react';\n// import {Pagination} from \"react-bootstrap\";\n\n// 每个组件有个prop，prop可以通过'prop.'的方式拿到自定义组件标签里的任一属性\n\nclass MyPagination extends React.Component {\n    handleClick = (e) => {\n        let pageCount = e.target.getAttribute(\"name\")\n        let {currentPageCount} = this.props\n        if (parseInt(pageCount) === currentPageCount) {\n            return\n        }\n        switch (pageCount) {\n            case \"pre\":\n                currentPageCount--\n                break\n            case \"nex\":\n                currentPageCount++\n                break\n            default:\n                currentPageCount = pageCount\n        }\n        this.props.fromPaginationToParent(currentPageCount)\n    }\n\n    render() {\n        const {currentPageCount, dataCount, dataPerPage} = this.props\n        const totalPagesCount = Math.ceil(dataCount / dataPerPage)\n        let arr = []\n        if (totalPagesCount<=5) {\n            for (let i=0;i<totalPagesCount;i++) {\n                arr.push(i+1)\n            }\n        } else {\n            let startPageCount\n            let endPageCount\n            startPageCount = currentPageCount - 2\n            endPageCount = currentPageCount + 2\n            arr = [currentPageCount - 2, currentPageCount - 1, currentPageCount, currentPageCount + 1, currentPageCount + 2]\n            if (startPageCount <= 0) {\n                let count = -(startPageCount)\n                let lastValue = arr[arr.length - 1]\n                arr.splice(0, count + 1)\n                for (let i = 0; i < count + 1; i++) {\n                    lastValue += 1\n                    arr.push(lastValue)\n                }\n            }\n            if (endPageCount > totalPagesCount) {\n                let count = (endPageCount - totalPagesCount)\n                let firstValue = arr[0]\n                arr.splice(arr.length - count, count + 1)\n                for (let i = 0; i < count; i++) {\n                    firstValue -= 1\n                    arr.unshift(firstValue)\n                }\n            }\n        }\n        return (\n            // <Pagination>\n            //   {/*<Pagination.First />*/}\n            //   <Pagination.Prev />\n            //   <Pagination.Item>{1}</Pagination.Item>\n            //   {/*<Pagination.Ellipsis />*/}\n            //\n            //   <Pagination.Item>{10}</Pagination.Item>\n            //   <Pagination.Item active>{12}</Pagination.Item>\n            //   <Pagination.Item disabled>{14}</Pagination.Item>\n            //\n            //   {/*<Pagination.Ellipsis />*/}\n            //   <Pagination.Item>{20}</Pagination.Item>\n            //   <Pagination.Next />\n            //   {/*<Pagination.Last />*/}\n            // </Pagination>\n\n            <ul className=\"pagination\" style={{margin: \"0 auto\"}}>\n                <li className={`page-item ${currentPageCount === 1 ? \"disabled\" : \"\"}`}>\n                    <p className=\"page-link\" role=\"button\" onClick={this.handleClick} name=\"pre\">\n                        ‹\n                    </p>\n                </li>\n                {\n                    arr.map((item, idx) => (\n                        <li key={idx} className={`page-item ${currentPageCount === item ? \"active\" : \"\"}`}>\n                            <p className=\"page-link\" role=\"button\" onClick={this.handleClick} name={item}>{item}</p>\n                        </li>\n                    ))\n                }\n\n                {/*<li className=\"page-item\">*/}\n                {/*    <p className=\"page-link\" role=\"button\">1</p>*/}\n                {/*</li>*/}\n                {/*<li className=\"page-item\">*/}\n                {/*    <p className=\"page-link\" role=\"button\">10</p>*/}\n                {/*</li>*/}\n                {/*<li className=\"page-item active\">*/}\n                {/*    <span className=\"page-link\">*/}\n                {/*        12*/}\n                {/*        <span className=\"sr-only\">(current)</span>*/}\n                {/*    </span>*/}\n                {/*</li>*/}\n                {/*<li className=\"page-item disabled\">*/}\n                {/*    <span className=\"page-link\" disabled=\"\">14</span>*/}\n                {/*</li>*/}\n                {/*<li className=\"page-item\">*/}\n                {/*    <p className=\"page-link\" role=\"button\">20</p>*/}\n                {/*</li>*/}\n\n                <li className={`page-item ${currentPageCount === totalPagesCount ? \"disabled\" : \"\"}`}>\n                    <p className=\"page-link\" role=\"button\" onClick={this.handleClick} name=\"nex\">\n                        ›\n                    </p>\n                </li>\n            </ul>\n        )\n    }\n}\n\nexport default MyPagination;\n","import React from \"react\";\n\nclass MySpinner extends React.Component {\n    render() {\n        const {isLoading} = this.props\n        return (\n            <div>\n                <div className={`modal-backdrop fade ${isLoading ? \"show\" : \"d-none\"}`}></div>\n                <div className={`text-center fade ${isLoading ? \"show\" : \"\"}`}\n                     style={{position: \"fixed\", left: \"50%\", bottom: \"50%\", zIndex: \"1060\"}}>\n                    <div className=\"spinner-border text-primary\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MySpinner;","import React from 'react';\nimport CardFormWrapperCars from \"./card-form-wrapper-cars\";\nimport CardDetailCars from \"./card-detail-cars\";\nimport SearchField from \"./search-field\";\nimport {requestCarsQuery} from \"../../api\";\nimport MyPagination from \"../common/my-pagination\";\nimport MySpinner from \"../common/my-spinner\";\n\n// add a search box, the search keyword can be Licence plate number, owner's name,\n// also add filter of brands / models / color\n\nclass PageCars extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: [\"Name\", \"Phone\", \"Email\"],\n            keys: [\"name\", \"phone\", \"email\"],\n            cars: [],\n            currentPageCount: 1,\n            carsCount: 1,\n            isLoading: true\n        }\n    }\n\n    fromWrapperToParent = (data) => {\n        this.requestData({currentPageCount: this.state.currentPageCount})\n    }\n\n    fromSearchFieldToParent = (userInput) => {\n        userInput.currentPageCount = this.state.currentPageCount\n        this.requestData(userInput)\n    }\n\n    transferMsgFromPagination = async (msg) => {\n        this.setState({isLoading: true})\n        msg = parseInt(msg)\n        await this.requestData(msg)\n        this.setState({currentPageCount: msg})\n    }\n\n    requestData = (queryCondition) => {\n        this.setState({isLoading: true})\n        // {color, brand, model, searchField, searchText, currentPageCount}\n        requestCarsQuery(queryCondition).then((r) => {\n            if (r.data.err_code === 0) {\n                this.setState({\n                    cars: r.data.cars,\n                    carsCount: r.data.count,\n                    isLoading: false\n                })\n            }\n            console.log(this.state)\n        }).catch((err) => {\n            this.setState({\n                isLoading: false\n            })\n            console.log(err)\n        })\n    }\n\n    async componentDidMount() {\n        await this.requestData({currentPageCount: this.state.currentPageCount})\n    }\n\n    render() {\n        const {cars} = this.state\n        return (\n            <div style={{padding: \"30px\"}}>\n                <MySpinner isLoading={this.state.isLoading}></MySpinner>\n                <CardFormWrapperCars\n                    fromWrapperToParent={(data) => this.fromWrapperToParent(data)}></CardFormWrapperCars>\n                <br/>\n                <div className=\"sticky-top\" style={{marginBottom: \"20px\"}}>\n                    <SearchField\n                        fromSearchFieldToParent={(userInput) => this.fromSearchFieldToParent(userInput)}></SearchField>\n                </div>\n                <div className=\"row row-cols-1 row-cols-md-6\">\n                    {\n                        cars.map((car, idx) => (\n                            <CardDetailCars key={idx} data={car}></CardDetailCars>\n                        ))\n                    }\n                </div>\n                <div className=\"row\">\n                    <MyPagination transferMsg={(msg, label) => this.transferMsgFromPagination(msg, label)}\n                                  dataPerPage={18} currentPageCount={this.state.currentPageCount}\n                                  dataCount={this.state.carsCount}></MyPagination>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PageCars;","import React from \"react\";\nimport {Form, Button} from \"react-bootstrap\";\nimport MyAlert from \"../common/my-alert\";\nimport {requestCustomerInsert} from \"../../api\";\n\nclass FormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userInput: {\n                name: \"\",\n                phone: \"\",\n                email: \"\"\n            },\n            isLoading: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        };\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({...this.state, alert: alert})\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        if (key === \"phone\") {\n            let re = /^[0-9]*$/;\n            if (!re.test(value)) {\n                return\n            }\n        }\n        let {userInput} = this.state\n        userInput[key] = value\n        this.setState({...this.state, userInput: userInput})\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        const {userInput} = this.state\n        if (!userInput.name) {\n            this.informAlert(\"Name is empty\")\n            return\n        }\n        let rePhone = /^(09)\\d{8}$/;\n        if (!rePhone.test(userInput.phone)) {\n            this.informAlert(\"Phone number format is not correct\")\n            return\n        }\n        let reEmail = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n        if (!reEmail.test(userInput.email)) {\n            this.informAlert(\"Email format is not correct\")\n            return\n        }\n        this.setState({isLoading: true})\n        requestCustomerInsert(userInput).then((r) => {\n            if (r.data.err_code === 0) {\n                this.props.fromFormToParent(userInput)\n                userInput.name = \"\"\n                userInput.phone = \"\"\n                userInput.email = \"\"\n                this.informAlert(\"Insert success\", \"success\")\n                this.setState({...this.state, userInput: userInput})\n            } else {\n                // 服务器返回错误\n                this.informAlert(\"Insert fail\", \"danger\")\n                // this.setState({...this.state, isLoading: false})\n            }\n            this.setState({...this.state, isLoading: false})\n        }).catch((err) => {\n            // 请求返回错误\n            this.informAlert(`Insert fail ${err}`, \"danger\")\n            this.setState({...this.state, isLoading: false})\n            console.log(err)\n        })\n    }\n\n    render() {\n        const {userInput, isLoading, alert} = this.state\n        return (\n            <Form>\n                <Form.Row>\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Name</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"name\" value={userInput.name}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Phone</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"phone\" value={userInput.phone}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Email</Form.Label>\n                        <input type=\"email\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"email\" value={userInput.email}></input>\n                    </div>\n                    <div className=\"col-6 col-md-1\">\n                        <Button variant=\"primary\" type=\"submit\" style={{top: \"30px\", position: \"relative\"}}\n                                disabled={isLoading ? true : false}\n                                onClick={this.handleClick}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}></span>\n                            {\n                                isLoading ? \"Loading...\" : \"Submit\"\n                            }\n                        </Button>\n                    </div>\n                    {/*<div className=\"col-6 col-md-2\">*/}\n                    {/*    <div className=\"alert alert-danger\" role=\"alert\" id=\"div-alert\"*/}\n                    {/*         style={{position: \"relative\", top: \"20px\", display: \"none\"}}></div>*/}\n                    {/*</div>*/}\n                </Form.Row>\n                <br/>\n                <Form.Row>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp} alertId=\"alert-customers-form\"></MyAlert>\n                </Form.Row>\n\n            </Form>\n        )\n    }\n}\n\nexport default FormAdd;","import React from \"react\";\nimport FormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\"\n\nclass CardFormWrapperCustomers extends React.Component {\n\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    fromFormToParent = (data) => {\n        this.props.fromWrapperToParent(data)\n    }\n\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;{this.props.cardTitle}</h5>\n                <Card.Body>\n                    <FormAdd fromFormToParent={(data) => {this.fromFormToParent(data)}}></FormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CardFormWrapperCustomers;","import React from 'react';\nimport {Table} from \"react-bootstrap\";\nimport {MyDropdown} from \"./my-dropdown\";\nimport MyAlert from \"./my-alert\";\nimport {\n    requestCustomerUpdate,\n    requestCustomerDelete,\n    requestItemDelete,\n    requestItemUpdate\n} from \"../../api\";\n\n// 每个组件有个prop，prop可以通过'prop.'的方式拿到自定义组件标签里的任一属性\n\nexport class MyTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            contents: this.props.contents,\n            idxIsLoading: [],\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    handleClick = (e) => {\n        let {idxIsLoading, contents} = this.state\n        let rowId = parseInt(e.target.parentElement.parentElement.getAttribute(\"idx\"))\n        if (contents.length === 0) {\n            contents = this.props.contents\n        }\n        // if (contents.length === 0) {\n        //     this.informAlert(\"Value no change\")\n        //     return\n        // }\n        let updateFunc\n        let deleteFunc\n        if (this.props.tableRole === \"customers\") {\n            let operatingContent = contents[rowId]\n            for (let item in operatingContent) {\n                if (!operatingContent[item]) {\n                    this.informAlert(\"One or more required fields are empty\")\n                    return\n                }\n            }\n            let rePhone = /^(09)\\d{8}$/;\n            if (!rePhone.test(operatingContent.phone)) {\n                this.informAlert(\"Phone number format is not correct\")\n                return\n            }\n            let reEmail = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n            if (!reEmail.test(operatingContent.email)) {\n                this.informAlert(\"Email format is not correct\")\n                return\n            }\n            updateFunc = requestCustomerUpdate\n            deleteFunc = requestCustomerDelete\n        } else if (this.props.tableRole === \"items\") {\n            // amount: 87\n            // brand: \"brand 1\"\n            // name: \"product 1\"\n            // price: 120\n            // type: \"products\"\n            // _id: \"5f9525e01169084cb2567370\"\n            let operatingContent = contents[rowId]\n            console.log(operatingContent)\n            for (let key in operatingContent) {\n                if (key === \"brand\" && operatingContent.type === \"services\") {\n                    continue\n                }\n                if (!operatingContent[key] && operatingContent.type === \"products\") {\n                    this.informAlert(\"One or more required fields are empty\")\n                    return\n                }\n            }\n            updateFunc = requestItemUpdate\n            deleteFunc = requestItemDelete\n        }\n        idxIsLoading.push(rowId)\n        this.setState({idxIsLoading: idxIsLoading})\n        switch (e.target.getAttribute(\"name\")) {\n            case \"update\":\n                updateFunc(contents[rowId]).then((r) => {\n                    if (r.data.err_code === 0) {\n                        this.informAlert(\"Update success\", \"success\")\n                    } else {\n                        this.informAlert(`Update fail ${r.data.message}`, \"danger\")\n                    }\n                    let {idxIsLoading} = this.state\n                    idxIsLoading = idxIsLoading.filter(idx => idx !== rowId)\n                    this.setState({idxIsLoading: idxIsLoading})\n                }).catch((err) => {\n                    this.informAlert(`Update fail ${err}`, \"danger\")\n                    let {idxIsLoading} = this.state\n                    idxIsLoading = idxIsLoading.filter(idx => idx !== rowId)\n                    this.setState({idxIsLoading: idxIsLoading})\n                })\n                break\n            case \"delete\":\n                deleteFunc({_id: contents[rowId]._id}).then((r) => {\n                    if (r.data.err_code === 0) {\n                        this.informAlert(\"Delete success\", \"success\")\n                        contents = contents.splice(rowId, 1)\n                    } else {\n                        this.informAlert(`Delete fail ${r.data.message}`, \"danger\")\n                    }\n                    let {idxIsLoading} = this.state\n                    idxIsLoading = idxIsLoading.filter(idx => idx !== rowId)\n                    this.setState({contents: contents, idxIsLoading: idxIsLoading})\n                }).catch((err) => {\n                    this.informAlert(`Delete fail ${err}`, \"danger\")\n                    let {idxIsLoading} = this.state\n                    idxIsLoading = idxIsLoading.filter(idx => idx !== rowId)\n                    this.setState({idxIsLoading: idxIsLoading})\n                })\n                break\n            default:\n                break\n        }\n\n\n    }\n\n    handleDropDownChange = (msg, label) => {\n        let {contents} = this.state\n        if (contents.length === 0) {\n            contents = this.props.contents\n        }\n        let operatingContent = contents[label]\n        operatingContent.type = msg\n        if (msg === \"services\") {\n            operatingContent.amount = -1\n            operatingContent.brand = \"\"\n        }\n        if (msg === \"products\") {\n            operatingContent.amount = 0\n            operatingContent.brand = \"\"\n        }\n        this.setState({contents: contents})\n        console.log(operatingContent)\n        console.log(msg, label)\n    }\n\n    handleChange = (e) => {\n        let rowId = e.target.parentElement.parentElement.getAttribute(\"idx\")\n        let columnId = e.target.getAttribute(\"name\")\n        let value = e.target.value\n        let {contents} = this.state\n        if (contents.length === 0) {\n            contents = this.props.contents\n        }\n        console.log(contents)\n        contents[rowId][columnId] = value\n        this.setState({contents: contents})\n    }\n\n    render() {\n        const {fields, keys, contents} = this.props\n        const {alert, idxIsLoading} = this.state\n        return (\n            <div>\n                <div className=\"form-row\">\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}\n                             alertId=\"alert-my-table\"></MyAlert>\n                </div>\n                <Table hover responsive>\n                    <thead>\n                    <tr className=\"thead-dark text-center\">\n                        {\n                            fields.map(\n                                (item, idx) => (\n                                    <th key={idx} width={`${100 / fields.length}%`}>{item}</th>\n                                )\n                            )\n                        }\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        contents.map((item, idx) => (\n                            <tr key={idx} idx={idx}>\n                                {\n                                    keys.map((key, subIdx) => (\n                                        <td key={subIdx} className=\"text-center\">\n                                            {\n                                                key === \"type\"\n                                                    ?\n                                                    <MyDropdown\n                                                        label={idx}\n                                                        transferMsg={(msg, label) => this.handleDropDownChange(msg, label)}\n                                                        data={[\"products\", \"services\"]} value={item[key]}\n                                                        invisibleLabel={true} control={true}></MyDropdown>\n                                                    :\n                                                    <input\n                                                        type={key === \"amount\" || key === \"price\" ? \"number\" : \"text\"}\n                                                        className=\"form-control\" name={key}\n                                                        value={item[key]}\n                                                        disabled={(item[\"type\"] === \"services\" && item[key] === \"\") || item[key] === -1 || idxIsLoading.indexOf(idx) > -1}\n                                                        onChange={this.handleChange}/>\n                                            }\n                                        </td>\n                                    ))\n                                }\n                                <td className=\"text-center\">\n                                    <button type=\"button\" className=\"btn btn-primary\" style={{marginRight: \"20px\"}}\n                                            name=\"update\"\n                                            disabled={idxIsLoading.indexOf(idx) > -1 ? true : false}\n                                            onClick={this.handleClick}>\n                                        <span\n                                            className={`spinner-border spinner-border-sm fade ${idxIsLoading.indexOf(idx) > -1 ? \"show\" : \"d-none\"}`}\n                                            role=\"status\" aria-hidden=\"true\"\n                                            style={{right: \"5px\", position: \"relative\"}}></span>\n                                        {\n                                            idxIsLoading.indexOf(idx) > -1 ? \"Loading...\" : \"Update\"\n                                        }\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-danger\" style={{marginRight: \"20px\"}}\n                                            name=\"delete\"\n                                            disabled={idxIsLoading.indexOf(idx) > -1 ? true : false}\n                                            onClick={this.handleClick}>\n                                        <span\n                                            className={`spinner-border spinner-border-sm fade ${idxIsLoading.indexOf(idx) > -1 ? \"show\" : \"d-none\"}`}\n                                            role=\"status\" aria-hidden=\"true\"\n                                            style={{right: \"5px\", position: \"relative\"}}></span>\n                                        {\n                                            idxIsLoading.indexOf(idx) > -1 ? \"Loading...\" : \"Delete\"\n                                        }\n                                    </button>\n                                </td>\n                            </tr>\n                        ))\n                    }\n                    </tbody>\n                </Table>\n            </div>\n\n\n        )\n    }\n}","import React from 'react';\nimport CardFormWrapperCustomers from \"./card-form-wrapper-customers\";\n// import {CarTable} from './table'\nimport {MyTable} from \"../common/my-table\";\nimport {requestCustomersQuery} from \"../../api\";\nimport MyPagination from \"../common/my-pagination\";\nimport MySpinner from \"../common/my-spinner\";\n\nclass PageCustomer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cardTitle: \"Add a new customer record\",\n            fields: [\"Name\", \"Phone\", \"Email\", \"Action\"],\n            keys: [\"name\", \"phone\", \"email\"],\n            customers: [],\n            currentPageCount: 1,\n            customersCount: 1,\n            isLoading: true\n        }\n    }\n\n    // fromTableToParent = (idx, action) => {\n    //     switch (action) {\n    //         case \"edit\":\n    //             break\n    //         case \"delete\":\n    //             break\n    //         default:\n    //             break\n    //     }\n    //     console.log(this.state.customers[idx])\n    //     console.log(idx, action)\n    // }\n\n    fromWrapperToParent = async (data) => {\n        // let tmp = this.state.items\n        // tmp.unshift(item)\n        // for (let i=10;i<tmp.length;i++) {\n        //     tmp.remove(i)\n        // }\n        // this.setState({...this.state, items: tmp})\n        await this.requestData(this.state.currentPageCount)\n    }\n\n    transferMsgFromPagination = async (msg) => {\n        this.setState({isLoading: true})\n        msg = parseInt(msg)\n        await this.requestData(msg)\n        this.setState({currentPageCount: msg})\n    }\n\n    requestData = async (pageCount) => {\n        this.setState({isLoading: true})\n        requestCustomersQuery({currentPageCount: pageCount}).then((r) => {\n            if (r.data.err_code === 0) {\n                this.setState({\n                    customers: r.data.customers,\n                    customersCount: r.data.customersCount,\n                    isLoading: false\n                })\n            }\n        }).catch((err) => {\n            console.log(err)\n            this.setState({\n                isLoading: false\n            })\n        })\n    }\n\n    async componentDidMount() {\n        await this.requestData(this.state.currentPageCount)\n    }\n\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <MySpinner isLoading={this.state.isLoading}></MySpinner>\n                <CardFormWrapperCustomers\n                    cardTitle={this.state.cardTitle}\n                    fromWrapperToParent={(data) => this.fromWrapperToParent(data)}>\n                </CardFormWrapperCustomers>\n                <br/>\n\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <MyTable\n                            tableRole=\"customers\"\n                            // fromTableToParent={(idx, action) => this.fromTableToParent(idx, action)}\n                            fields={this.state.fields}\n                            keys={this.state.keys}\n                            contents={this.state.customers}>\n                        </MyTable>\n                        <br/>\n                        <div className=\"row\">\n                            <MyPagination transferMsg={(msg, label) => this.transferMsgFromPagination(msg, label)}\n                                          dataPerPage={10} currentPageCount={this.state.currentPageCount}\n                                          dataCount={this.state.customersCount}></MyPagination>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PageCustomer;","import React from \"react\";\nimport {Form, Button} from \"react-bootstrap\";\nimport {MyDropdown} from \"../common/my-dropdown\";\nimport MyAlert from \"../common/my-alert\";\nimport {requestItemInsert} from \"../../api\";\n\nclass FormAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userInput: {\n                name: \"\",\n                type: \"products\",\n                brand: \"\",\n                amount: \"\",\n                price: \"\"\n            },\n            isLoading: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        };\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        const key = e.target.getAttribute('name');\n        let tmp = this.state.userInput\n        tmp[key] = value\n        this.setState({...this.state, userInput: tmp})\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        // const {name, type, brand, amount, price} = this.state.userInput\n        const {userInput, alert} = this.state\n        // let validation = false\n        // switch (userInput.type) {\n        //     case \"products\":\n        //         if (userInput.name === \"\" || userInput.type === \"\" || userInput.brand === \"\" || userInput.amount === \"\" || userInput.price === \"\") {\n        //             validation = false\n        //         } else {\n        //             validation = true\n        //         }\n        //         break\n        //     case \"services\":\n        //         if (userInput.name === \"\" || userInput.type === \"\" || userInput.price === \"\") {\n        //             validation = false\n        //         } else {\n        //             validation = true\n        //         }\n        //         break\n        //     default:\n        //         break\n        // }\n        //\n        // if (!validation) {\n        //     let {alert} = this.state\n        //     alert.type = \"warning\"\n        //     alert.value = \"One or more required fields are empty\"\n        //     alert.timeStamp = Date.now()\n        //     this.setState({...this.state, alert: alert})\n        //     return\n        // }\n        for (let key in userInput) {\n            if (key===\"brand\" && userInput.type === \"services\") {\n                continue\n            }\n            if (!userInput[key] && userInput.type === \"products\") {\n                this.informAlert(\"One or more required fields are empty\")\n                return\n            }\n        }\n        if (userInput.type === \"products\") {\n        }\n        this.setState({isLoading: true})\n        requestItemInsert(this.state.userInput).then(r => {\n            this.setState({isLoading: false})\n            // insert suc\n            if (r.data.err_code === 0) {\n                // amount: -1\n                // brand: \"\"\n                // name: \"ubkhi\"\n                // price: 130\n                // type: \"services\"\n                // __v: 0\n                // _id: \"5f919134bf5afef228ea252b\"\n                this.props.fromFormToParent(userInput)\n                userInput.name = \"\"\n                userInput.brand = \"\"\n                userInput.amount = \"\"\n                userInput.price = \"\"\n                alert.type = \"success\"\n                alert.value = \"Insert success\"\n                alert.timeStamp = Date.now()\n                this.setState({...this.state, userInput: userInput, isLoading: false, alert: alert})\n            } else {\n                alert.type = \"danger\"\n                alert.value = `Insert fail ${r.data.message}`\n                alert.timeStamp = Date.now()\n                this.setState({...this.state, isLoading: false, alert: alert})\n            }\n            console.log(this.state)\n            console.log(r)\n        })\n    }\n\n    transferMsg = (msg, label) => {\n        let tmp = this.state.userInput\n        tmp[label] = msg\n        if (msg === \"services\") {\n            tmp[\"brand\"] = \"\"\n            tmp[\"amount\"] = -1\n        }\n        this.setState({...this.state, userInput: tmp})\n    }\n\n    render() {\n        const {isLoading, userInput, alert} = this.state\n        return (\n            <Form>\n                <Form.Row>\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Name</Form.Label>\n                        <input type=\"text\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"name\" value={userInput.name}></input>\n                    </div>\n\n                    <MyDropdown transferMsg={(msg, label) => this.transferMsg(msg, label)}\n                                data={[\"products\", \"services\"]} label=\"type\" value={userInput.type}></MyDropdown>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Brand</Form.Label>\n                        <fieldset disabled={userInput.type === \"products\" ? false : true}>\n                            <input type=\"text\" className=\"form-control\"\n                                   style={{textAlign: \"left\", transition: \"all .3s\"}} onChange={this.handleChange}\n                                   name=\"brand\" value={userInput.brand}></input>\n                        </fieldset>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Amount</Form.Label>\n                        <fieldset disabled={userInput.type === \"products\" ? false : true}>\n                            <input type=\"number\" className=\"form-control\"\n                                   style={{textAlign: \"left\", transition: \"all .3s\"}} onChange={this.handleChange}\n                                   name=\"amount\" value={userInput.amount}></input>\n                        </fieldset>\n                    </div>\n\n                    <div className=\"col-6 col-md-3\">\n                        <Form.Label>Price</Form.Label>\n                        <input type=\"number\" className=\"form-control\" style={{textAlign: \"left\"}}\n                               onChange={this.handleChange} name=\"price\" value={userInput.price}></input>\n                    </div>\n\n                    <div className=\"col-6 col-md-1\">\n                        <Button variant=\"primary\" type=\"submit\" style={{top: \"30px\", position: \"relative\"}}\n                                disabled={isLoading ? true : false}\n                                onClick={this.handleClick}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}></span>\n                            {\n                                isLoading ? \"Loading...\" : \"Submit\"\n                            }\n                        </Button>\n                        {/*<button className=\"btn btn-primary\" type=\"button\" disabled>*/}\n                        {/*    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>*/}\n                        {/*    Loading...*/}\n                        {/*</button>*/}\n                    </div>\n                </Form.Row>\n                <br/>\n                <Form.Row>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp} alertId=\"alert-items-form\"></MyAlert>\n                </Form.Row>\n            </Form>\n        )\n    }\n}\n\nexport default FormAdd;","import React from \"react\";\nimport FormAdd from \"./form-add\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\n\nclass CardFormWrapperItems extends React.Component {\n\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    fromFormToParent = (item) => {\n        this.props.fromWrapperToParent(item)\n    }\n\n    render() {\n        return(\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick} style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new products/services record</h5>\n                <Card.Body>\n                    <FormAdd fromFormToParent={(item) => this.fromFormToParent(item)}></FormAdd>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default CardFormWrapperItems;","import React from \"react\";\nimport CardFormWrapperItems from \"./card-form-wrapper-items\";\nimport {MyTable} from \"../common/my-table\";\nimport {requestItemsQuery} from \"../../api\";\nimport MySpinner from \"../common/my-spinner\";\nimport MyPagination from \"../common/my-pagination\";\n\nclass PageItems extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: [\"Name\", \"Type\", \"Brand\", \"Amount\", \"Price\", \"Action\"],\n            keys: [\"name\", \"type\", \"brand\", \"amount\", \"price\"],\n            items: [],\n            currentPageCount: 1,\n            itemsCount: 1,\n            isLoading: true\n        }\n    }\n\n    fromWrapperToParent = async (item) => {\n        // let tmp = this.state.items\n        // tmp.unshift(item)\n        // for (let i=10;i<tmp.length;i++) {\n        //     tmp.remove(i)\n        // }\n        // this.setState({...this.state, items: tmp})\n        await this.requestData(this.state.currentPageCount)\n    }\n\n    transferMsgFromPagination = async (msg) => {\n        msg = parseInt(msg)\n        await this.requestData(msg)\n        this.setState({currentPageCount: msg})\n    }\n\n    requestData = async (pageCount) => {\n        this.setState({isLoading: true})\n        requestItemsQuery({currentPageCount: pageCount}).then((r) => {\n            if (r.data.err_code === 0) {\n                this.setState({\n                    items: r.data.items,\n                    itemsCount: r.data.itemsCount,\n                    isLoading: false\n                })\n            }\n        }).catch((err) => {\n            this.setState({\n                isLoading: false\n            })\n            console.log(err)\n        })\n    }\n\n    async componentDidMount() {\n        await this.requestData()\n    }\n\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <MySpinner isLoading={this.state.isLoading}></MySpinner>\n                <CardFormWrapperItems\n                    fromWrapperToParent={(item) => this.fromWrapperToParent(item)}>\n                </CardFormWrapperItems>\n                <br/>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <MyTable\n                            tableRole=\"items\"\n                            fields={this.state.fields}\n                            contents={this.state.items}\n                            keys={this.state.keys}\n                        ></MyTable>\n                        <div className=\"row\">\n                            <MyPagination fromPaginationToParent={(msg) => this.transferMsgFromPagination(msg)}\n                                          dataPerPage={10}\n                                          currentPageCount={this.state.currentPageCount}\n                                          dataCount={this.state.itemsCount}></MyPagination>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PageItems;","import React from \"react\";\nimport {MyDropdown} from \"../common/my-dropdown\";\nimport {connect} from 'react-redux'\n\nclass PreRowContent extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(this.props.userInput)\n        this.state = {\n            idx: this.props.rowIdx,\n            oriAmount: parseInt(this.props.userInput[4]),\n            userInput: this.props.userInput\n        }\n    }\n\n    handleDropDownChange = (msg, label) => {\n        let index\n        let {userInput} = this.props\n        let preMsg = [...this.props.userInput]\n        switch (label) {\n            case \"type\":\n                index = 0\n                break\n            case \"items\":\n                index = 1\n                // let items\n                // if (this.state.userInput[0] === \"products\") {\n                //     items = this.props.productsItems\n                // } else {\n                //     items = this.props.servicesItems\n                // }\n                // userInput[2] = items[msg].price ? items[msg].price : 0\n                // userInput[3] = 1\n                break\n            default:\n                break\n        }\n        userInput[index] = msg\n        if (index === 0 && msg !== preMsg[0]) {\n            if (msg === \"products\") {\n                userInput[1] = this.props.productsName[0]\n                // userInput[2] = this.props.productsItems[userInput[1]].price ? this.props.productsItems[userInput[1]].price : 0\n                // userInput[3] = this.props.productsItems[userInput[1]].amount\n                // console.log(userInput)\n            } else {\n                userInput[1] = this.props.servicesName[0]\n                // userInput[2] = this.props.servicesItems[userInput[1]].price ? this.props.servicesItems[userInput[1]].price : 0\n                // console.log(userInput)\n            }\n        }\n        // userInput[3] = 0\n        // userInput[4] = this.state.oriAmount\n        // userInput[5] = parseInt(userInput[2]) * parseInt(userInput[3])\n        // this.setState({\n        //     userInput: userInput\n        // })\n        this.props.transferMsg(preMsg, userInput, this.state.idx)\n    }\n\n    handleChange = (e) => {\n        let {value} = e.target\n        if (value < 0) {\n            return\n        }\n        if (!value) {\n            return\n        }\n        let preMsg = [...this.props.userInput]\n        const key = e.target.getAttribute('name');\n        let {userInput} = this.props\n        console.log(userInput)\n        console.log(userInput[3], userInput[6])\n        if (value > userInput[6] && userInput[0] === \"products\") {\n            return\n        }\n        switch (key) {\n            case \"amount\":\n                userInput[3] = value\n                if (userInput[0]===\"products\") {\n                    // 这里要用原剩余数量减\n                    console.log(userInput[3], userInput[4], userInput[6])\n                    userInput[4] = parseInt(userInput[6])- parseInt(userInput[3])\n                }\n                break\n            default:\n                break\n        }\n        userInput[5] = parseInt(userInput[2]) * parseInt(userInput[3])\n        // this.setState({\n        //     userInput: userInput\n        // })\n        console.log(preMsg)\n        console.log(userInput)\n        this.props.transferMsg(preMsg, userInput, this.state.idx)\n    }\n\n    handleClick = () => {\n        this.props.fromPreRowContentToParent(this.state.idx)\n    }\n\n    render() {\n        let {type, productsName, servicesName} = this.props\n        let {userInput} = this.props\n        console.log(userInput)\n        return(\n            <tr>\n                <td>\n                    <MyDropdown transferMsg={(msg, label) => this.handleDropDownChange(msg, label)} data={type} label=\"type\" value={userInput[0]} invisibleLabel={true} control={true}></MyDropdown>\n                </td>\n                <td>\n                    <MyDropdown transferMsg={(msg, label) => this.handleDropDownChange(msg, label)} data={userInput[0] === \"products\" ? productsName : servicesName} label=\"items\" value={userInput[1]} invisibleLabel={true} control={true}></MyDropdown>\n                </td>\n                <td>\n                    {userInput[2]}\n                </td>\n                <td>\n                    <input type=\"number\" className=\"form-control\" style={{textAlign: \"left\"}} onChange={this.handleChange} name=\"amount\" value={userInput[3]}></input>\n                </td>\n                <td>\n                    {userInput[4]}\n                    {/*<span name=\"remainingAmount\">*/}\n                    {/*    */}\n                    {/*</span>*/}\n                </td>\n                <td>\n                    {userInput[5]}\n                </td>\n                <td>\n                    <button type=\"button\" className=\"btn btn-outline-warning\" onClick={this.handleClick}>Remove</button>\n                </td>\n            </tr>\n        )\n    }\n}\n\nexport default connect(\n    state => ({items: state.items}),\n    {}\n)(PreRowContent)","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport PreRowContent from \"./preRowContent\";\nimport MyAlert from \"../common/my-alert\";\nimport {requestItemsQuery, requestSalesInsert} from \"../../api\";\nimport MySpinner from \"../common/my-spinner\";\nimport {connect} from 'react-redux'\nimport {initItemsData} from \"../../redux/action\";\n\nclass TableAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: [\"Type\", \"Item\", \"Unit Price\", \"Amount\", \"Remaining Amount\", \"Total\", \"Action\"],\n            type: [\"products\", \"services\"],\n            productsName: [],\n            servicesName: [],\n            // {name: [price, stock]}\n            products: {},\n            services: {},\n            userInput: [],\n            isLoading: false,\n            isDisableButton: false,\n            isVAT: false,\n            gross: 0,\n            VAT: 0,\n            totalPrice: 0,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true})\n        requestItemsQuery({currentPageCount: 0}).then((r) => {\n            let {data} = r\n            if (data.err_code === 0) {\n                // let {products, services, productsName, servicesName} = this.state\n                let products = {}, services = {}, productsName = [], servicesName = []\n                for (let i = 0; i < data.items.length; i++) {\n                    if (data.items[i].type === \"products\") {\n                        productsName.push(data.items[i].name)\n                        products[data.items[i].name] = {\n                            amount: data.items[i].amount,\n                            id: data.items[i]._id,\n                            brand: data.items[i].brand,\n                            price: data.items[i].price\n                        }\n                    } else {\n                        servicesName.push(data.items[i].name)\n                        services[data.items[i].name] = {\n                            amount: data.items[i].amount,\n                            id: data.items[i]._id,\n                            brand: data.items[i].brand,\n                            price: data.items[i].price\n                        }\n                    }\n                }\n                this.props.initItemsData({\n                    products: products,\n                    services: services,\n                    productsName: productsName,\n                    servicesName: servicesName\n                })\n                this.setState({\n                    products: products,\n                    services: services,\n                    productsName: productsName,\n                    servicesName: servicesName,\n                    isLoading: false\n                })\n            }\n        }).catch((err) => {\n            this.informAlert(`Request data fail ${err}`, \"danger\")\n            this.setState({\n                isDisableButton: true,\n                isLoading: false\n            })\n            console.log(err)\n        })\n    }\n\n    componentWillUnmount = () => {\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    rollBackArray = (name, value) => {\n        let itemsArr\n        if (this.state.productsName.length === 0 && this.state.servicesName.length === 0) {\n            this.setState({isDisableButton: false})\n        }\n        switch (name) {\n            case \"products\":\n                itemsArr = this.state.productsName\n                if (itemsArr.length === 0) {\n                    let {type} = this.state\n                    type.unshift(\"products\")\n                }\n                itemsArr.push(value)\n                itemsArr = itemsArr.sort()\n                this.setState({productsName: itemsArr})\n                break;\n            case \"services\":\n                itemsArr = this.state.servicesName\n                if (itemsArr.length === 0) {\n                    let {type} = this.state\n                    type.push(\"services\")\n                }\n                itemsArr.push(value)\n                itemsArr = itemsArr.sort()\n                this.setState({servicesName: itemsArr})\n                break;\n            default:\n                break;\n        }\n    }\n\n    filterTheArray = (name, value) => {\n        let arr\n        let {productsName, servicesName, type} = this.state\n        switch (name) {\n            case \"products\":\n                arr = productsName.filter(name => name !== value)\n                if (arr.length === 0) {\n                    this.setState({type: type.filter(name => name !== \"products\")})\n                }\n                if (type.length === 1 && servicesName.length !== 0) {\n                    type.push(\"services\")\n                    this.setState({type: type})\n                }\n                this.setState({productsName: arr})\n                break;\n            case \"services\":\n                arr = servicesName.filter(name => name !== value)\n                if (arr.length === 0) {\n                    this.setState({type: type.filter(name => name !== \"services\")})\n                }\n                if (type.length === 1 && productsName.length !== 0) {\n                    type.unshift(\"products\")\n                    this.setState({type: type})\n                }\n                this.setState({servicesName: arr})\n                break;\n            default:\n                break;\n        }\n        if ((productsName.length === 1 && servicesName.length === 0) || (productsName.length === 0 && servicesName.length === 1)) {\n            this.setState({\n                isDisableButton: true\n            })\n        }\n    }\n\n    handleClick = () => {\n        let {userInput, productsName, servicesName, products, services} = this.state\n        let type\n\n        let name\n        let remainingAmount\n        let price\n        if (productsName.length !== 0) {\n            type = \"products\"\n            name = productsName[0] ? productsName[0] : \"\"\n            remainingAmount = products[name].amount ? products[name].amount : 0\n            price = products[name].price ? products[name].price : 0\n        } else if (servicesName.length !== 0) {\n            type = \"services\"\n            name = servicesName[0] ? servicesName[0] : \"\"\n            remainingAmount = services[name].amount ? services[name].amount : 0\n            price = services[name].price ? services[name].price : 0\n        } else {\n            return\n        }\n        // 6: totalAmount\n        userInput.push([type, name, price, 0, remainingAmount, price * 0, remainingAmount])\n        this.filterTheArray(type, name)\n        let arr = this.calculateTotalPrice(userInput, this.state.isVAT)\n        this.setState({\n            userInput: userInput,\n            gross: arr[0],\n            VAT: arr[1],\n            totalPrice: arr[2]\n        })\n    }\n\n    handleSubmit = () => {\n        let itemsId = \"\",\n            itemsName = \"\",\n            amount = \"\",\n            remainingAmount = \"\"\n        let {userInput, products, services, totalPrice} = this.state\n        if (userInput.length === 0) {\n            this.informAlert(\"The form is empty\")\n            return\n        }\n        for (let i = 0; i < userInput.length; i++) {\n            if (userInput[i][3] === 0) {\n                this.informAlert(\"The amount should be at least 1\")\n                return\n            }\n            switch (userInput[i][0]) {\n                case \"products\":\n                    itemsId += `${products[userInput[i][1]].id},`\n                    itemsName += `${userInput[i][1]},`\n                    break\n                case \"services\":\n                    itemsId += `${services[userInput[i][1]].id},`\n                    itemsName += `${userInput[i][1]},`\n                    break\n                default:\n                    this.informAlert(\"Please check your data\")\n                    return\n            }\n            amount += `${[userInput[i][3]]},`\n            remainingAmount += `${[userInput[i][4]]},`\n        }\n        itemsId = itemsId.substring(0, itemsId.length - 1)\n        itemsName = itemsName.substring(0, itemsName.length - 1)\n        remainingAmount = remainingAmount.substring(0, remainingAmount.length - 1)\n        amount = amount.substring(0, amount.length - 1)\n        let sales = {\n            itemsId, itemsName, amount, remainingAmount, totalPrice\n        }\n        console.log(sales)\n        this.setState({isLoading: true})\n        requestSalesInsert(sales).then((r) => {\n            if (r.data.err_code === 0) {\n                this.informAlert(\"Insert success\", \"success\")\n                let {userInput} = this.state\n                for (let i = 0; i < userInput.length; i++) {\n                    this.rollBackArray(userInput[i][0], userInput[i][1])\n                }\n                userInput.splice(0, userInput.length)\n                this.setState({userInput: userInput, gross: 0, VAT: 0, totalPrice: 0,})\n            } else {\n                // 服务器返回错误\n                this.informAlert(\"Insert fail\", \"danger\")\n            }\n            this.componentDidMount()\n            this.setState({isLoading: false})\n        }).catch((err) => {\n            this.informAlert(`Insert fail ${err}`, \"danger\")\n            this.setState({isLoading: false})\n            console.log(err)\n        })\n    }\n\n    handleChange = (e) => {\n        let isVAT = e.target.checked\n        this.setState(prevState => {\n            let tmp = Object.assign({}, prevState);\n            let arr = this.calculateTotalPrice(tmp[\"userInput\"], isVAT)\n            tmp[\"isVAT\"] = isVAT\n            tmp[\"gross\"] = arr[0]\n            tmp[\"VAT\"] = arr[1]\n            tmp[\"totalPrice\"] = arr[2]\n            return tmp;\n        })\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    transferMsg = (preMsg, newMsg, idx) => {\n        let {userInput, products, services} = this.state\n        let type = newMsg[0]\n        // let name = newMsg[1]\n        let item\n        switch (type) {\n            case \"products\":\n                item = products\n                break\n            case \"services\":\n                item = services\n                break\n            default:\n                break\n        }\n        // 接收type和name更新对应的userInput[idx]\n        // 情况一：数量值更新\n        userInput[idx][0] = newMsg[0]\n        userInput[idx][1] = newMsg[1]\n        if (preMsg[0] === newMsg[0] && preMsg[1] === newMsg[1]) {\n            console.log(newMsg)\n            userInput[idx][2] = newMsg[2]\n            userInput[idx][3] = newMsg[3]\n            userInput[idx][4] = newMsg[4]\n            userInput[idx][5] = newMsg[5]\n            userInput[idx][6] = newMsg[6]\n        } else {\n            // 情况二：下拉更新\n            // Unit Price\tAmount\tRemaining Amount\tTotal\n            userInput[idx][2] = item[newMsg[1]].price\n            userInput[idx][3] = 0\n            userInput[idx][4] = item[newMsg[1]].amount\n            userInput[idx][5] = item[newMsg[1]].price * 0\n            userInput[idx][6] = item[newMsg[1]].amount\n            // roll back\n            this.rollBackArray(preMsg[0], preMsg[1])\n            // filter\n            this.filterTheArray(newMsg[0], newMsg[1])\n        }\n        let arr = this.calculateTotalPrice(userInput, this.state.isVAT)\n        this.setState({\n            userInput: userInput,\n            gross: arr[0],\n            VAT: arr[1],\n            totalPrice: arr[2]\n        })\n    }\n\n    fromPreRowContentToParent = (idx) => {\n        let {userInput} = this.state\n        this.rollBackArray(userInput[idx][0], userInput[idx][1])\n        userInput.splice(idx, 1)\n        console.log(userInput)\n        if (userInput.length === 0) {\n            this.setState({gross: 0, VAT: 0, totalPrice: 0,})\n        }\n        this.setState({userInput: userInput})\n    }\n\n    calculateTotalPrice = (arr, isVAT) => {\n        let totalPrice = 0;\n        let VAT;\n        arr.map((item) => {\n            totalPrice += parseFloat(item[5])\n        })\n        if (isVAT) {\n            VAT = (totalPrice / 107) * 7\n            return [(totalPrice - VAT).toFixed(2), VAT.toFixed(2), totalPrice.toFixed(2)]\n        }\n        return [totalPrice.toFixed(2), 0, totalPrice.toFixed(2)]\n    }\n\n    render() {\n        let {userInput, gross, VAT, totalPrice, isDisableButton, isLoading, alert} = this.state\n        return (\n            <div>\n                <MySpinner isLoading={isLoading}></MySpinner>\n                <div className=\"text-right\">\n                    <button type=\"button\" className=\"btn btn-light\" style={{marginRight: \"20px\"}}>SAVE&PRINT</button>\n                    <button className=\"btn btn-dark\" type=\"submit\" style={{position: \"relative\"}}\n                            disabled={isLoading ? true : false}\n                            onClick={this.handleSubmit}>\n                            <span className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                  role=\"status\" aria-hidden=\"true\" style={{right: \"5px\", position: \"relative\"}}></span>\n                        {\n                            isLoading ? \"Loading...\" : \"SAVE\"\n                        }\n                    </button>\n                </div>\n                <br/>\n                <Table hover responsive>\n                    <thead>\n                    <tr className=\"thead-dark\">\n                        {\n                            this.state.fields.map(\n                                (item, idx) => (\n                                    <th key={idx} style={{width: \"14.2%\"}}>{item}</th>\n                                )\n                            )\n                        }\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        userInput.map(\n                            (item, idx) => (\n                                <PreRowContent key={idx} rowIdx={idx}\n                                               transferMsg={(preMsg, newMsg, idx) => this.transferMsg(preMsg, newMsg, idx)}\n                                               fromPreRowContentToParent={(idx) => this.fromPreRowContentToParent(idx)}\n                                               type={this.state.type}\n                                               productsName={this.state.productsName}\n                                               servicesName={this.state.servicesName}\n                                               productsItems={this.state.products}\n                                               servicesItems={this.state.services}\n                                               userInput={item}></PreRowContent>\n                            )\n                        )\n                    }\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"6\" className=\"text-right\">Gross:</td>\n                        <td>{gross}</td>\n                    </tr>\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"6\" className=\"text-right\">\n                            <input type=\"checkbox\" style={{marginRight: \"10px\"}} onChange={this.handleChange}/>\n                            VAT:\n                        </td>\n                        <td>{VAT}</td>\n                    </tr>\n                    <tr className=\"table-secondary\">\n                        <td colSpan=\"6\" className=\"text-right\">Total Price:</td>\n                        <td>{totalPrice}</td>\n                    </tr>\n                    </tbody>\n                </Table>\n                <div>\n                    <button type=\"button\" className=\"btn btn-primary\" disabled={isDisableButton}\n                            onClick={this.handleClick}>Add a new row\n                    </button>\n                </div>\n                <br/>\n                <div>\n                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}\n                             alertId=\"alert-table-add\"></MyAlert>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({items: state.items}),\n    {initItemsData}\n)(TableAdd)","import React from \"react\";\nimport {Card} from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport TableAdd from \"./table-add\";\n\nexport default class CardFormWrapperSales extends React.Component {\n\n    handleClick = (e) => {\n        $(e.target.nextElementSibling).slideToggle();\n        $(\"#i-angle\").toggleClass(\"rotate-open\");\n    }\n\n    render() {\n        return (\n            <Card>\n                <i id=\"i-angle\" className=\"rotate-open\"></i>\n                <h5 className=\"card-header\" onClick={this.handleClick}\n                    style={{cursor: \"pointer\"}}>&nbsp;&nbsp;&nbsp;&nbsp;Add a new sales record</h5>\n                <Card.Body>\n                    <TableAdd></TableAdd>\n                </Card.Body>\n            </Card>\n        );\n    }\n}","import React from \"react\";\nimport CardFormWrapperSales from \"./card-form-wrapper-sales\";\n// import Header from \"../header/header\";\n\nexport default class PageSales extends React.Component {\n    render() {\n        return (\n            <div style={{padding: \"30px\"}}>\n                <CardFormWrapperSales></CardFormWrapperSales>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport './App.css'\nimport Header from './components/header/header'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport PageCars from \"./components/cars/page-cars\"\nimport PageCustomer from \"./components/customers/page-customers\"\nimport PageItems from \"./components/items/page-items\"\nimport PageSales from \"./components/sales/page-sales\"\nimport {connect} from 'react-redux'\nimport storageUtils from \"./utils/storageUtils\"\n\nclass App extends React.Component {\n\n    render() {\n        const {user} = this.props.user\n        let userid = user ? user._id : storageUtils.getUserId()\n        if (!userid) {\n            return <Redirect to='/login'/>\n        }\n        return (\n            <div className=\"main\">\n                <Header/>\n                <Switch>\n                    {/*<DefaultRoute handler={PageSales}/>*/}\n                    <Route path='/sales' component={PageSales}/>\n                    <Route path='/sales_report' component={PageSales}/>\n                    <Route path='/cars' component={PageCars}/>\n                    <Route path='/customers' component={PageCustomer}/>\n                    <Route path='/items' component={PageItems}/>\n                    <Redirect to='/sales'/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({user: state.user}),\n    {}\n)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport {login} from \"../redux/action\"\nimport {Button} from \"react-bootstrap\";\nimport {connect} from 'react-redux'\nimport MyAlert from \"../components/common/my-alert\";\nimport storageUtils from \"../utils/storageUtils\"\nimport {Redirect} from 'react-router-dom'\n\n// import {Redirect} from 'react-router-dom'\n\nclass PageLogin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: \"\",\n            username: \"\",\n            password: \"\",\n            isChecked: false,\n            isLoading: false,\n            alert: {\n                type: \"success\",\n                value: \"success\",\n                timeStamp: Date.now()\n            }\n        }\n    }\n\n    componentWillUnmount = () => {\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    informAlert = (value, type) => {\n        let {alert} = this.state\n        alert.type = type ? type : \"warning\"\n        alert.value = value ? value : \"Error\"\n        alert.timeStamp = Date.now()\n        this.setState({alert: alert})\n    }\n\n    handleChange = (e) => {\n        let key = e.target.getAttribute(\"name\")\n        let value = e.target.value\n        if (key === \"isChecked\") {\n            value = this.state.isChecked ? false : true\n        }\n        this.setState({[key]: value})\n    }\n\n    handleClick = async (e) => {\n        e.preventDefault()\n        if (e.target.getAttribute(\"name\") === \"guest\") {\n            await this.setState({username: \"guest\", password: \"00000000\"})\n        }\n        const {username, password} = this.state\n        if (!username || !password) {\n            this.informAlert(\"One or more required fields are empty\")\n            return\n        }\n        this.setState({isLoading: true})\n        // 发请求redux更新user\n        await this.props.login(this.state)\n        // 读取新的props.user\n        const {user} = this.props\n        // err_code: 1\n        // message: \"Username or password is wrong\"\n        console.log(user)\n        if (user.err_code === 0) {\n            let {isChecked} = this.state\n            if (isChecked) {\n                storageUtils.saveUserId(user.user._id)\n            }\n            this.informAlert(\"Login success\", \"success\")\n            this.props.history.replace('/')\n        } else {\n            this.informAlert(`Login fail ${user.message}`, \"danger\")\n        }\n        this.setState({isLoading: false})\n    }\n\n    enterTriggerSearch = async (e) => {\n        if(e.keyCode === 13) {\n            await this.handleClick(e)\n        }\n    }\n\n    render() {\n        const {isLoading, alert} = this.state\n        const {user} = this.props.user\n        let userid = user ? user._id : storageUtils.getUserId()\n        if (userid) {\n            return <Redirect to='/sales'/>\n        }\n        return (\n            <div className=\"container\" style={{marginTop: \"200px\"}}>\n                <div className=\"card text-center\">\n                    <div className=\"card-header\">\n                        Login\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"container\">\n                            <div className=\"panel panel-default\">\n                                <div className=\"panel-heading\">\n                                    <h3 className=\"panel-title\">Please login</h3>\n                                </div>\n                                <div className=\"panel-body\">\n                                    <fieldset>\n                                        <div className=\"form-group\">\n                                            <input className=\"form-control\" placeholder=\"Username\" name=\"username\"\n                                                   disabled={isLoading}\n                                                   type=\"text\" value={this.state.username}\n                                                   onChange={this.handleChange}/>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <input className=\"form-control\" placeholder=\"Password\" name=\"password\"\n                                                   disabled={isLoading}\n                                                   type=\"password\" value={this.state.password}\n                                                   onChange={this.handleChange}\n                                                   onKeyUp={this.enterTriggerSearch}\n                                            />\n                                        </div>\n                                        <div className=\"checkbox\">\n                                            <label>\n                                                <input name=\"isChecked\" type=\"checkbox\" checked={this.state.isChecked}\n                                                       disabled={isLoading}\n                                                       onChange={this.handleChange} value=\"Remember Me\"/> Remember Me\n                                            </label>\n                                        </div>\n                                        <Button className=\"btn btn-lg btn-block\" variant=\"primary\" type=\"submit\"\n                                                name=\"login\"\n                                                style={{position: \"relative\"}}\n                                                disabled={isLoading ? true : false}\n                                                onClick={this.handleClick}>\n                                            <span\n                                                className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                                role=\"status\" aria-hidden=\"true\"\n                                                style={{right: \"5px\", position: \"relative\"}}></span>\n                                            {\n                                                isLoading ? \"Loading...\" : \"Login\"\n                                            }\n                                        </Button>\n                                        <Button className=\"btn btn-lg btn-block\" variant=\"success\" type=\"submit\"\n                                                name=\"guest\"\n                                                style={{position: \"relative\"}}\n                                                disabled={isLoading ? true : false}\n                                                onClick={this.handleClick}>\n                                            <span\n                                                className={`spinner-border spinner-border-sm fade ${isLoading ? \"show\" : \"d-none\"}`}\n                                                role=\"status\" aria-hidden=\"true\"\n                                                style={{right: \"5px\", position: \"relative\"}}></span>\n                                            {\n                                                isLoading ? \"Loading...\" : \"Login as guest\"\n                                            }\n                                        </Button>\n                                        {/*<input className=\"btn btn-lg btn-success btn-block\" type=\"submit\"*/}\n                                        {/*       value=\"Login\" onClick={this.handleClick}/>*/}\n                                    </fieldset>\n                                    <br/>\n                                    <MyAlert type={alert.type} value={alert.value} timeStamp={alert.timeStamp}\n                                             alertId=\"alert-login-form\"></MyAlert>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({user: state.user}),\n    {login}\n)(PageLogin)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {HashRouter, Switch, Route} from 'react-router-dom'\nimport thunk from 'redux-thunk'\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport {Provider} from 'react-redux'\nimport reducer from \"./redux/reducer\";\nimport PageLogin from \"./pages/page-login\";\n\nconst store = createStore(reducer, compose(\n    applyMiddleware(thunk), //解决redux异步问题\n    window.devToolsExtension ? window.devToolsExtension() : f => f // chrome控制台redux工具\n))\n\nReactDOM.render(\n    // <React.StrictMode>\n    <Provider store={store}>\n        <HashRouter>\n            <Switch>\n                <Route path='/login' component={PageLogin}></Route>\n                <Route component={App}></Route>\n            </Switch>\n        </HashRouter>\n    </Provider>,\n// </React.StrictMode>,\n    document.getElementById('root')\n)\n;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}